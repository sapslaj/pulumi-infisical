// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical
{
    public static class GetSecretFolders
    {
        public static Task<GetSecretFoldersResult> InvokeAsync(GetSecretFoldersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretFoldersResult>("infisical:index/getSecretFolders:getSecretFolders", args ?? new GetSecretFoldersArgs(), options.WithDefaults());

        public static Output<GetSecretFoldersResult> Invoke(GetSecretFoldersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretFoldersResult>("infisical:index/getSecretFolders:getSecretFolders", args ?? new GetSecretFoldersInvokeArgs(), options.WithDefaults());

        public static Output<GetSecretFoldersResult> Invoke(GetSecretFoldersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretFoldersResult>("infisical:index/getSecretFolders:getSecretFolders", args ?? new GetSecretFoldersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretFoldersArgs : global::Pulumi.InvokeArgs
    {
        [Input("environmentSlug", required: true)]
        public string EnvironmentSlug { get; set; } = null!;

        [Input("folderPath", required: true)]
        public string FolderPath { get; set; } = null!;

        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetSecretFoldersArgs()
        {
        }
        public static new GetSecretFoldersArgs Empty => new GetSecretFoldersArgs();
    }

    public sealed class GetSecretFoldersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("environmentSlug", required: true)]
        public Input<string> EnvironmentSlug { get; set; } = null!;

        [Input("folderPath", required: true)]
        public Input<string> FolderPath { get; set; } = null!;

        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetSecretFoldersInvokeArgs()
        {
        }
        public static new GetSecretFoldersInvokeArgs Empty => new GetSecretFoldersInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretFoldersResult
    {
        public readonly string EnvironmentSlug;
        public readonly string FolderPath;
        public readonly ImmutableArray<Outputs.GetSecretFoldersFolderResult> Folders;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ProjectId;

        [OutputConstructor]
        private GetSecretFoldersResult(
            string environmentSlug,

            string folderPath,

            ImmutableArray<Outputs.GetSecretFoldersFolderResult> folders,

            string id,

            string projectId)
        {
            EnvironmentSlug = environmentSlug;
            FolderPath = folderPath;
            Folders = folders;
            Id = id;
            ProjectId = projectId;
        }
    }
}
