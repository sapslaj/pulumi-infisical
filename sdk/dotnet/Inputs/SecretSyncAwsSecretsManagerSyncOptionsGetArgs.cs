// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Inputs
{

    public sealed class SecretSyncAwsSecretsManagerSyncOptionsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS KMS key ID to use for encryption
        /// </summary>
        [Input("awsKmsKeyId")]
        public Input<string>? AwsKmsKeyId { get; set; }

        /// <summary>
        /// When set to true, Infisical will not remove secrets from AWS Secrets Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
        /// </summary>
        [Input("disableSecretDeletion")]
        public Input<bool>? DisableSecretDeletion { get; set; }

        /// <summary>
        /// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
        /// </summary>
        [Input("initialSyncBehavior", required: true)]
        public Input<string> InitialSyncBehavior { get; set; } = null!;

        /// <summary>
        /// The format to use for structuring secret keys in the AWS Secrets Manager destination.
        /// </summary>
        [Input("keySchema")]
        public Input<string>? KeySchema { get; set; }

        /// <summary>
        /// Whether to sync the secret metadata as tags. This is only supported for the 'one-to-one' mapping behavior.
        /// </summary>
        [Input("syncSecretMetadataAsTags")]
        public Input<bool>? SyncSecretMetadataAsTags { get; set; }

        [Input("tags")]
        private InputList<Inputs.SecretSyncAwsSecretsManagerSyncOptionsTagGetArgs>? _tags;

        /// <summary>
        /// The tags to sync to the secret
        /// </summary>
        public InputList<Inputs.SecretSyncAwsSecretsManagerSyncOptionsTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.SecretSyncAwsSecretsManagerSyncOptionsTagGetArgs>());
            set => _tags = value;
        }

        public SecretSyncAwsSecretsManagerSyncOptionsGetArgs()
        {
        }
        public static new SecretSyncAwsSecretsManagerSyncOptionsGetArgs Empty => new SecretSyncAwsSecretsManagerSyncOptionsGetArgs();
    }
}
