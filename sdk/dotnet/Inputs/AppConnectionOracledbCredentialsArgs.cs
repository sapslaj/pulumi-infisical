// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Inputs
{

    public sealed class AppConnectionOracledbCredentialsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the database to connect to.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// The hostname of the database server.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password to connect to the database with.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The port number of the database.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The SSL certificate to use for connection.
        /// </summary>
        [Input("sslCertificate")]
        public Input<string>? SslCertificate { get; set; }

        /// <summary>
        /// Whether or not to use SSL when connecting to the database.
        /// </summary>
        [Input("sslEnabled")]
        public Input<bool>? SslEnabled { get; set; }

        /// <summary>
        /// Whether or not to reject unauthorized SSL certificates.
        /// </summary>
        [Input("sslRejectUnauthorized")]
        public Input<bool>? SslRejectUnauthorized { get; set; }

        /// <summary>
        /// The username to connect to the database with.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public AppConnectionOracledbCredentialsArgs()
        {
        }
        public static new AppConnectionOracledbCredentialsArgs Empty => new AppConnectionOracledbCredentialsArgs();
    }
}
