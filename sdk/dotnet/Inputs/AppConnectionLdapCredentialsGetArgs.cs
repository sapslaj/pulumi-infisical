// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Inputs
{

    public sealed class AppConnectionLdapCredentialsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Distinguished Name (DN) or User Principal Name (UPN) of the principal to bind with (e.g., 'CN=John,CN=Users,DC=example,DC=com').
        /// </summary>
        [Input("dn", required: true)]
        public Input<string> Dn { get; set; } = null!;

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// The password to bind with for authentication.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The LDAP provider (e.g., 'active-directory').
        /// </summary>
        [Input("provider", required: true)]
        public Input<string> Provider { get; set; } = null!;

        /// <summary>
        /// The SSL certificate (PEM format) to use for secure connection when using ldaps:// with a self-signed certificate.
        /// </summary>
        [Input("sslCertificate")]
        public Input<string>? SslCertificate { get; set; }

        /// <summary>
        /// Whether or not to reject unauthorized SSL certificates (true/false) when using ldaps://. Set to false only in test environments.
        /// </summary>
        [Input("sslRejectUnauthorized")]
        public Input<bool>? SslRejectUnauthorized { get; set; }

        /// <summary>
        /// The LDAP server URL (e.g., 'ldap://example.com:389' or 'ldaps://example.com:636').
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public AppConnectionLdapCredentialsGetArgs()
        {
        }
        public static new AppConnectionLdapCredentialsGetArgs Empty => new AppConnectionLdapCredentialsGetArgs();
    }
}
