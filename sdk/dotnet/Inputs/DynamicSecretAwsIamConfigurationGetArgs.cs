// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Inputs
{

    public sealed class DynamicSecretAwsIamConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for the 'access_key' authentication method.
        /// </summary>
        [Input("accessKeyConfig")]
        public Input<Inputs.DynamicSecretAwsIamConfigurationAccessKeyConfigGetArgs>? AccessKeyConfig { get; set; }

        /// <summary>
        /// Configuration for the 'assume_role' authentication method.
        /// </summary>
        [Input("assumeRoleConfig")]
        public Input<Inputs.DynamicSecretAwsIamConfigurationAssumeRoleConfigGetArgs>? AssumeRoleConfig { get; set; }

        /// <summary>
        /// IAM AWS Path to scope created IAM User resource access.
        /// </summary>
        [Input("awsPath")]
        public Input<string>? AwsPath { get; set; }

        /// <summary>
        /// The authentication method to use. Must be 'access_key' or 'assume_role'.
        /// </summary>
        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        /// <summary>
        /// The IAM Policy ARN of the AWS Permissions Boundary to attach to IAM users created in the role.
        /// </summary>
        [Input("permissionBoundaryPolicyArn")]
        public Input<string>? PermissionBoundaryPolicyArn { get; set; }

        /// <summary>
        /// The AWS IAM managed policies that should be attached to the created users. Multiple values can be provided by separating them with commas
        /// </summary>
        [Input("policyArns")]
        public Input<string>? PolicyArns { get; set; }

        /// <summary>
        /// The AWS IAM inline policy that should be attached to the created users. Multiple values can be provided by separating them with commas
        /// </summary>
        [Input("policyDocument")]
        public Input<string>? PolicyDocument { get; set; }

        /// <summary>
        /// The AWS data center region.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// The AWS IAM groups that should be assigned to the created users. Multiple values can be provided by separating them with commas
        /// </summary>
        [Input("userGroups")]
        public Input<string>? UserGroups { get; set; }

        public DynamicSecretAwsIamConfigurationGetArgs()
        {
        }
        public static new DynamicSecretAwsIamConfigurationGetArgs Empty => new DynamicSecretAwsIamConfigurationGetArgs();
    }
}
