// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Inputs
{

    public sealed class DynamicSecretKubernetesConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for the 'api' authentication method.
        /// </summary>
        [Input("apiConfig")]
        public Input<Inputs.DynamicSecretKubernetesConfigurationApiConfigArgs>? ApiConfig { get; set; }

        [Input("audiences")]
        private InputList<string>? _audiences;

        /// <summary>
        /// Optional list of audiences to include in the generated token.
        /// </summary>
        public InputList<string> Audiences
        {
            get => _audiences ?? (_audiences = new InputList<string>());
            set => _audiences = value;
        }

        /// <summary>
        /// Choose between Token ('api') or 'gateway' authentication. If using Gateway, the Gateway must be deployed in your Kubernetes cluster.
        /// </summary>
        [Input("authMethod", required: true)]
        public Input<string> AuthMethod { get; set; } = null!;

        /// <summary>
        /// Choose between 'static' (predefined service account) or 'dynamic' (temporary service accounts with role assignments).
        /// </summary>
        [Input("credentialType", required: true)]
        public Input<string> CredentialType { get; set; } = null!;

        /// <summary>
        /// Configuration for the 'dynamic' credential type.
        /// </summary>
        [Input("dynamicConfig")]
        public Input<Inputs.DynamicSecretKubernetesConfigurationDynamicConfigArgs>? DynamicConfig { get; set; }

        /// <summary>
        /// Select a gateway for private cluster access. If not specified, the Internet Gateway will be used.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// Configuration for the 'static' credential type.
        /// </summary>
        [Input("staticConfig")]
        public Input<Inputs.DynamicSecretKubernetesConfigurationStaticConfigArgs>? StaticConfig { get; set; }

        public DynamicSecretKubernetesConfigurationArgs()
        {
        }
        public static new DynamicSecretKubernetesConfigurationArgs Empty => new DynamicSecretKubernetesConfigurationArgs();
    }
}
