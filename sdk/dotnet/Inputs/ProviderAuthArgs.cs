// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Inputs
{

    public sealed class ProviderAuthArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration values for AWS IAM Auth
        /// </summary>
        [Input("awsIam")]
        public Input<Inputs.ProviderAuthAwsIamArgs>? AwsIam { get; set; }

        /// <summary>
        /// The configuration values for Kubernetes Auth
        /// </summary>
        [Input("kubernetes")]
        public Input<Inputs.ProviderAuthKubernetesArgs>? Kubernetes { get; set; }

        /// <summary>
        /// The configuration values for OIDC Auth
        /// </summary>
        [Input("oidc")]
        public Input<Inputs.ProviderAuthOidcArgs>? Oidc { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The authentication token for Machine Identity Token Auth. This attribute can also be set using the `INFISICAL_TOKEN` environment variable
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The configuration values for Universal Auth
        /// </summary>
        [Input("universal")]
        public Input<Inputs.ProviderAuthUniversalArgs>? Universal { get; set; }

        public ProviderAuthArgs()
        {
        }
        public static new ProviderAuthArgs Empty => new ProviderAuthArgs();
    }
}
