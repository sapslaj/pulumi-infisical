// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Inputs
{

    public sealed class DynamicSecretKubernetesConfigurationApiConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom CA certificate for the Kubernetes API server. Leave blank to use the system/public CA.
        /// </summary>
        [Input("ca")]
        public Input<string>? Ca { get; set; }

        [Input("clusterToken", required: true)]
        private Input<string>? _clusterToken;

        /// <summary>
        /// Service account token with permissions to create service accounts and manage RBAC.
        /// </summary>
        public Input<string>? ClusterToken
        {
            get => _clusterToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clusterToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Kubernetes API server URL (e.g., https://kubernetes.default.svc).
        /// </summary>
        [Input("clusterUrl", required: true)]
        public Input<string> ClusterUrl { get; set; } = null!;

        /// <summary>
        /// Whether to enable SSL verification for the Kubernetes API server connection.
        /// </summary>
        [Input("enableSsl")]
        public Input<bool>? EnableSsl { get; set; }

        public DynamicSecretKubernetesConfigurationApiConfigArgs()
        {
        }
        public static new DynamicSecretKubernetesConfigurationApiConfigArgs Empty => new DynamicSecretKubernetesConfigurationApiConfigArgs();
    }
}
