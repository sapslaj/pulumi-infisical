// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical
{
    [InfisicalResourceType("infisical:index/projectTemplate:ProjectTemplate")]
    public partial class ProjectTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the project template
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The environments for the project template
        /// </summary>
        [Output("environments")]
        public Output<ImmutableArray<Outputs.ProjectTemplateEnvironment>> Environments { get; private set; } = null!;

        /// <summary>
        /// The name of the project template
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The roles for the project template
        /// </summary>
        [Output("roles")]
        public Output<ImmutableArray<Outputs.ProjectTemplateRole>> Roles { get; private set; } = null!;

        /// <summary>
        /// The type of the project template. Refer to the documentation here https://infisical.com/docs/api-reference/endpoints/project-templates/create#body-type for the available options
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectTemplate(string name, ProjectTemplateArgs args, CustomResourceOptions? options = null)
            : base("infisical:index/projectTemplate:ProjectTemplate", name, args ?? new ProjectTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectTemplate(string name, Input<string> id, ProjectTemplateState? state = null, CustomResourceOptions? options = null)
            : base("infisical:index/projectTemplate:ProjectTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectTemplate Get(string name, Input<string> id, ProjectTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectTemplate(name, id, state, options);
        }
    }

    public sealed class ProjectTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the project template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environments")]
        private InputList<Inputs.ProjectTemplateEnvironmentArgs>? _environments;

        /// <summary>
        /// The environments for the project template
        /// </summary>
        public InputList<Inputs.ProjectTemplateEnvironmentArgs> Environments
        {
            get => _environments ?? (_environments = new InputList<Inputs.ProjectTemplateEnvironmentArgs>());
            set => _environments = value;
        }

        /// <summary>
        /// The name of the project template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roles")]
        private InputList<Inputs.ProjectTemplateRoleArgs>? _roles;

        /// <summary>
        /// The roles for the project template
        /// </summary>
        public InputList<Inputs.ProjectTemplateRoleArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectTemplateRoleArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The type of the project template. Refer to the documentation here https://infisical.com/docs/api-reference/endpoints/project-templates/create#body-type for the available options
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ProjectTemplateArgs()
        {
        }
        public static new ProjectTemplateArgs Empty => new ProjectTemplateArgs();
    }

    public sealed class ProjectTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the project template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environments")]
        private InputList<Inputs.ProjectTemplateEnvironmentGetArgs>? _environments;

        /// <summary>
        /// The environments for the project template
        /// </summary>
        public InputList<Inputs.ProjectTemplateEnvironmentGetArgs> Environments
        {
            get => _environments ?? (_environments = new InputList<Inputs.ProjectTemplateEnvironmentGetArgs>());
            set => _environments = value;
        }

        /// <summary>
        /// The name of the project template
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roles")]
        private InputList<Inputs.ProjectTemplateRoleGetArgs>? _roles;

        /// <summary>
        /// The roles for the project template
        /// </summary>
        public InputList<Inputs.ProjectTemplateRoleGetArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectTemplateRoleGetArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The type of the project template. Refer to the documentation here https://infisical.com/docs/api-reference/endpoints/project-templates/create#body-type for the available options
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ProjectTemplateState()
        {
        }
        public static new ProjectTemplateState Empty => new ProjectTemplateState();
    }
}
