// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Outputs
{

    [OutputType]
    public sealed class ProjectIdentitySpecificPrivilegePermission
    {
        /// <summary>
        /// Describe what action an entity can take. Enum: create,edit,delete,read
        /// </summary>
        public readonly ImmutableArray<string> Actions;
        /// <summary>
        /// The conditions to scope permissions
        /// </summary>
        public readonly Outputs.ProjectIdentitySpecificPrivilegePermissionConditions Conditions;
        /// <summary>
        /// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
        /// </summary>
        public readonly string Subject;

        [OutputConstructor]
        private ProjectIdentitySpecificPrivilegePermission(
            ImmutableArray<string> actions,

            Outputs.ProjectIdentitySpecificPrivilegePermissionConditions conditions,

            string subject)
        {
            Actions = actions;
            Conditions = conditions;
            Subject = subject;
        }
    }
}
