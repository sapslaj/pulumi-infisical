// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Outputs
{

    [OutputType]
    public sealed class DynamicSecretKubernetesConfiguration
    {
        /// <summary>
        /// Configuration for the 'api' authentication method.
        /// </summary>
        public readonly Outputs.DynamicSecretKubernetesConfigurationApiConfig? ApiConfig;
        /// <summary>
        /// Optional list of audiences to include in the generated token.
        /// </summary>
        public readonly ImmutableArray<string> Audiences;
        /// <summary>
        /// Choose between Token ('api') or 'gateway' authentication. If using Gateway, the Gateway must be deployed in your Kubernetes cluster.
        /// </summary>
        public readonly string AuthMethod;
        /// <summary>
        /// Choose between 'static' (predefined service account) or 'dynamic' (temporary service accounts with role assignments).
        /// </summary>
        public readonly string CredentialType;
        /// <summary>
        /// Configuration for the 'dynamic' credential type.
        /// </summary>
        public readonly Outputs.DynamicSecretKubernetesConfigurationDynamicConfig? DynamicConfig;
        /// <summary>
        /// Select a gateway for private cluster access. If not specified, the Internet Gateway will be used.
        /// </summary>
        public readonly string? GatewayId;
        /// <summary>
        /// Configuration for the 'static' credential type.
        /// </summary>
        public readonly Outputs.DynamicSecretKubernetesConfigurationStaticConfig? StaticConfig;

        [OutputConstructor]
        private DynamicSecretKubernetesConfiguration(
            Outputs.DynamicSecretKubernetesConfigurationApiConfig? apiConfig,

            ImmutableArray<string> audiences,

            string authMethod,

            string credentialType,

            Outputs.DynamicSecretKubernetesConfigurationDynamicConfig? dynamicConfig,

            string? gatewayId,

            Outputs.DynamicSecretKubernetesConfigurationStaticConfig? staticConfig)
        {
            ApiConfig = apiConfig;
            Audiences = audiences;
            AuthMethod = authMethod;
            CredentialType = credentialType;
            DynamicConfig = dynamicConfig;
            GatewayId = gatewayId;
            StaticConfig = staticConfig;
        }
    }
}
