// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Outputs
{

    [OutputType]
    public sealed class ProjectIdentityRole
    {
        /// <summary>
        /// The id of the custom role slug
        /// </summary>
        public readonly string? CustomRoleId;
        /// <summary>
        /// The ID of the project identity role.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Flag to indicate the assigned role is temporary or not. When is_temporary is true fields temporary_mode, temporary_range and temporary_access_start_time is required.
        /// </summary>
        public readonly bool? IsTemporary;
        /// <summary>
        /// The slug of the role
        /// </summary>
        public readonly string RoleSlug;
        /// <summary>
        /// ISO time for which temporary access will end. Computed based on temporary_range and temporary_access_start_time
        /// </summary>
        public readonly string? TemporaryAccessEndTime;
        /// <summary>
        /// ISO time for which temporary access should begin. The current time is used by default.
        /// </summary>
        public readonly string? TemporaryAccessStartTime;
        /// <summary>
        /// Type of temporary access given. Types: relative. Default: relative
        /// </summary>
        public readonly string? TemporaryMode;
        /// <summary>
        /// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
        /// </summary>
        public readonly string? TemporaryRange;

        [OutputConstructor]
        private ProjectIdentityRole(
            string? customRoleId,

            string? id,

            bool? isTemporary,

            string roleSlug,

            string? temporaryAccessEndTime,

            string? temporaryAccessStartTime,

            string? temporaryMode,

            string? temporaryRange)
        {
            CustomRoleId = customRoleId;
            Id = id;
            IsTemporary = isTemporary;
            RoleSlug = roleSlug;
            TemporaryAccessEndTime = temporaryAccessEndTime;
            TemporaryAccessStartTime = temporaryAccessStartTime;
            TemporaryMode = temporaryMode;
            TemporaryRange = temporaryRange;
        }
    }
}
