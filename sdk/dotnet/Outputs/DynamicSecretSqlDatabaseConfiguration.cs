// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Outputs
{

    [OutputType]
    public sealed class DynamicSecretSqlDatabaseConfiguration
    {
        /// <summary>
        /// The CA certificate to use to connect to the database.
        /// </summary>
        public readonly string? Ca;
        /// <summary>
        /// The database client to use. Currently supported values are postgres, mysql2, oracledb, mssql, sap-ase, and vertica.
        /// </summary>
        public readonly string Client;
        /// <summary>
        /// The creation statement to use to create the dynamic secret lease.
        /// </summary>
        public readonly string CreationStatement;
        /// <summary>
        /// The name of the database to use.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// The Gateway ID to use to connect to the database.
        /// </summary>
        public readonly string? GatewayId;
        /// <summary>
        /// The host of the database server.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The password to use to connect to the database.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The password requirements to use to create the dynamic secret lease.
        /// </summary>
        public readonly Outputs.DynamicSecretSqlDatabaseConfigurationPasswordRequirements? PasswordRequirements;
        /// <summary>
        /// The port of the database server.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The renew statement to use to renew the dynamic secret lease.
        /// </summary>
        public readonly string? RenewStatement;
        /// <summary>
        /// The revocation statement to use to revoke the dynamic secret lease.
        /// </summary>
        public readonly string RevocationStatement;
        /// <summary>
        /// The username to use to connect to the database.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private DynamicSecretSqlDatabaseConfiguration(
            string? ca,

            string client,

            string creationStatement,

            string database,

            string? gatewayId,

            string host,

            string password,

            Outputs.DynamicSecretSqlDatabaseConfigurationPasswordRequirements? passwordRequirements,

            int port,

            string? renewStatement,

            string revocationStatement,

            string username)
        {
            Ca = ca;
            Client = client;
            CreationStatement = creationStatement;
            Database = database;
            GatewayId = gatewayId;
            Host = host;
            Password = password;
            PasswordRequirements = passwordRequirements;
            Port = port;
            RenewStatement = renewStatement;
            RevocationStatement = revocationStatement;
            Username = username;
        }
    }
}
