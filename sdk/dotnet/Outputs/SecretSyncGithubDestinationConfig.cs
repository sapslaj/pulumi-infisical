// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical.Outputs
{

    [OutputType]
    public sealed class SecretSyncGithubDestinationConfig
    {
        /// <summary>
        /// The environment to sync the secrets to, required if scope is `repository-environment`
        /// </summary>
        public readonly string? RepositoryEnvironment;
        /// <summary>
        /// The repository to sync the secrets to, required if scope is `repository` or `repository-environment`. This is only the name of the repository, without the repository owner included. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `go-sdk` here.
        /// </summary>
        public readonly string? RepositoryName;
        /// <summary>
        /// The owner of the Github repository, required if scope is `repository`, `repository-environment`, or `organization`. This is the organization name, or the username for personal repositories. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `Infisical` here.
        /// </summary>
        public readonly string? RepositoryOwner;
        /// <summary>
        /// The scope to sync the secrets to, repository|organization
        /// </summary>
        public readonly string Scope;
        /// <summary>
        /// The repository ids to sync the secrets to, required if scope is `organization` and the visibility field is set to `selected`
        /// </summary>
        public readonly ImmutableArray<int> SelectedRepositoryIds;
        /// <summary>
        /// The visibility of the Github repository, required if scope is `organization`. Accepted values are: `all`|`private`|`selected`
        /// </summary>
        public readonly string? Visibility;

        [OutputConstructor]
        private SecretSyncGithubDestinationConfig(
            string? repositoryEnvironment,

            string? repositoryName,

            string? repositoryOwner,

            string scope,

            ImmutableArray<int> selectedRepositoryIds,

            string? visibility)
        {
            RepositoryEnvironment = repositoryEnvironment;
            RepositoryName = repositoryName;
            RepositoryOwner = repositoryOwner;
            Scope = scope;
            SelectedRepositoryIds = selectedRepositoryIds;
            Visibility = visibility;
        }
    }
}
