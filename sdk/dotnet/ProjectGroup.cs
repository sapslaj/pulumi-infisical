// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical
{
    [InfisicalResourceType("infisical:index/projectGroup:ProjectGroup")]
    public partial class ProjectGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the group.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the group.
        /// </summary>
        [Output("groupName")]
        public Output<string?> GroupName { get; private set; } = null!;

        /// <summary>
        /// The membership Id of the project group
        /// </summary>
        [Output("membershipId")]
        public Output<string> MembershipId { get; private set; } = null!;

        /// <summary>
        /// The id of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The roles assigned to the project group
        /// </summary>
        [Output("roles")]
        public Output<ImmutableArray<Outputs.ProjectGroupRole>> Roles { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectGroup(string name, ProjectGroupArgs args, CustomResourceOptions? options = null)
            : base("infisical:index/projectGroup:ProjectGroup", name, args ?? new ProjectGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectGroup(string name, Input<string> id, ProjectGroupState? state = null, CustomResourceOptions? options = null)
            : base("infisical:index/projectGroup:ProjectGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectGroup Get(string name, Input<string> id, ProjectGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectGroup(name, id, state, options);
        }
    }

    public sealed class ProjectGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The name of the group.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// The id of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("roles", required: true)]
        private InputList<Inputs.ProjectGroupRoleArgs>? _roles;

        /// <summary>
        /// The roles assigned to the project group
        /// </summary>
        public InputList<Inputs.ProjectGroupRoleArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectGroupRoleArgs>());
            set => _roles = value;
        }

        public ProjectGroupArgs()
        {
        }
        public static new ProjectGroupArgs Empty => new ProjectGroupArgs();
    }

    public sealed class ProjectGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the group.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The name of the group.
        /// </summary>
        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        /// <summary>
        /// The membership Id of the project group
        /// </summary>
        [Input("membershipId")]
        public Input<string>? MembershipId { get; set; }

        /// <summary>
        /// The id of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("roles")]
        private InputList<Inputs.ProjectGroupRoleGetArgs>? _roles;

        /// <summary>
        /// The roles assigned to the project group
        /// </summary>
        public InputList<Inputs.ProjectGroupRoleGetArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectGroupRoleGetArgs>());
            set => _roles = value;
        }

        public ProjectGroupState()
        {
        }
        public static new ProjectGroupState Empty => new ProjectGroupState();
    }
}
