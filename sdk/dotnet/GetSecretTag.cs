// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical
{
    public static class GetSecretTag
    {
        public static Task<GetSecretTagResult> InvokeAsync(GetSecretTagArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretTagResult>("infisical:index/getSecretTag:getSecretTag", args ?? new GetSecretTagArgs(), options.WithDefaults());

        public static Output<GetSecretTagResult> Invoke(GetSecretTagInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretTagResult>("infisical:index/getSecretTag:getSecretTag", args ?? new GetSecretTagInvokeArgs(), options.WithDefaults());

        public static Output<GetSecretTagResult> Invoke(GetSecretTagInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretTagResult>("infisical:index/getSecretTag:getSecretTag", args ?? new GetSecretTagInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretTagArgs : global::Pulumi.InvokeArgs
    {
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        public GetSecretTagArgs()
        {
        }
        public static new GetSecretTagArgs Empty => new GetSecretTagArgs();
    }

    public sealed class GetSecretTagInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        public GetSecretTagInvokeArgs()
        {
        }
        public static new GetSecretTagInvokeArgs Empty => new GetSecretTagInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretTagResult
    {
        public readonly string Color;
        public readonly string Id;
        public readonly string Name;
        public readonly string ProjectId;
        public readonly string Slug;

        [OutputConstructor]
        private GetSecretTagResult(
            string color,

            string id,

            string name,

            string projectId,

            string slug)
        {
            Color = color;
            Id = id;
            Name = name;
            ProjectId = projectId;
            Slug = slug;
        }
    }
}
