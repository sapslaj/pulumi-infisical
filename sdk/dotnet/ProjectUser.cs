// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Infisical
{
    [InfisicalResourceType("infisical:index/projectUser:ProjectUser")]
    public partial class ProjectUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The membershipId of the project user
        /// </summary>
        [Output("membershipId")]
        public Output<string> MembershipId { get; private set; } = null!;

        /// <summary>
        /// The id of the project
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The roles assigned to the project user
        /// </summary>
        [Output("roles")]
        public Output<ImmutableArray<Outputs.ProjectUserRole>> Roles { get; private set; } = null!;

        /// <summary>
        /// The user details of the project user
        /// </summary>
        [Output("user")]
        public Output<Outputs.ProjectUserUser> User { get; private set; } = null!;

        /// <summary>
        /// The usename of the user. By default its the email
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectUser(string name, ProjectUserArgs args, CustomResourceOptions? options = null)
            : base("infisical:index/projectUser:ProjectUser", name, args ?? new ProjectUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectUser(string name, Input<string> id, ProjectUserState? state = null, CustomResourceOptions? options = null)
            : base("infisical:index/projectUser:ProjectUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectUser Get(string name, Input<string> id, ProjectUserState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectUser(name, id, state, options);
        }
    }

    public sealed class ProjectUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the project
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("roles", required: true)]
        private InputList<Inputs.ProjectUserRoleArgs>? _roles;

        /// <summary>
        /// The roles assigned to the project user
        /// </summary>
        public InputList<Inputs.ProjectUserRoleArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectUserRoleArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The usename of the user. By default its the email
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public ProjectUserArgs()
        {
        }
        public static new ProjectUserArgs Empty => new ProjectUserArgs();
    }

    public sealed class ProjectUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The membershipId of the project user
        /// </summary>
        [Input("membershipId")]
        public Input<string>? MembershipId { get; set; }

        /// <summary>
        /// The id of the project
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("roles")]
        private InputList<Inputs.ProjectUserRoleGetArgs>? _roles;

        /// <summary>
        /// The roles assigned to the project user
        /// </summary>
        public InputList<Inputs.ProjectUserRoleGetArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.ProjectUserRoleGetArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The user details of the project user
        /// </summary>
        [Input("user")]
        public Input<Inputs.ProjectUserUserGetArgs>? User { get; set; }

        /// <summary>
        /// The usename of the user. By default its the email
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ProjectUserState()
        {
        }
        public static new ProjectUserState Empty => new ProjectUserState();
    }
}
