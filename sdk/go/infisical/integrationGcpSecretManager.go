// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type IntegrationGcpSecretManager struct {
	pulumi.CustomResourceState

	// The slug of the environment to sync to GCP Secret Manager (prod, dev, staging, etc).
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The ID of the GCP project.
	GcpProjectId pulumi.StringOutput `pulumi:"gcpProjectId"`
	// The ID of the integration auth, used internally by Infisical.
	IntegrationAuthId pulumi.StringOutput `pulumi:"integrationAuthId"`
	// The ID of the integration, used internally by Infisical.
	IntegrationId pulumi.StringOutput `pulumi:"integrationId"`
	// Integration options
	Options IntegrationGcpSecretManagerOptionsOutput `pulumi:"options"`
	// The ID of your Infisical project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The secret path in Infisical to sync secrets from.
	SecretPath pulumi.StringOutput `pulumi:"secretPath"`
	// Service account json for the GCP project.
	ServiceAccountJson pulumi.StringOutput `pulumi:"serviceAccountJson"`
}

// NewIntegrationGcpSecretManager registers a new resource with the given unique name, arguments, and options.
func NewIntegrationGcpSecretManager(ctx *pulumi.Context,
	name string, args *IntegrationGcpSecretManagerArgs, opts ...pulumi.ResourceOption) (*IntegrationGcpSecretManager, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.GcpProjectId == nil {
		return nil, errors.New("invalid value for required argument 'GcpProjectId'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.SecretPath == nil {
		return nil, errors.New("invalid value for required argument 'SecretPath'")
	}
	if args.ServiceAccountJson == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountJson'")
	}
	if args.ServiceAccountJson != nil {
		args.ServiceAccountJson = pulumi.ToSecret(args.ServiceAccountJson).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"serviceAccountJson",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IntegrationGcpSecretManager
	err := ctx.RegisterResource("infisical:index/integrationGcpSecretManager:IntegrationGcpSecretManager", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationGcpSecretManager gets an existing IntegrationGcpSecretManager resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationGcpSecretManager(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationGcpSecretManagerState, opts ...pulumi.ResourceOption) (*IntegrationGcpSecretManager, error) {
	var resource IntegrationGcpSecretManager
	err := ctx.ReadResource("infisical:index/integrationGcpSecretManager:IntegrationGcpSecretManager", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationGcpSecretManager resources.
type integrationGcpSecretManagerState struct {
	// The slug of the environment to sync to GCP Secret Manager (prod, dev, staging, etc).
	Environment *string `pulumi:"environment"`
	// The ID of the GCP project.
	GcpProjectId *string `pulumi:"gcpProjectId"`
	// The ID of the integration auth, used internally by Infisical.
	IntegrationAuthId *string `pulumi:"integrationAuthId"`
	// The ID of the integration, used internally by Infisical.
	IntegrationId *string `pulumi:"integrationId"`
	// Integration options
	Options *IntegrationGcpSecretManagerOptions `pulumi:"options"`
	// The ID of your Infisical project.
	ProjectId *string `pulumi:"projectId"`
	// The secret path in Infisical to sync secrets from.
	SecretPath *string `pulumi:"secretPath"`
	// Service account json for the GCP project.
	ServiceAccountJson *string `pulumi:"serviceAccountJson"`
}

type IntegrationGcpSecretManagerState struct {
	// The slug of the environment to sync to GCP Secret Manager (prod, dev, staging, etc).
	Environment pulumi.StringPtrInput
	// The ID of the GCP project.
	GcpProjectId pulumi.StringPtrInput
	// The ID of the integration auth, used internally by Infisical.
	IntegrationAuthId pulumi.StringPtrInput
	// The ID of the integration, used internally by Infisical.
	IntegrationId pulumi.StringPtrInput
	// Integration options
	Options IntegrationGcpSecretManagerOptionsPtrInput
	// The ID of your Infisical project.
	ProjectId pulumi.StringPtrInput
	// The secret path in Infisical to sync secrets from.
	SecretPath pulumi.StringPtrInput
	// Service account json for the GCP project.
	ServiceAccountJson pulumi.StringPtrInput
}

func (IntegrationGcpSecretManagerState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationGcpSecretManagerState)(nil)).Elem()
}

type integrationGcpSecretManagerArgs struct {
	// The slug of the environment to sync to GCP Secret Manager (prod, dev, staging, etc).
	Environment string `pulumi:"environment"`
	// The ID of the GCP project.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Integration options
	Options *IntegrationGcpSecretManagerOptions `pulumi:"options"`
	// The ID of your Infisical project.
	ProjectId string `pulumi:"projectId"`
	// The secret path in Infisical to sync secrets from.
	SecretPath string `pulumi:"secretPath"`
	// Service account json for the GCP project.
	ServiceAccountJson string `pulumi:"serviceAccountJson"`
}

// The set of arguments for constructing a IntegrationGcpSecretManager resource.
type IntegrationGcpSecretManagerArgs struct {
	// The slug of the environment to sync to GCP Secret Manager (prod, dev, staging, etc).
	Environment pulumi.StringInput
	// The ID of the GCP project.
	GcpProjectId pulumi.StringInput
	// Integration options
	Options IntegrationGcpSecretManagerOptionsPtrInput
	// The ID of your Infisical project.
	ProjectId pulumi.StringInput
	// The secret path in Infisical to sync secrets from.
	SecretPath pulumi.StringInput
	// Service account json for the GCP project.
	ServiceAccountJson pulumi.StringInput
}

func (IntegrationGcpSecretManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationGcpSecretManagerArgs)(nil)).Elem()
}

type IntegrationGcpSecretManagerInput interface {
	pulumi.Input

	ToIntegrationGcpSecretManagerOutput() IntegrationGcpSecretManagerOutput
	ToIntegrationGcpSecretManagerOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOutput
}

func (*IntegrationGcpSecretManager) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationGcpSecretManager)(nil)).Elem()
}

func (i *IntegrationGcpSecretManager) ToIntegrationGcpSecretManagerOutput() IntegrationGcpSecretManagerOutput {
	return i.ToIntegrationGcpSecretManagerOutputWithContext(context.Background())
}

func (i *IntegrationGcpSecretManager) ToIntegrationGcpSecretManagerOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationGcpSecretManagerOutput)
}

// IntegrationGcpSecretManagerArrayInput is an input type that accepts IntegrationGcpSecretManagerArray and IntegrationGcpSecretManagerArrayOutput values.
// You can construct a concrete instance of `IntegrationGcpSecretManagerArrayInput` via:
//
//	IntegrationGcpSecretManagerArray{ IntegrationGcpSecretManagerArgs{...} }
type IntegrationGcpSecretManagerArrayInput interface {
	pulumi.Input

	ToIntegrationGcpSecretManagerArrayOutput() IntegrationGcpSecretManagerArrayOutput
	ToIntegrationGcpSecretManagerArrayOutputWithContext(context.Context) IntegrationGcpSecretManagerArrayOutput
}

type IntegrationGcpSecretManagerArray []IntegrationGcpSecretManagerInput

func (IntegrationGcpSecretManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationGcpSecretManager)(nil)).Elem()
}

func (i IntegrationGcpSecretManagerArray) ToIntegrationGcpSecretManagerArrayOutput() IntegrationGcpSecretManagerArrayOutput {
	return i.ToIntegrationGcpSecretManagerArrayOutputWithContext(context.Background())
}

func (i IntegrationGcpSecretManagerArray) ToIntegrationGcpSecretManagerArrayOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationGcpSecretManagerArrayOutput)
}

// IntegrationGcpSecretManagerMapInput is an input type that accepts IntegrationGcpSecretManagerMap and IntegrationGcpSecretManagerMapOutput values.
// You can construct a concrete instance of `IntegrationGcpSecretManagerMapInput` via:
//
//	IntegrationGcpSecretManagerMap{ "key": IntegrationGcpSecretManagerArgs{...} }
type IntegrationGcpSecretManagerMapInput interface {
	pulumi.Input

	ToIntegrationGcpSecretManagerMapOutput() IntegrationGcpSecretManagerMapOutput
	ToIntegrationGcpSecretManagerMapOutputWithContext(context.Context) IntegrationGcpSecretManagerMapOutput
}

type IntegrationGcpSecretManagerMap map[string]IntegrationGcpSecretManagerInput

func (IntegrationGcpSecretManagerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationGcpSecretManager)(nil)).Elem()
}

func (i IntegrationGcpSecretManagerMap) ToIntegrationGcpSecretManagerMapOutput() IntegrationGcpSecretManagerMapOutput {
	return i.ToIntegrationGcpSecretManagerMapOutputWithContext(context.Background())
}

func (i IntegrationGcpSecretManagerMap) ToIntegrationGcpSecretManagerMapOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationGcpSecretManagerMapOutput)
}

type IntegrationGcpSecretManagerOutput struct{ *pulumi.OutputState }

func (IntegrationGcpSecretManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationGcpSecretManager)(nil)).Elem()
}

func (o IntegrationGcpSecretManagerOutput) ToIntegrationGcpSecretManagerOutput() IntegrationGcpSecretManagerOutput {
	return o
}

func (o IntegrationGcpSecretManagerOutput) ToIntegrationGcpSecretManagerOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOutput {
	return o
}

// The slug of the environment to sync to GCP Secret Manager (prod, dev, staging, etc).
func (o IntegrationGcpSecretManagerOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The ID of the GCP project.
func (o IntegrationGcpSecretManagerOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) pulumi.StringOutput { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The ID of the integration auth, used internally by Infisical.
func (o IntegrationGcpSecretManagerOutput) IntegrationAuthId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) pulumi.StringOutput { return v.IntegrationAuthId }).(pulumi.StringOutput)
}

// The ID of the integration, used internally by Infisical.
func (o IntegrationGcpSecretManagerOutput) IntegrationId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) pulumi.StringOutput { return v.IntegrationId }).(pulumi.StringOutput)
}

// Integration options
func (o IntegrationGcpSecretManagerOutput) Options() IntegrationGcpSecretManagerOptionsOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) IntegrationGcpSecretManagerOptionsOutput { return v.Options }).(IntegrationGcpSecretManagerOptionsOutput)
}

// The ID of your Infisical project.
func (o IntegrationGcpSecretManagerOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The secret path in Infisical to sync secrets from.
func (o IntegrationGcpSecretManagerOutput) SecretPath() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) pulumi.StringOutput { return v.SecretPath }).(pulumi.StringOutput)
}

// Service account json for the GCP project.
func (o IntegrationGcpSecretManagerOutput) ServiceAccountJson() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManager) pulumi.StringOutput { return v.ServiceAccountJson }).(pulumi.StringOutput)
}

type IntegrationGcpSecretManagerArrayOutput struct{ *pulumi.OutputState }

func (IntegrationGcpSecretManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationGcpSecretManager)(nil)).Elem()
}

func (o IntegrationGcpSecretManagerArrayOutput) ToIntegrationGcpSecretManagerArrayOutput() IntegrationGcpSecretManagerArrayOutput {
	return o
}

func (o IntegrationGcpSecretManagerArrayOutput) ToIntegrationGcpSecretManagerArrayOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerArrayOutput {
	return o
}

func (o IntegrationGcpSecretManagerArrayOutput) Index(i pulumi.IntInput) IntegrationGcpSecretManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IntegrationGcpSecretManager {
		return vs[0].([]*IntegrationGcpSecretManager)[vs[1].(int)]
	}).(IntegrationGcpSecretManagerOutput)
}

type IntegrationGcpSecretManagerMapOutput struct{ *pulumi.OutputState }

func (IntegrationGcpSecretManagerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationGcpSecretManager)(nil)).Elem()
}

func (o IntegrationGcpSecretManagerMapOutput) ToIntegrationGcpSecretManagerMapOutput() IntegrationGcpSecretManagerMapOutput {
	return o
}

func (o IntegrationGcpSecretManagerMapOutput) ToIntegrationGcpSecretManagerMapOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerMapOutput {
	return o
}

func (o IntegrationGcpSecretManagerMapOutput) MapIndex(k pulumi.StringInput) IntegrationGcpSecretManagerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IntegrationGcpSecretManager {
		return vs[0].(map[string]*IntegrationGcpSecretManager)[vs[1].(string)]
	}).(IntegrationGcpSecretManagerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationGcpSecretManagerInput)(nil)).Elem(), &IntegrationGcpSecretManager{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationGcpSecretManagerArrayInput)(nil)).Elem(), IntegrationGcpSecretManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationGcpSecretManagerMapInput)(nil)).Elem(), IntegrationGcpSecretManagerMap{})
	pulumi.RegisterOutputType(IntegrationGcpSecretManagerOutput{})
	pulumi.RegisterOutputType(IntegrationGcpSecretManagerArrayOutput{})
	pulumi.RegisterOutputType(IntegrationGcpSecretManagerMapOutput{})
}
