// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type SecretSyncAzureDevops struct {
	pulumi.CustomResourceState

	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolOutput `pulumi:"autoSyncEnabled"`
	// The ID of the azure Connection to use for syncing.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// An optional description for the Azure DevOps sync.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureDevopsDestinationConfigOutput `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The name of the Azure DevOps sync to create. Must be slug-friendly.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath pulumi.StringOutput `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureDevopsSyncOptionsOutput `pulumi:"syncOptions"`
}

// NewSecretSyncAzureDevops registers a new resource with the given unique name, arguments, and options.
func NewSecretSyncAzureDevops(ctx *pulumi.Context,
	name string, args *SecretSyncAzureDevopsArgs, opts ...pulumi.ResourceOption) (*SecretSyncAzureDevops, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.DestinationConfig == nil {
		return nil, errors.New("invalid value for required argument 'DestinationConfig'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.SecretPath == nil {
		return nil, errors.New("invalid value for required argument 'SecretPath'")
	}
	if args.SyncOptions == nil {
		return nil, errors.New("invalid value for required argument 'SyncOptions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretSyncAzureDevops
	err := ctx.RegisterResource("infisical:index/secretSyncAzureDevops:SecretSyncAzureDevops", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretSyncAzureDevops gets an existing SecretSyncAzureDevops resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretSyncAzureDevops(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretSyncAzureDevopsState, opts ...pulumi.ResourceOption) (*SecretSyncAzureDevops, error) {
	var resource SecretSyncAzureDevops
	err := ctx.ReadResource("infisical:index/secretSyncAzureDevops:SecretSyncAzureDevops", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretSyncAzureDevops resources.
type secretSyncAzureDevopsState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the azure Connection to use for syncing.
	ConnectionId *string `pulumi:"connectionId"`
	// An optional description for the Azure DevOps sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig *SecretSyncAzureDevopsDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment *string `pulumi:"environment"`
	// The name of the Azure DevOps sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId *string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath *string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions *SecretSyncAzureDevopsSyncOptions `pulumi:"syncOptions"`
}

type SecretSyncAzureDevopsState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the azure Connection to use for syncing.
	ConnectionId pulumi.StringPtrInput
	// An optional description for the Azure DevOps sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureDevopsDestinationConfigPtrInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringPtrInput
	// The name of the Azure DevOps sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringPtrInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringPtrInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureDevopsSyncOptionsPtrInput
}

func (SecretSyncAzureDevopsState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAzureDevopsState)(nil)).Elem()
}

type secretSyncAzureDevopsArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the azure Connection to use for syncing.
	ConnectionId string `pulumi:"connectionId"`
	// An optional description for the Azure DevOps sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureDevopsDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment string `pulumi:"environment"`
	// The name of the Azure DevOps sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureDevopsSyncOptions `pulumi:"syncOptions"`
}

// The set of arguments for constructing a SecretSyncAzureDevops resource.
type SecretSyncAzureDevopsArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the azure Connection to use for syncing.
	ConnectionId pulumi.StringInput
	// An optional description for the Azure DevOps sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureDevopsDestinationConfigInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringInput
	// The name of the Azure DevOps sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureDevopsSyncOptionsInput
}

func (SecretSyncAzureDevopsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAzureDevopsArgs)(nil)).Elem()
}

type SecretSyncAzureDevopsInput interface {
	pulumi.Input

	ToSecretSyncAzureDevopsOutput() SecretSyncAzureDevopsOutput
	ToSecretSyncAzureDevopsOutputWithContext(ctx context.Context) SecretSyncAzureDevopsOutput
}

func (*SecretSyncAzureDevops) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureDevops)(nil)).Elem()
}

func (i *SecretSyncAzureDevops) ToSecretSyncAzureDevopsOutput() SecretSyncAzureDevopsOutput {
	return i.ToSecretSyncAzureDevopsOutputWithContext(context.Background())
}

func (i *SecretSyncAzureDevops) ToSecretSyncAzureDevopsOutputWithContext(ctx context.Context) SecretSyncAzureDevopsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsOutput)
}

// SecretSyncAzureDevopsArrayInput is an input type that accepts SecretSyncAzureDevopsArray and SecretSyncAzureDevopsArrayOutput values.
// You can construct a concrete instance of `SecretSyncAzureDevopsArrayInput` via:
//
//	SecretSyncAzureDevopsArray{ SecretSyncAzureDevopsArgs{...} }
type SecretSyncAzureDevopsArrayInput interface {
	pulumi.Input

	ToSecretSyncAzureDevopsArrayOutput() SecretSyncAzureDevopsArrayOutput
	ToSecretSyncAzureDevopsArrayOutputWithContext(context.Context) SecretSyncAzureDevopsArrayOutput
}

type SecretSyncAzureDevopsArray []SecretSyncAzureDevopsInput

func (SecretSyncAzureDevopsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAzureDevops)(nil)).Elem()
}

func (i SecretSyncAzureDevopsArray) ToSecretSyncAzureDevopsArrayOutput() SecretSyncAzureDevopsArrayOutput {
	return i.ToSecretSyncAzureDevopsArrayOutputWithContext(context.Background())
}

func (i SecretSyncAzureDevopsArray) ToSecretSyncAzureDevopsArrayOutputWithContext(ctx context.Context) SecretSyncAzureDevopsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsArrayOutput)
}

// SecretSyncAzureDevopsMapInput is an input type that accepts SecretSyncAzureDevopsMap and SecretSyncAzureDevopsMapOutput values.
// You can construct a concrete instance of `SecretSyncAzureDevopsMapInput` via:
//
//	SecretSyncAzureDevopsMap{ "key": SecretSyncAzureDevopsArgs{...} }
type SecretSyncAzureDevopsMapInput interface {
	pulumi.Input

	ToSecretSyncAzureDevopsMapOutput() SecretSyncAzureDevopsMapOutput
	ToSecretSyncAzureDevopsMapOutputWithContext(context.Context) SecretSyncAzureDevopsMapOutput
}

type SecretSyncAzureDevopsMap map[string]SecretSyncAzureDevopsInput

func (SecretSyncAzureDevopsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAzureDevops)(nil)).Elem()
}

func (i SecretSyncAzureDevopsMap) ToSecretSyncAzureDevopsMapOutput() SecretSyncAzureDevopsMapOutput {
	return i.ToSecretSyncAzureDevopsMapOutputWithContext(context.Background())
}

func (i SecretSyncAzureDevopsMap) ToSecretSyncAzureDevopsMapOutputWithContext(ctx context.Context) SecretSyncAzureDevopsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsMapOutput)
}

type SecretSyncAzureDevopsOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureDevopsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureDevops)(nil)).Elem()
}

func (o SecretSyncAzureDevopsOutput) ToSecretSyncAzureDevopsOutput() SecretSyncAzureDevopsOutput {
	return o
}

func (o SecretSyncAzureDevopsOutput) ToSecretSyncAzureDevopsOutputWithContext(ctx context.Context) SecretSyncAzureDevopsOutput {
	return o
}

// Whether secrets should be automatically synced when changes occur at the source location or not.
func (o SecretSyncAzureDevopsOutput) AutoSyncEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) pulumi.BoolOutput { return v.AutoSyncEnabled }).(pulumi.BoolOutput)
}

// The ID of the azure Connection to use for syncing.
func (o SecretSyncAzureDevopsOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// An optional description for the Azure DevOps sync.
func (o SecretSyncAzureDevopsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination configuration for the secret sync.
func (o SecretSyncAzureDevopsOutput) DestinationConfig() SecretSyncAzureDevopsDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) SecretSyncAzureDevopsDestinationConfigOutput {
		return v.DestinationConfig
	}).(SecretSyncAzureDevopsDestinationConfigOutput)
}

// The slug of the project environment to sync secrets from.
func (o SecretSyncAzureDevopsOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The name of the Azure DevOps sync to create. Must be slug-friendly.
func (o SecretSyncAzureDevopsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Infisical project to create the sync in.
func (o SecretSyncAzureDevopsOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The folder path to sync secrets from.
func (o SecretSyncAzureDevopsOutput) SecretPath() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) pulumi.StringOutput { return v.SecretPath }).(pulumi.StringOutput)
}

// Parameters to modify how secrets are synced.
func (o SecretSyncAzureDevopsOutput) SyncOptions() SecretSyncAzureDevopsSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevops) SecretSyncAzureDevopsSyncOptionsOutput { return v.SyncOptions }).(SecretSyncAzureDevopsSyncOptionsOutput)
}

type SecretSyncAzureDevopsArrayOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureDevopsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAzureDevops)(nil)).Elem()
}

func (o SecretSyncAzureDevopsArrayOutput) ToSecretSyncAzureDevopsArrayOutput() SecretSyncAzureDevopsArrayOutput {
	return o
}

func (o SecretSyncAzureDevopsArrayOutput) ToSecretSyncAzureDevopsArrayOutputWithContext(ctx context.Context) SecretSyncAzureDevopsArrayOutput {
	return o
}

func (o SecretSyncAzureDevopsArrayOutput) Index(i pulumi.IntInput) SecretSyncAzureDevopsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretSyncAzureDevops {
		return vs[0].([]*SecretSyncAzureDevops)[vs[1].(int)]
	}).(SecretSyncAzureDevopsOutput)
}

type SecretSyncAzureDevopsMapOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureDevopsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAzureDevops)(nil)).Elem()
}

func (o SecretSyncAzureDevopsMapOutput) ToSecretSyncAzureDevopsMapOutput() SecretSyncAzureDevopsMapOutput {
	return o
}

func (o SecretSyncAzureDevopsMapOutput) ToSecretSyncAzureDevopsMapOutputWithContext(ctx context.Context) SecretSyncAzureDevopsMapOutput {
	return o
}

func (o SecretSyncAzureDevopsMapOutput) MapIndex(k pulumi.StringInput) SecretSyncAzureDevopsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretSyncAzureDevops {
		return vs[0].(map[string]*SecretSyncAzureDevops)[vs[1].(string)]
	}).(SecretSyncAzureDevopsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureDevopsInput)(nil)).Elem(), &SecretSyncAzureDevops{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureDevopsArrayInput)(nil)).Elem(), SecretSyncAzureDevopsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureDevopsMapInput)(nil)).Elem(), SecretSyncAzureDevopsMap{})
	pulumi.RegisterOutputType(SecretSyncAzureDevopsOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureDevopsArrayOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureDevopsMapOutput{})
}
