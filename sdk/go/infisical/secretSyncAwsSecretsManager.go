// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type SecretSyncAwsSecretsManager struct {
	pulumi.CustomResourceState

	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolOutput `pulumi:"autoSyncEnabled"`
	// The ID of the aws Connection to use for syncing.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// An optional description for the AWS Secrets Manager sync.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsSecretsManagerDestinationConfigOutput `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The name of the AWS Secrets Manager sync to create. Must be slug-friendly.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath pulumi.StringOutput `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsSecretsManagerSyncOptionsOutput `pulumi:"syncOptions"`
}

// NewSecretSyncAwsSecretsManager registers a new resource with the given unique name, arguments, and options.
func NewSecretSyncAwsSecretsManager(ctx *pulumi.Context,
	name string, args *SecretSyncAwsSecretsManagerArgs, opts ...pulumi.ResourceOption) (*SecretSyncAwsSecretsManager, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.DestinationConfig == nil {
		return nil, errors.New("invalid value for required argument 'DestinationConfig'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.SecretPath == nil {
		return nil, errors.New("invalid value for required argument 'SecretPath'")
	}
	if args.SyncOptions == nil {
		return nil, errors.New("invalid value for required argument 'SyncOptions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretSyncAwsSecretsManager
	err := ctx.RegisterResource("infisical:index/secretSyncAwsSecretsManager:SecretSyncAwsSecretsManager", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretSyncAwsSecretsManager gets an existing SecretSyncAwsSecretsManager resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretSyncAwsSecretsManager(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretSyncAwsSecretsManagerState, opts ...pulumi.ResourceOption) (*SecretSyncAwsSecretsManager, error) {
	var resource SecretSyncAwsSecretsManager
	err := ctx.ReadResource("infisical:index/secretSyncAwsSecretsManager:SecretSyncAwsSecretsManager", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretSyncAwsSecretsManager resources.
type secretSyncAwsSecretsManagerState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the aws Connection to use for syncing.
	ConnectionId *string `pulumi:"connectionId"`
	// An optional description for the AWS Secrets Manager sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig *SecretSyncAwsSecretsManagerDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment *string `pulumi:"environment"`
	// The name of the AWS Secrets Manager sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId *string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath *string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions *SecretSyncAwsSecretsManagerSyncOptions `pulumi:"syncOptions"`
}

type SecretSyncAwsSecretsManagerState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the aws Connection to use for syncing.
	ConnectionId pulumi.StringPtrInput
	// An optional description for the AWS Secrets Manager sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsSecretsManagerDestinationConfigPtrInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringPtrInput
	// The name of the AWS Secrets Manager sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringPtrInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringPtrInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsSecretsManagerSyncOptionsPtrInput
}

func (SecretSyncAwsSecretsManagerState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAwsSecretsManagerState)(nil)).Elem()
}

type secretSyncAwsSecretsManagerArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the aws Connection to use for syncing.
	ConnectionId string `pulumi:"connectionId"`
	// An optional description for the AWS Secrets Manager sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsSecretsManagerDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment string `pulumi:"environment"`
	// The name of the AWS Secrets Manager sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsSecretsManagerSyncOptions `pulumi:"syncOptions"`
}

// The set of arguments for constructing a SecretSyncAwsSecretsManager resource.
type SecretSyncAwsSecretsManagerArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the aws Connection to use for syncing.
	ConnectionId pulumi.StringInput
	// An optional description for the AWS Secrets Manager sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsSecretsManagerDestinationConfigInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringInput
	// The name of the AWS Secrets Manager sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsSecretsManagerSyncOptionsInput
}

func (SecretSyncAwsSecretsManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAwsSecretsManagerArgs)(nil)).Elem()
}

type SecretSyncAwsSecretsManagerInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerOutput() SecretSyncAwsSecretsManagerOutput
	ToSecretSyncAwsSecretsManagerOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerOutput
}

func (*SecretSyncAwsSecretsManager) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsSecretsManager)(nil)).Elem()
}

func (i *SecretSyncAwsSecretsManager) ToSecretSyncAwsSecretsManagerOutput() SecretSyncAwsSecretsManagerOutput {
	return i.ToSecretSyncAwsSecretsManagerOutputWithContext(context.Background())
}

func (i *SecretSyncAwsSecretsManager) ToSecretSyncAwsSecretsManagerOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerOutput)
}

// SecretSyncAwsSecretsManagerArrayInput is an input type that accepts SecretSyncAwsSecretsManagerArray and SecretSyncAwsSecretsManagerArrayOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerArrayInput` via:
//
//	SecretSyncAwsSecretsManagerArray{ SecretSyncAwsSecretsManagerArgs{...} }
type SecretSyncAwsSecretsManagerArrayInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerArrayOutput() SecretSyncAwsSecretsManagerArrayOutput
	ToSecretSyncAwsSecretsManagerArrayOutputWithContext(context.Context) SecretSyncAwsSecretsManagerArrayOutput
}

type SecretSyncAwsSecretsManagerArray []SecretSyncAwsSecretsManagerInput

func (SecretSyncAwsSecretsManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAwsSecretsManager)(nil)).Elem()
}

func (i SecretSyncAwsSecretsManagerArray) ToSecretSyncAwsSecretsManagerArrayOutput() SecretSyncAwsSecretsManagerArrayOutput {
	return i.ToSecretSyncAwsSecretsManagerArrayOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerArray) ToSecretSyncAwsSecretsManagerArrayOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerArrayOutput)
}

// SecretSyncAwsSecretsManagerMapInput is an input type that accepts SecretSyncAwsSecretsManagerMap and SecretSyncAwsSecretsManagerMapOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerMapInput` via:
//
//	SecretSyncAwsSecretsManagerMap{ "key": SecretSyncAwsSecretsManagerArgs{...} }
type SecretSyncAwsSecretsManagerMapInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerMapOutput() SecretSyncAwsSecretsManagerMapOutput
	ToSecretSyncAwsSecretsManagerMapOutputWithContext(context.Context) SecretSyncAwsSecretsManagerMapOutput
}

type SecretSyncAwsSecretsManagerMap map[string]SecretSyncAwsSecretsManagerInput

func (SecretSyncAwsSecretsManagerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAwsSecretsManager)(nil)).Elem()
}

func (i SecretSyncAwsSecretsManagerMap) ToSecretSyncAwsSecretsManagerMapOutput() SecretSyncAwsSecretsManagerMapOutput {
	return i.ToSecretSyncAwsSecretsManagerMapOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerMap) ToSecretSyncAwsSecretsManagerMapOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerMapOutput)
}

type SecretSyncAwsSecretsManagerOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsSecretsManager)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerOutput) ToSecretSyncAwsSecretsManagerOutput() SecretSyncAwsSecretsManagerOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerOutput) ToSecretSyncAwsSecretsManagerOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerOutput {
	return o
}

// Whether secrets should be automatically synced when changes occur at the source location or not.
func (o SecretSyncAwsSecretsManagerOutput) AutoSyncEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) pulumi.BoolOutput { return v.AutoSyncEnabled }).(pulumi.BoolOutput)
}

// The ID of the aws Connection to use for syncing.
func (o SecretSyncAwsSecretsManagerOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// An optional description for the AWS Secrets Manager sync.
func (o SecretSyncAwsSecretsManagerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination configuration for the secret sync.
func (o SecretSyncAwsSecretsManagerOutput) DestinationConfig() SecretSyncAwsSecretsManagerDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) SecretSyncAwsSecretsManagerDestinationConfigOutput {
		return v.DestinationConfig
	}).(SecretSyncAwsSecretsManagerDestinationConfigOutput)
}

// The slug of the project environment to sync secrets from.
func (o SecretSyncAwsSecretsManagerOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The name of the AWS Secrets Manager sync to create. Must be slug-friendly.
func (o SecretSyncAwsSecretsManagerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Infisical project to create the sync in.
func (o SecretSyncAwsSecretsManagerOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The folder path to sync secrets from.
func (o SecretSyncAwsSecretsManagerOutput) SecretPath() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) pulumi.StringOutput { return v.SecretPath }).(pulumi.StringOutput)
}

// Parameters to modify how secrets are synced.
func (o SecretSyncAwsSecretsManagerOutput) SyncOptions() SecretSyncAwsSecretsManagerSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManager) SecretSyncAwsSecretsManagerSyncOptionsOutput {
		return v.SyncOptions
	}).(SecretSyncAwsSecretsManagerSyncOptionsOutput)
}

type SecretSyncAwsSecretsManagerArrayOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAwsSecretsManager)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerArrayOutput) ToSecretSyncAwsSecretsManagerArrayOutput() SecretSyncAwsSecretsManagerArrayOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerArrayOutput) ToSecretSyncAwsSecretsManagerArrayOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerArrayOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerArrayOutput) Index(i pulumi.IntInput) SecretSyncAwsSecretsManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretSyncAwsSecretsManager {
		return vs[0].([]*SecretSyncAwsSecretsManager)[vs[1].(int)]
	}).(SecretSyncAwsSecretsManagerOutput)
}

type SecretSyncAwsSecretsManagerMapOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAwsSecretsManager)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerMapOutput) ToSecretSyncAwsSecretsManagerMapOutput() SecretSyncAwsSecretsManagerMapOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerMapOutput) ToSecretSyncAwsSecretsManagerMapOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerMapOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerMapOutput) MapIndex(k pulumi.StringInput) SecretSyncAwsSecretsManagerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretSyncAwsSecretsManager {
		return vs[0].(map[string]*SecretSyncAwsSecretsManager)[vs[1].(string)]
	}).(SecretSyncAwsSecretsManagerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerInput)(nil)).Elem(), &SecretSyncAwsSecretsManager{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerArrayInput)(nil)).Elem(), SecretSyncAwsSecretsManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerMapInput)(nil)).Elem(), SecretSyncAwsSecretsManagerMap{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerArrayOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerMapOutput{})
}
