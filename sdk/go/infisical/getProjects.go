// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

func GetProjects(ctx *pulumi.Context, args *GetProjectsArgs, opts ...pulumi.InvokeOption) (*GetProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProjectsResult
	err := ctx.Invoke("infisical:index/getProjects:getProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjects.
type GetProjectsArgs struct {
	Slug string `pulumi:"slug"`
}

// A collection of values returned by getProjects.
type GetProjectsResult struct {
	AutoCapitalization bool                               `pulumi:"autoCapitalization"`
	CreatedAt          string                             `pulumi:"createdAt"`
	Environments       map[string]GetProjectsEnvironments `pulumi:"environments"`
	Id                 string                             `pulumi:"id"`
	Name               string                             `pulumi:"name"`
	OrgId              string                             `pulumi:"orgId"`
	Slug               string                             `pulumi:"slug"`
	UpdatedAt          string                             `pulumi:"updatedAt"`
	UpgradeStatus      string                             `pulumi:"upgradeStatus"`
	Version            int                                `pulumi:"version"`
}

func GetProjectsOutput(ctx *pulumi.Context, args GetProjectsOutputArgs, opts ...pulumi.InvokeOption) GetProjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetProjectsResultOutput, error) {
			args := v.(GetProjectsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("infisical:index/getProjects:getProjects", args, GetProjectsResultOutput{}, options).(GetProjectsResultOutput), nil
		}).(GetProjectsResultOutput)
}

// A collection of arguments for invoking getProjects.
type GetProjectsOutputArgs struct {
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsArgs)(nil)).Elem()
}

// A collection of values returned by getProjects.
type GetProjectsResultOutput struct{ *pulumi.OutputState }

func (GetProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsResult)(nil)).Elem()
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutput() GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) ToGetProjectsResultOutputWithContext(ctx context.Context) GetProjectsResultOutput {
	return o
}

func (o GetProjectsResultOutput) AutoCapitalization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsResult) bool { return v.AutoCapitalization }).(pulumi.BoolOutput)
}

func (o GetProjectsResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) Environments() GetProjectsEnvironmentsMapOutput {
	return o.ApplyT(func(v GetProjectsResult) map[string]GetProjectsEnvironments { return v.Environments }).(GetProjectsEnvironmentsMapOutput)
}

func (o GetProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) UpgradeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsResult) string { return v.UpgradeStatus }).(pulumi.StringOutput)
}

func (o GetProjectsResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectsResultOutput{})
}
