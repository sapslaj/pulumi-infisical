// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

var _ = internal.GetEnvOrDefault

type AccessApprovalPolicyApprover struct {
	// The ID of the approver
	Id *string `pulumi:"id"`
	// The type of approver. Either group or user
	Type string `pulumi:"type"`
	// The username of the approver. By default, this is the email
	Username *string `pulumi:"username"`
}

// AccessApprovalPolicyApproverInput is an input type that accepts AccessApprovalPolicyApproverArgs and AccessApprovalPolicyApproverOutput values.
// You can construct a concrete instance of `AccessApprovalPolicyApproverInput` via:
//
//	AccessApprovalPolicyApproverArgs{...}
type AccessApprovalPolicyApproverInput interface {
	pulumi.Input

	ToAccessApprovalPolicyApproverOutput() AccessApprovalPolicyApproverOutput
	ToAccessApprovalPolicyApproverOutputWithContext(context.Context) AccessApprovalPolicyApproverOutput
}

type AccessApprovalPolicyApproverArgs struct {
	// The ID of the approver
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The type of approver. Either group or user
	Type pulumi.StringInput `pulumi:"type"`
	// The username of the approver. By default, this is the email
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (AccessApprovalPolicyApproverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalPolicyApprover)(nil)).Elem()
}

func (i AccessApprovalPolicyApproverArgs) ToAccessApprovalPolicyApproverOutput() AccessApprovalPolicyApproverOutput {
	return i.ToAccessApprovalPolicyApproverOutputWithContext(context.Background())
}

func (i AccessApprovalPolicyApproverArgs) ToAccessApprovalPolicyApproverOutputWithContext(ctx context.Context) AccessApprovalPolicyApproverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalPolicyApproverOutput)
}

// AccessApprovalPolicyApproverArrayInput is an input type that accepts AccessApprovalPolicyApproverArray and AccessApprovalPolicyApproverArrayOutput values.
// You can construct a concrete instance of `AccessApprovalPolicyApproverArrayInput` via:
//
//	AccessApprovalPolicyApproverArray{ AccessApprovalPolicyApproverArgs{...} }
type AccessApprovalPolicyApproverArrayInput interface {
	pulumi.Input

	ToAccessApprovalPolicyApproverArrayOutput() AccessApprovalPolicyApproverArrayOutput
	ToAccessApprovalPolicyApproverArrayOutputWithContext(context.Context) AccessApprovalPolicyApproverArrayOutput
}

type AccessApprovalPolicyApproverArray []AccessApprovalPolicyApproverInput

func (AccessApprovalPolicyApproverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalPolicyApprover)(nil)).Elem()
}

func (i AccessApprovalPolicyApproverArray) ToAccessApprovalPolicyApproverArrayOutput() AccessApprovalPolicyApproverArrayOutput {
	return i.ToAccessApprovalPolicyApproverArrayOutputWithContext(context.Background())
}

func (i AccessApprovalPolicyApproverArray) ToAccessApprovalPolicyApproverArrayOutputWithContext(ctx context.Context) AccessApprovalPolicyApproverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessApprovalPolicyApproverArrayOutput)
}

type AccessApprovalPolicyApproverOutput struct{ *pulumi.OutputState }

func (AccessApprovalPolicyApproverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessApprovalPolicyApprover)(nil)).Elem()
}

func (o AccessApprovalPolicyApproverOutput) ToAccessApprovalPolicyApproverOutput() AccessApprovalPolicyApproverOutput {
	return o
}

func (o AccessApprovalPolicyApproverOutput) ToAccessApprovalPolicyApproverOutputWithContext(ctx context.Context) AccessApprovalPolicyApproverOutput {
	return o
}

// The ID of the approver
func (o AccessApprovalPolicyApproverOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessApprovalPolicyApprover) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The type of approver. Either group or user
func (o AccessApprovalPolicyApproverOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccessApprovalPolicyApprover) string { return v.Type }).(pulumi.StringOutput)
}

// The username of the approver. By default, this is the email
func (o AccessApprovalPolicyApproverOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessApprovalPolicyApprover) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type AccessApprovalPolicyApproverArrayOutput struct{ *pulumi.OutputState }

func (AccessApprovalPolicyApproverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccessApprovalPolicyApprover)(nil)).Elem()
}

func (o AccessApprovalPolicyApproverArrayOutput) ToAccessApprovalPolicyApproverArrayOutput() AccessApprovalPolicyApproverArrayOutput {
	return o
}

func (o AccessApprovalPolicyApproverArrayOutput) ToAccessApprovalPolicyApproverArrayOutputWithContext(ctx context.Context) AccessApprovalPolicyApproverArrayOutput {
	return o
}

func (o AccessApprovalPolicyApproverArrayOutput) Index(i pulumi.IntInput) AccessApprovalPolicyApproverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccessApprovalPolicyApprover {
		return vs[0].([]AccessApprovalPolicyApprover)[vs[1].(int)]
	}).(AccessApprovalPolicyApproverOutput)
}

type AppConnection1passwordCredentials struct {
	// The API token to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
	ApiToken string `pulumi:"apiToken"`
	// The URL of the 1Password Connect instance to connect to. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
	InstanceUrl string `pulumi:"instanceUrl"`
}

// AppConnection1passwordCredentialsInput is an input type that accepts AppConnection1passwordCredentialsArgs and AppConnection1passwordCredentialsOutput values.
// You can construct a concrete instance of `AppConnection1passwordCredentialsInput` via:
//
//	AppConnection1passwordCredentialsArgs{...}
type AppConnection1passwordCredentialsInput interface {
	pulumi.Input

	ToAppConnection1passwordCredentialsOutput() AppConnection1passwordCredentialsOutput
	ToAppConnection1passwordCredentialsOutputWithContext(context.Context) AppConnection1passwordCredentialsOutput
}

type AppConnection1passwordCredentialsArgs struct {
	// The API token to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
	// The URL of the 1Password Connect instance to connect to. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
	InstanceUrl pulumi.StringInput `pulumi:"instanceUrl"`
}

func (AppConnection1passwordCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnection1passwordCredentials)(nil)).Elem()
}

func (i AppConnection1passwordCredentialsArgs) ToAppConnection1passwordCredentialsOutput() AppConnection1passwordCredentialsOutput {
	return i.ToAppConnection1passwordCredentialsOutputWithContext(context.Background())
}

func (i AppConnection1passwordCredentialsArgs) ToAppConnection1passwordCredentialsOutputWithContext(ctx context.Context) AppConnection1passwordCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnection1passwordCredentialsOutput)
}

func (i AppConnection1passwordCredentialsArgs) ToAppConnection1passwordCredentialsPtrOutput() AppConnection1passwordCredentialsPtrOutput {
	return i.ToAppConnection1passwordCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnection1passwordCredentialsArgs) ToAppConnection1passwordCredentialsPtrOutputWithContext(ctx context.Context) AppConnection1passwordCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnection1passwordCredentialsOutput).ToAppConnection1passwordCredentialsPtrOutputWithContext(ctx)
}

// AppConnection1passwordCredentialsPtrInput is an input type that accepts AppConnection1passwordCredentialsArgs, AppConnection1passwordCredentialsPtr and AppConnection1passwordCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnection1passwordCredentialsPtrInput` via:
//
//	        AppConnection1passwordCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnection1passwordCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnection1passwordCredentialsPtrOutput() AppConnection1passwordCredentialsPtrOutput
	ToAppConnection1passwordCredentialsPtrOutputWithContext(context.Context) AppConnection1passwordCredentialsPtrOutput
}

type appConnection1passwordCredentialsPtrType AppConnection1passwordCredentialsArgs

func AppConnection1passwordCredentialsPtr(v *AppConnection1passwordCredentialsArgs) AppConnection1passwordCredentialsPtrInput {
	return (*appConnection1passwordCredentialsPtrType)(v)
}

func (*appConnection1passwordCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnection1passwordCredentials)(nil)).Elem()
}

func (i *appConnection1passwordCredentialsPtrType) ToAppConnection1passwordCredentialsPtrOutput() AppConnection1passwordCredentialsPtrOutput {
	return i.ToAppConnection1passwordCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnection1passwordCredentialsPtrType) ToAppConnection1passwordCredentialsPtrOutputWithContext(ctx context.Context) AppConnection1passwordCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnection1passwordCredentialsPtrOutput)
}

type AppConnection1passwordCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnection1passwordCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnection1passwordCredentials)(nil)).Elem()
}

func (o AppConnection1passwordCredentialsOutput) ToAppConnection1passwordCredentialsOutput() AppConnection1passwordCredentialsOutput {
	return o
}

func (o AppConnection1passwordCredentialsOutput) ToAppConnection1passwordCredentialsOutputWithContext(ctx context.Context) AppConnection1passwordCredentialsOutput {
	return o
}

func (o AppConnection1passwordCredentialsOutput) ToAppConnection1passwordCredentialsPtrOutput() AppConnection1passwordCredentialsPtrOutput {
	return o.ToAppConnection1passwordCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnection1passwordCredentialsOutput) ToAppConnection1passwordCredentialsPtrOutputWithContext(ctx context.Context) AppConnection1passwordCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnection1passwordCredentials) *AppConnection1passwordCredentials {
		return &v
	}).(AppConnection1passwordCredentialsPtrOutput)
}

// The API token to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
func (o AppConnection1passwordCredentialsOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnection1passwordCredentials) string { return v.ApiToken }).(pulumi.StringOutput)
}

// The URL of the 1Password Connect instance to connect to. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
func (o AppConnection1passwordCredentialsOutput) InstanceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnection1passwordCredentials) string { return v.InstanceUrl }).(pulumi.StringOutput)
}

type AppConnection1passwordCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnection1passwordCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnection1passwordCredentials)(nil)).Elem()
}

func (o AppConnection1passwordCredentialsPtrOutput) ToAppConnection1passwordCredentialsPtrOutput() AppConnection1passwordCredentialsPtrOutput {
	return o
}

func (o AppConnection1passwordCredentialsPtrOutput) ToAppConnection1passwordCredentialsPtrOutputWithContext(ctx context.Context) AppConnection1passwordCredentialsPtrOutput {
	return o
}

func (o AppConnection1passwordCredentialsPtrOutput) Elem() AppConnection1passwordCredentialsOutput {
	return o.ApplyT(func(v *AppConnection1passwordCredentials) AppConnection1passwordCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnection1passwordCredentials
		return ret
	}).(AppConnection1passwordCredentialsOutput)
}

// The API token to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
func (o AppConnection1passwordCredentialsPtrOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnection1passwordCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiToken
	}).(pulumi.StringPtrOutput)
}

// The URL of the 1Password Connect instance to connect to. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/1password
func (o AppConnection1passwordCredentialsPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnection1passwordCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type AppConnectionAwsCredentials struct {
	// The AWS Access Key ID used to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
	AccessKeyId *string `pulumi:"accessKeyId"`
	// The Amazon Resource Name (ARN) of the IAM role to assume for performing operations. Infisical will assume this role using AWS Security Token Service (STS). Required for assume-role access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#assume-role-recommended
	RoleArn *string `pulumi:"roleArn"`
	// The AWS Secret Access Key associated with the Access Key ID to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
	SecretAccessKey *string `pulumi:"secretAccessKey"`
}

// AppConnectionAwsCredentialsInput is an input type that accepts AppConnectionAwsCredentialsArgs and AppConnectionAwsCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionAwsCredentialsInput` via:
//
//	AppConnectionAwsCredentialsArgs{...}
type AppConnectionAwsCredentialsInput interface {
	pulumi.Input

	ToAppConnectionAwsCredentialsOutput() AppConnectionAwsCredentialsOutput
	ToAppConnectionAwsCredentialsOutputWithContext(context.Context) AppConnectionAwsCredentialsOutput
}

type AppConnectionAwsCredentialsArgs struct {
	// The AWS Access Key ID used to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// The Amazon Resource Name (ARN) of the IAM role to assume for performing operations. Infisical will assume this role using AWS Security Token Service (STS). Required for assume-role access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#assume-role-recommended
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The AWS Secret Access Key associated with the Access Key ID to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
}

func (AppConnectionAwsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionAwsCredentials)(nil)).Elem()
}

func (i AppConnectionAwsCredentialsArgs) ToAppConnectionAwsCredentialsOutput() AppConnectionAwsCredentialsOutput {
	return i.ToAppConnectionAwsCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionAwsCredentialsArgs) ToAppConnectionAwsCredentialsOutputWithContext(ctx context.Context) AppConnectionAwsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAwsCredentialsOutput)
}

func (i AppConnectionAwsCredentialsArgs) ToAppConnectionAwsCredentialsPtrOutput() AppConnectionAwsCredentialsPtrOutput {
	return i.ToAppConnectionAwsCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionAwsCredentialsArgs) ToAppConnectionAwsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAwsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAwsCredentialsOutput).ToAppConnectionAwsCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionAwsCredentialsPtrInput is an input type that accepts AppConnectionAwsCredentialsArgs, AppConnectionAwsCredentialsPtr and AppConnectionAwsCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionAwsCredentialsPtrInput` via:
//
//	        AppConnectionAwsCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionAwsCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionAwsCredentialsPtrOutput() AppConnectionAwsCredentialsPtrOutput
	ToAppConnectionAwsCredentialsPtrOutputWithContext(context.Context) AppConnectionAwsCredentialsPtrOutput
}

type appConnectionAwsCredentialsPtrType AppConnectionAwsCredentialsArgs

func AppConnectionAwsCredentialsPtr(v *AppConnectionAwsCredentialsArgs) AppConnectionAwsCredentialsPtrInput {
	return (*appConnectionAwsCredentialsPtrType)(v)
}

func (*appConnectionAwsCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionAwsCredentials)(nil)).Elem()
}

func (i *appConnectionAwsCredentialsPtrType) ToAppConnectionAwsCredentialsPtrOutput() AppConnectionAwsCredentialsPtrOutput {
	return i.ToAppConnectionAwsCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionAwsCredentialsPtrType) ToAppConnectionAwsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAwsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAwsCredentialsPtrOutput)
}

type AppConnectionAwsCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionAwsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionAwsCredentials)(nil)).Elem()
}

func (o AppConnectionAwsCredentialsOutput) ToAppConnectionAwsCredentialsOutput() AppConnectionAwsCredentialsOutput {
	return o
}

func (o AppConnectionAwsCredentialsOutput) ToAppConnectionAwsCredentialsOutputWithContext(ctx context.Context) AppConnectionAwsCredentialsOutput {
	return o
}

func (o AppConnectionAwsCredentialsOutput) ToAppConnectionAwsCredentialsPtrOutput() AppConnectionAwsCredentialsPtrOutput {
	return o.ToAppConnectionAwsCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionAwsCredentialsOutput) ToAppConnectionAwsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAwsCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionAwsCredentials) *AppConnectionAwsCredentials {
		return &v
	}).(AppConnectionAwsCredentialsPtrOutput)
}

// The AWS Access Key ID used to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
func (o AppConnectionAwsCredentialsOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionAwsCredentials) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to assume for performing operations. Infisical will assume this role using AWS Security Token Service (STS). Required for assume-role access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#assume-role-recommended
func (o AppConnectionAwsCredentialsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionAwsCredentials) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The AWS Secret Access Key associated with the Access Key ID to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
func (o AppConnectionAwsCredentialsOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionAwsCredentials) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

type AppConnectionAwsCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionAwsCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionAwsCredentials)(nil)).Elem()
}

func (o AppConnectionAwsCredentialsPtrOutput) ToAppConnectionAwsCredentialsPtrOutput() AppConnectionAwsCredentialsPtrOutput {
	return o
}

func (o AppConnectionAwsCredentialsPtrOutput) ToAppConnectionAwsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAwsCredentialsPtrOutput {
	return o
}

func (o AppConnectionAwsCredentialsPtrOutput) Elem() AppConnectionAwsCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionAwsCredentials) AppConnectionAwsCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionAwsCredentials
		return ret
	}).(AppConnectionAwsCredentialsOutput)
}

// The AWS Access Key ID used to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
func (o AppConnectionAwsCredentialsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionAwsCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to assume for performing operations. Infisical will assume this role using AWS Security Token Service (STS). Required for assume-role access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#assume-role-recommended
func (o AppConnectionAwsCredentialsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionAwsCredentials) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The AWS Secret Access Key associated with the Access Key ID to authenticate requests to AWS services. Required for access-key access method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/aws#access-key
func (o AppConnectionAwsCredentialsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionAwsCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type AppConnectionAzureClientSecretsCredentials struct {
	// The Azure application (client) ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
	ClientId string `pulumi:"clientId"`
	// The Azure client secret. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
	ClientSecret string `pulumi:"clientSecret"`
	// The Azure Active Directory (AAD) tenant ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
	TenantId string `pulumi:"tenantId"`
}

// AppConnectionAzureClientSecretsCredentialsInput is an input type that accepts AppConnectionAzureClientSecretsCredentialsArgs and AppConnectionAzureClientSecretsCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionAzureClientSecretsCredentialsInput` via:
//
//	AppConnectionAzureClientSecretsCredentialsArgs{...}
type AppConnectionAzureClientSecretsCredentialsInput interface {
	pulumi.Input

	ToAppConnectionAzureClientSecretsCredentialsOutput() AppConnectionAzureClientSecretsCredentialsOutput
	ToAppConnectionAzureClientSecretsCredentialsOutputWithContext(context.Context) AppConnectionAzureClientSecretsCredentialsOutput
}

type AppConnectionAzureClientSecretsCredentialsArgs struct {
	// The Azure application (client) ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Azure client secret. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The Azure Active Directory (AAD) tenant ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AppConnectionAzureClientSecretsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionAzureClientSecretsCredentials)(nil)).Elem()
}

func (i AppConnectionAzureClientSecretsCredentialsArgs) ToAppConnectionAzureClientSecretsCredentialsOutput() AppConnectionAzureClientSecretsCredentialsOutput {
	return i.ToAppConnectionAzureClientSecretsCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionAzureClientSecretsCredentialsArgs) ToAppConnectionAzureClientSecretsCredentialsOutputWithContext(ctx context.Context) AppConnectionAzureClientSecretsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAzureClientSecretsCredentialsOutput)
}

func (i AppConnectionAzureClientSecretsCredentialsArgs) ToAppConnectionAzureClientSecretsCredentialsPtrOutput() AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return i.ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionAzureClientSecretsCredentialsArgs) ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAzureClientSecretsCredentialsOutput).ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionAzureClientSecretsCredentialsPtrInput is an input type that accepts AppConnectionAzureClientSecretsCredentialsArgs, AppConnectionAzureClientSecretsCredentialsPtr and AppConnectionAzureClientSecretsCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionAzureClientSecretsCredentialsPtrInput` via:
//
//	        AppConnectionAzureClientSecretsCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionAzureClientSecretsCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionAzureClientSecretsCredentialsPtrOutput() AppConnectionAzureClientSecretsCredentialsPtrOutput
	ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(context.Context) AppConnectionAzureClientSecretsCredentialsPtrOutput
}

type appConnectionAzureClientSecretsCredentialsPtrType AppConnectionAzureClientSecretsCredentialsArgs

func AppConnectionAzureClientSecretsCredentialsPtr(v *AppConnectionAzureClientSecretsCredentialsArgs) AppConnectionAzureClientSecretsCredentialsPtrInput {
	return (*appConnectionAzureClientSecretsCredentialsPtrType)(v)
}

func (*appConnectionAzureClientSecretsCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionAzureClientSecretsCredentials)(nil)).Elem()
}

func (i *appConnectionAzureClientSecretsCredentialsPtrType) ToAppConnectionAzureClientSecretsCredentialsPtrOutput() AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return i.ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionAzureClientSecretsCredentialsPtrType) ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAzureClientSecretsCredentialsPtrOutput)
}

type AppConnectionAzureClientSecretsCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionAzureClientSecretsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionAzureClientSecretsCredentials)(nil)).Elem()
}

func (o AppConnectionAzureClientSecretsCredentialsOutput) ToAppConnectionAzureClientSecretsCredentialsOutput() AppConnectionAzureClientSecretsCredentialsOutput {
	return o
}

func (o AppConnectionAzureClientSecretsCredentialsOutput) ToAppConnectionAzureClientSecretsCredentialsOutputWithContext(ctx context.Context) AppConnectionAzureClientSecretsCredentialsOutput {
	return o
}

func (o AppConnectionAzureClientSecretsCredentialsOutput) ToAppConnectionAzureClientSecretsCredentialsPtrOutput() AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return o.ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionAzureClientSecretsCredentialsOutput) ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionAzureClientSecretsCredentials) *AppConnectionAzureClientSecretsCredentials {
		return &v
	}).(AppConnectionAzureClientSecretsCredentialsPtrOutput)
}

// The Azure application (client) ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
func (o AppConnectionAzureClientSecretsCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionAzureClientSecretsCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Azure client secret. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
func (o AppConnectionAzureClientSecretsCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionAzureClientSecretsCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The Azure Active Directory (AAD) tenant ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
func (o AppConnectionAzureClientSecretsCredentialsOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionAzureClientSecretsCredentials) string { return v.TenantId }).(pulumi.StringOutput)
}

type AppConnectionAzureClientSecretsCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionAzureClientSecretsCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionAzureClientSecretsCredentials)(nil)).Elem()
}

func (o AppConnectionAzureClientSecretsCredentialsPtrOutput) ToAppConnectionAzureClientSecretsCredentialsPtrOutput() AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return o
}

func (o AppConnectionAzureClientSecretsCredentialsPtrOutput) ToAppConnectionAzureClientSecretsCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionAzureClientSecretsCredentialsPtrOutput {
	return o
}

func (o AppConnectionAzureClientSecretsCredentialsPtrOutput) Elem() AppConnectionAzureClientSecretsCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionAzureClientSecretsCredentials) AppConnectionAzureClientSecretsCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionAzureClientSecretsCredentials
		return ret
	}).(AppConnectionAzureClientSecretsCredentialsOutput)
}

// The Azure application (client) ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
func (o AppConnectionAzureClientSecretsCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionAzureClientSecretsCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The Azure client secret. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
func (o AppConnectionAzureClientSecretsCredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionAzureClientSecretsCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The Azure Active Directory (AAD) tenant ID. Required for client-secret method. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/azure-client-secrets
func (o AppConnectionAzureClientSecretsCredentialsPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionAzureClientSecretsCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type AppConnectionBitbucketCredentials struct {
	// The Bitbucket API token for authentication.
	ApiToken string `pulumi:"apiToken"`
	// The email address associated with the Bitbucket API token.
	Email string `pulumi:"email"`
}

// AppConnectionBitbucketCredentialsInput is an input type that accepts AppConnectionBitbucketCredentialsArgs and AppConnectionBitbucketCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionBitbucketCredentialsInput` via:
//
//	AppConnectionBitbucketCredentialsArgs{...}
type AppConnectionBitbucketCredentialsInput interface {
	pulumi.Input

	ToAppConnectionBitbucketCredentialsOutput() AppConnectionBitbucketCredentialsOutput
	ToAppConnectionBitbucketCredentialsOutputWithContext(context.Context) AppConnectionBitbucketCredentialsOutput
}

type AppConnectionBitbucketCredentialsArgs struct {
	// The Bitbucket API token for authentication.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
	// The email address associated with the Bitbucket API token.
	Email pulumi.StringInput `pulumi:"email"`
}

func (AppConnectionBitbucketCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionBitbucketCredentials)(nil)).Elem()
}

func (i AppConnectionBitbucketCredentialsArgs) ToAppConnectionBitbucketCredentialsOutput() AppConnectionBitbucketCredentialsOutput {
	return i.ToAppConnectionBitbucketCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionBitbucketCredentialsArgs) ToAppConnectionBitbucketCredentialsOutputWithContext(ctx context.Context) AppConnectionBitbucketCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionBitbucketCredentialsOutput)
}

func (i AppConnectionBitbucketCredentialsArgs) ToAppConnectionBitbucketCredentialsPtrOutput() AppConnectionBitbucketCredentialsPtrOutput {
	return i.ToAppConnectionBitbucketCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionBitbucketCredentialsArgs) ToAppConnectionBitbucketCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionBitbucketCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionBitbucketCredentialsOutput).ToAppConnectionBitbucketCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionBitbucketCredentialsPtrInput is an input type that accepts AppConnectionBitbucketCredentialsArgs, AppConnectionBitbucketCredentialsPtr and AppConnectionBitbucketCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionBitbucketCredentialsPtrInput` via:
//
//	        AppConnectionBitbucketCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionBitbucketCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionBitbucketCredentialsPtrOutput() AppConnectionBitbucketCredentialsPtrOutput
	ToAppConnectionBitbucketCredentialsPtrOutputWithContext(context.Context) AppConnectionBitbucketCredentialsPtrOutput
}

type appConnectionBitbucketCredentialsPtrType AppConnectionBitbucketCredentialsArgs

func AppConnectionBitbucketCredentialsPtr(v *AppConnectionBitbucketCredentialsArgs) AppConnectionBitbucketCredentialsPtrInput {
	return (*appConnectionBitbucketCredentialsPtrType)(v)
}

func (*appConnectionBitbucketCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionBitbucketCredentials)(nil)).Elem()
}

func (i *appConnectionBitbucketCredentialsPtrType) ToAppConnectionBitbucketCredentialsPtrOutput() AppConnectionBitbucketCredentialsPtrOutput {
	return i.ToAppConnectionBitbucketCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionBitbucketCredentialsPtrType) ToAppConnectionBitbucketCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionBitbucketCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionBitbucketCredentialsPtrOutput)
}

type AppConnectionBitbucketCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionBitbucketCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionBitbucketCredentials)(nil)).Elem()
}

func (o AppConnectionBitbucketCredentialsOutput) ToAppConnectionBitbucketCredentialsOutput() AppConnectionBitbucketCredentialsOutput {
	return o
}

func (o AppConnectionBitbucketCredentialsOutput) ToAppConnectionBitbucketCredentialsOutputWithContext(ctx context.Context) AppConnectionBitbucketCredentialsOutput {
	return o
}

func (o AppConnectionBitbucketCredentialsOutput) ToAppConnectionBitbucketCredentialsPtrOutput() AppConnectionBitbucketCredentialsPtrOutput {
	return o.ToAppConnectionBitbucketCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionBitbucketCredentialsOutput) ToAppConnectionBitbucketCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionBitbucketCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionBitbucketCredentials) *AppConnectionBitbucketCredentials {
		return &v
	}).(AppConnectionBitbucketCredentialsPtrOutput)
}

// The Bitbucket API token for authentication.
func (o AppConnectionBitbucketCredentialsOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionBitbucketCredentials) string { return v.ApiToken }).(pulumi.StringOutput)
}

// The email address associated with the Bitbucket API token.
func (o AppConnectionBitbucketCredentialsOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionBitbucketCredentials) string { return v.Email }).(pulumi.StringOutput)
}

type AppConnectionBitbucketCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionBitbucketCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionBitbucketCredentials)(nil)).Elem()
}

func (o AppConnectionBitbucketCredentialsPtrOutput) ToAppConnectionBitbucketCredentialsPtrOutput() AppConnectionBitbucketCredentialsPtrOutput {
	return o
}

func (o AppConnectionBitbucketCredentialsPtrOutput) ToAppConnectionBitbucketCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionBitbucketCredentialsPtrOutput {
	return o
}

func (o AppConnectionBitbucketCredentialsPtrOutput) Elem() AppConnectionBitbucketCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionBitbucketCredentials) AppConnectionBitbucketCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionBitbucketCredentials
		return ret
	}).(AppConnectionBitbucketCredentialsOutput)
}

// The Bitbucket API token for authentication.
func (o AppConnectionBitbucketCredentialsPtrOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionBitbucketCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiToken
	}).(pulumi.StringPtrOutput)
}

// The email address associated with the Bitbucket API token.
func (o AppConnectionBitbucketCredentialsPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionBitbucketCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

type AppConnectionCloudflareCredentials struct {
	// The Cloudflare Account ID. This can be found in the sidebar of your Cloudflare dashboard.
	AccountId string `pulumi:"accountId"`
	// The Cloudflare API token with the necessary permissions to manage Workers scripts. The token should have Zone:Zone:Read, Zone:Zone Settings:Read, and Zone:Zone:Edit permissions.
	ApiToken string `pulumi:"apiToken"`
}

// AppConnectionCloudflareCredentialsInput is an input type that accepts AppConnectionCloudflareCredentialsArgs and AppConnectionCloudflareCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionCloudflareCredentialsInput` via:
//
//	AppConnectionCloudflareCredentialsArgs{...}
type AppConnectionCloudflareCredentialsInput interface {
	pulumi.Input

	ToAppConnectionCloudflareCredentialsOutput() AppConnectionCloudflareCredentialsOutput
	ToAppConnectionCloudflareCredentialsOutputWithContext(context.Context) AppConnectionCloudflareCredentialsOutput
}

type AppConnectionCloudflareCredentialsArgs struct {
	// The Cloudflare Account ID. This can be found in the sidebar of your Cloudflare dashboard.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The Cloudflare API token with the necessary permissions to manage Workers scripts. The token should have Zone:Zone:Read, Zone:Zone Settings:Read, and Zone:Zone:Edit permissions.
	ApiToken pulumi.StringInput `pulumi:"apiToken"`
}

func (AppConnectionCloudflareCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionCloudflareCredentials)(nil)).Elem()
}

func (i AppConnectionCloudflareCredentialsArgs) ToAppConnectionCloudflareCredentialsOutput() AppConnectionCloudflareCredentialsOutput {
	return i.ToAppConnectionCloudflareCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionCloudflareCredentialsArgs) ToAppConnectionCloudflareCredentialsOutputWithContext(ctx context.Context) AppConnectionCloudflareCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionCloudflareCredentialsOutput)
}

func (i AppConnectionCloudflareCredentialsArgs) ToAppConnectionCloudflareCredentialsPtrOutput() AppConnectionCloudflareCredentialsPtrOutput {
	return i.ToAppConnectionCloudflareCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionCloudflareCredentialsArgs) ToAppConnectionCloudflareCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionCloudflareCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionCloudflareCredentialsOutput).ToAppConnectionCloudflareCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionCloudflareCredentialsPtrInput is an input type that accepts AppConnectionCloudflareCredentialsArgs, AppConnectionCloudflareCredentialsPtr and AppConnectionCloudflareCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionCloudflareCredentialsPtrInput` via:
//
//	        AppConnectionCloudflareCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionCloudflareCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionCloudflareCredentialsPtrOutput() AppConnectionCloudflareCredentialsPtrOutput
	ToAppConnectionCloudflareCredentialsPtrOutputWithContext(context.Context) AppConnectionCloudflareCredentialsPtrOutput
}

type appConnectionCloudflareCredentialsPtrType AppConnectionCloudflareCredentialsArgs

func AppConnectionCloudflareCredentialsPtr(v *AppConnectionCloudflareCredentialsArgs) AppConnectionCloudflareCredentialsPtrInput {
	return (*appConnectionCloudflareCredentialsPtrType)(v)
}

func (*appConnectionCloudflareCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionCloudflareCredentials)(nil)).Elem()
}

func (i *appConnectionCloudflareCredentialsPtrType) ToAppConnectionCloudflareCredentialsPtrOutput() AppConnectionCloudflareCredentialsPtrOutput {
	return i.ToAppConnectionCloudflareCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionCloudflareCredentialsPtrType) ToAppConnectionCloudflareCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionCloudflareCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionCloudflareCredentialsPtrOutput)
}

type AppConnectionCloudflareCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionCloudflareCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionCloudflareCredentials)(nil)).Elem()
}

func (o AppConnectionCloudflareCredentialsOutput) ToAppConnectionCloudflareCredentialsOutput() AppConnectionCloudflareCredentialsOutput {
	return o
}

func (o AppConnectionCloudflareCredentialsOutput) ToAppConnectionCloudflareCredentialsOutputWithContext(ctx context.Context) AppConnectionCloudflareCredentialsOutput {
	return o
}

func (o AppConnectionCloudflareCredentialsOutput) ToAppConnectionCloudflareCredentialsPtrOutput() AppConnectionCloudflareCredentialsPtrOutput {
	return o.ToAppConnectionCloudflareCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionCloudflareCredentialsOutput) ToAppConnectionCloudflareCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionCloudflareCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionCloudflareCredentials) *AppConnectionCloudflareCredentials {
		return &v
	}).(AppConnectionCloudflareCredentialsPtrOutput)
}

// The Cloudflare Account ID. This can be found in the sidebar of your Cloudflare dashboard.
func (o AppConnectionCloudflareCredentialsOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionCloudflareCredentials) string { return v.AccountId }).(pulumi.StringOutput)
}

// The Cloudflare API token with the necessary permissions to manage Workers scripts. The token should have Zone:Zone:Read, Zone:Zone Settings:Read, and Zone:Zone:Edit permissions.
func (o AppConnectionCloudflareCredentialsOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionCloudflareCredentials) string { return v.ApiToken }).(pulumi.StringOutput)
}

type AppConnectionCloudflareCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionCloudflareCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionCloudflareCredentials)(nil)).Elem()
}

func (o AppConnectionCloudflareCredentialsPtrOutput) ToAppConnectionCloudflareCredentialsPtrOutput() AppConnectionCloudflareCredentialsPtrOutput {
	return o
}

func (o AppConnectionCloudflareCredentialsPtrOutput) ToAppConnectionCloudflareCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionCloudflareCredentialsPtrOutput {
	return o
}

func (o AppConnectionCloudflareCredentialsPtrOutput) Elem() AppConnectionCloudflareCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionCloudflareCredentials) AppConnectionCloudflareCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionCloudflareCredentials
		return ret
	}).(AppConnectionCloudflareCredentialsOutput)
}

// The Cloudflare Account ID. This can be found in the sidebar of your Cloudflare dashboard.
func (o AppConnectionCloudflareCredentialsPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionCloudflareCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

// The Cloudflare API token with the necessary permissions to manage Workers scripts. The token should have Zone:Zone:Read, Zone:Zone Settings:Read, and Zone:Zone:Edit permissions.
func (o AppConnectionCloudflareCredentialsPtrOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionCloudflareCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiToken
	}).(pulumi.StringPtrOutput)
}

type AppConnectionDatabricksCredentials struct {
	// The client ID of the Databricks service principal.
	ClientId string `pulumi:"clientId"`
	// The client secret of the Databricks service principal.
	ClientSecret string `pulumi:"clientSecret"`
	// The workspace URL of the Databricks instance.
	WorkspaceUrl string `pulumi:"workspaceUrl"`
}

// AppConnectionDatabricksCredentialsInput is an input type that accepts AppConnectionDatabricksCredentialsArgs and AppConnectionDatabricksCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionDatabricksCredentialsInput` via:
//
//	AppConnectionDatabricksCredentialsArgs{...}
type AppConnectionDatabricksCredentialsInput interface {
	pulumi.Input

	ToAppConnectionDatabricksCredentialsOutput() AppConnectionDatabricksCredentialsOutput
	ToAppConnectionDatabricksCredentialsOutputWithContext(context.Context) AppConnectionDatabricksCredentialsOutput
}

type AppConnectionDatabricksCredentialsArgs struct {
	// The client ID of the Databricks service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret of the Databricks service principal.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The workspace URL of the Databricks instance.
	WorkspaceUrl pulumi.StringInput `pulumi:"workspaceUrl"`
}

func (AppConnectionDatabricksCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionDatabricksCredentials)(nil)).Elem()
}

func (i AppConnectionDatabricksCredentialsArgs) ToAppConnectionDatabricksCredentialsOutput() AppConnectionDatabricksCredentialsOutput {
	return i.ToAppConnectionDatabricksCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionDatabricksCredentialsArgs) ToAppConnectionDatabricksCredentialsOutputWithContext(ctx context.Context) AppConnectionDatabricksCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionDatabricksCredentialsOutput)
}

func (i AppConnectionDatabricksCredentialsArgs) ToAppConnectionDatabricksCredentialsPtrOutput() AppConnectionDatabricksCredentialsPtrOutput {
	return i.ToAppConnectionDatabricksCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionDatabricksCredentialsArgs) ToAppConnectionDatabricksCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionDatabricksCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionDatabricksCredentialsOutput).ToAppConnectionDatabricksCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionDatabricksCredentialsPtrInput is an input type that accepts AppConnectionDatabricksCredentialsArgs, AppConnectionDatabricksCredentialsPtr and AppConnectionDatabricksCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionDatabricksCredentialsPtrInput` via:
//
//	        AppConnectionDatabricksCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionDatabricksCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionDatabricksCredentialsPtrOutput() AppConnectionDatabricksCredentialsPtrOutput
	ToAppConnectionDatabricksCredentialsPtrOutputWithContext(context.Context) AppConnectionDatabricksCredentialsPtrOutput
}

type appConnectionDatabricksCredentialsPtrType AppConnectionDatabricksCredentialsArgs

func AppConnectionDatabricksCredentialsPtr(v *AppConnectionDatabricksCredentialsArgs) AppConnectionDatabricksCredentialsPtrInput {
	return (*appConnectionDatabricksCredentialsPtrType)(v)
}

func (*appConnectionDatabricksCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionDatabricksCredentials)(nil)).Elem()
}

func (i *appConnectionDatabricksCredentialsPtrType) ToAppConnectionDatabricksCredentialsPtrOutput() AppConnectionDatabricksCredentialsPtrOutput {
	return i.ToAppConnectionDatabricksCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionDatabricksCredentialsPtrType) ToAppConnectionDatabricksCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionDatabricksCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionDatabricksCredentialsPtrOutput)
}

type AppConnectionDatabricksCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionDatabricksCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionDatabricksCredentials)(nil)).Elem()
}

func (o AppConnectionDatabricksCredentialsOutput) ToAppConnectionDatabricksCredentialsOutput() AppConnectionDatabricksCredentialsOutput {
	return o
}

func (o AppConnectionDatabricksCredentialsOutput) ToAppConnectionDatabricksCredentialsOutputWithContext(ctx context.Context) AppConnectionDatabricksCredentialsOutput {
	return o
}

func (o AppConnectionDatabricksCredentialsOutput) ToAppConnectionDatabricksCredentialsPtrOutput() AppConnectionDatabricksCredentialsPtrOutput {
	return o.ToAppConnectionDatabricksCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionDatabricksCredentialsOutput) ToAppConnectionDatabricksCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionDatabricksCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionDatabricksCredentials) *AppConnectionDatabricksCredentials {
		return &v
	}).(AppConnectionDatabricksCredentialsPtrOutput)
}

// The client ID of the Databricks service principal.
func (o AppConnectionDatabricksCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionDatabricksCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret of the Databricks service principal.
func (o AppConnectionDatabricksCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionDatabricksCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The workspace URL of the Databricks instance.
func (o AppConnectionDatabricksCredentialsOutput) WorkspaceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionDatabricksCredentials) string { return v.WorkspaceUrl }).(pulumi.StringOutput)
}

type AppConnectionDatabricksCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionDatabricksCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionDatabricksCredentials)(nil)).Elem()
}

func (o AppConnectionDatabricksCredentialsPtrOutput) ToAppConnectionDatabricksCredentialsPtrOutput() AppConnectionDatabricksCredentialsPtrOutput {
	return o
}

func (o AppConnectionDatabricksCredentialsPtrOutput) ToAppConnectionDatabricksCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionDatabricksCredentialsPtrOutput {
	return o
}

func (o AppConnectionDatabricksCredentialsPtrOutput) Elem() AppConnectionDatabricksCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionDatabricksCredentials) AppConnectionDatabricksCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionDatabricksCredentials
		return ret
	}).(AppConnectionDatabricksCredentialsOutput)
}

// The client ID of the Databricks service principal.
func (o AppConnectionDatabricksCredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionDatabricksCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret of the Databricks service principal.
func (o AppConnectionDatabricksCredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionDatabricksCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The workspace URL of the Databricks instance.
func (o AppConnectionDatabricksCredentialsPtrOutput) WorkspaceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionDatabricksCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceUrl
	}).(pulumi.StringPtrOutput)
}

type AppConnectionFlyioCredentials struct {
	// The Fly.io access token for authentication.
	AccessToken string `pulumi:"accessToken"`
}

// AppConnectionFlyioCredentialsInput is an input type that accepts AppConnectionFlyioCredentialsArgs and AppConnectionFlyioCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionFlyioCredentialsInput` via:
//
//	AppConnectionFlyioCredentialsArgs{...}
type AppConnectionFlyioCredentialsInput interface {
	pulumi.Input

	ToAppConnectionFlyioCredentialsOutput() AppConnectionFlyioCredentialsOutput
	ToAppConnectionFlyioCredentialsOutputWithContext(context.Context) AppConnectionFlyioCredentialsOutput
}

type AppConnectionFlyioCredentialsArgs struct {
	// The Fly.io access token for authentication.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
}

func (AppConnectionFlyioCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionFlyioCredentials)(nil)).Elem()
}

func (i AppConnectionFlyioCredentialsArgs) ToAppConnectionFlyioCredentialsOutput() AppConnectionFlyioCredentialsOutput {
	return i.ToAppConnectionFlyioCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionFlyioCredentialsArgs) ToAppConnectionFlyioCredentialsOutputWithContext(ctx context.Context) AppConnectionFlyioCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionFlyioCredentialsOutput)
}

func (i AppConnectionFlyioCredentialsArgs) ToAppConnectionFlyioCredentialsPtrOutput() AppConnectionFlyioCredentialsPtrOutput {
	return i.ToAppConnectionFlyioCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionFlyioCredentialsArgs) ToAppConnectionFlyioCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionFlyioCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionFlyioCredentialsOutput).ToAppConnectionFlyioCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionFlyioCredentialsPtrInput is an input type that accepts AppConnectionFlyioCredentialsArgs, AppConnectionFlyioCredentialsPtr and AppConnectionFlyioCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionFlyioCredentialsPtrInput` via:
//
//	        AppConnectionFlyioCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionFlyioCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionFlyioCredentialsPtrOutput() AppConnectionFlyioCredentialsPtrOutput
	ToAppConnectionFlyioCredentialsPtrOutputWithContext(context.Context) AppConnectionFlyioCredentialsPtrOutput
}

type appConnectionFlyioCredentialsPtrType AppConnectionFlyioCredentialsArgs

func AppConnectionFlyioCredentialsPtr(v *AppConnectionFlyioCredentialsArgs) AppConnectionFlyioCredentialsPtrInput {
	return (*appConnectionFlyioCredentialsPtrType)(v)
}

func (*appConnectionFlyioCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionFlyioCredentials)(nil)).Elem()
}

func (i *appConnectionFlyioCredentialsPtrType) ToAppConnectionFlyioCredentialsPtrOutput() AppConnectionFlyioCredentialsPtrOutput {
	return i.ToAppConnectionFlyioCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionFlyioCredentialsPtrType) ToAppConnectionFlyioCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionFlyioCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionFlyioCredentialsPtrOutput)
}

type AppConnectionFlyioCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionFlyioCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionFlyioCredentials)(nil)).Elem()
}

func (o AppConnectionFlyioCredentialsOutput) ToAppConnectionFlyioCredentialsOutput() AppConnectionFlyioCredentialsOutput {
	return o
}

func (o AppConnectionFlyioCredentialsOutput) ToAppConnectionFlyioCredentialsOutputWithContext(ctx context.Context) AppConnectionFlyioCredentialsOutput {
	return o
}

func (o AppConnectionFlyioCredentialsOutput) ToAppConnectionFlyioCredentialsPtrOutput() AppConnectionFlyioCredentialsPtrOutput {
	return o.ToAppConnectionFlyioCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionFlyioCredentialsOutput) ToAppConnectionFlyioCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionFlyioCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionFlyioCredentials) *AppConnectionFlyioCredentials {
		return &v
	}).(AppConnectionFlyioCredentialsPtrOutput)
}

// The Fly.io access token for authentication.
func (o AppConnectionFlyioCredentialsOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionFlyioCredentials) string { return v.AccessToken }).(pulumi.StringOutput)
}

type AppConnectionFlyioCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionFlyioCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionFlyioCredentials)(nil)).Elem()
}

func (o AppConnectionFlyioCredentialsPtrOutput) ToAppConnectionFlyioCredentialsPtrOutput() AppConnectionFlyioCredentialsPtrOutput {
	return o
}

func (o AppConnectionFlyioCredentialsPtrOutput) ToAppConnectionFlyioCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionFlyioCredentialsPtrOutput {
	return o
}

func (o AppConnectionFlyioCredentialsPtrOutput) Elem() AppConnectionFlyioCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionFlyioCredentials) AppConnectionFlyioCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionFlyioCredentials
		return ret
	}).(AppConnectionFlyioCredentialsOutput)
}

// The Fly.io access token for authentication.
func (o AppConnectionFlyioCredentialsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionFlyioCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccessToken
	}).(pulumi.StringPtrOutput)
}

type AppConnectionGcpCredentials struct {
	// The service account email to connect with GCP. The service account ID (the part of the email before '@') must be suffixed with the first two sections of your organization ID e.g. service-account-df92581a-0fe9@my-project.iam.gserviceaccount.com. For more details, refer to the documentation here https://infisical.com/docs/integrations/app-connections/gcp#configure-service-account-for-infisical
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
}

// AppConnectionGcpCredentialsInput is an input type that accepts AppConnectionGcpCredentialsArgs and AppConnectionGcpCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionGcpCredentialsInput` via:
//
//	AppConnectionGcpCredentialsArgs{...}
type AppConnectionGcpCredentialsInput interface {
	pulumi.Input

	ToAppConnectionGcpCredentialsOutput() AppConnectionGcpCredentialsOutput
	ToAppConnectionGcpCredentialsOutputWithContext(context.Context) AppConnectionGcpCredentialsOutput
}

type AppConnectionGcpCredentialsArgs struct {
	// The service account email to connect with GCP. The service account ID (the part of the email before '@') must be suffixed with the first two sections of your organization ID e.g. service-account-df92581a-0fe9@my-project.iam.gserviceaccount.com. For more details, refer to the documentation here https://infisical.com/docs/integrations/app-connections/gcp#configure-service-account-for-infisical
	ServiceAccountEmail pulumi.StringPtrInput `pulumi:"serviceAccountEmail"`
}

func (AppConnectionGcpCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionGcpCredentials)(nil)).Elem()
}

func (i AppConnectionGcpCredentialsArgs) ToAppConnectionGcpCredentialsOutput() AppConnectionGcpCredentialsOutput {
	return i.ToAppConnectionGcpCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionGcpCredentialsArgs) ToAppConnectionGcpCredentialsOutputWithContext(ctx context.Context) AppConnectionGcpCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionGcpCredentialsOutput)
}

func (i AppConnectionGcpCredentialsArgs) ToAppConnectionGcpCredentialsPtrOutput() AppConnectionGcpCredentialsPtrOutput {
	return i.ToAppConnectionGcpCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionGcpCredentialsArgs) ToAppConnectionGcpCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionGcpCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionGcpCredentialsOutput).ToAppConnectionGcpCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionGcpCredentialsPtrInput is an input type that accepts AppConnectionGcpCredentialsArgs, AppConnectionGcpCredentialsPtr and AppConnectionGcpCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionGcpCredentialsPtrInput` via:
//
//	        AppConnectionGcpCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionGcpCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionGcpCredentialsPtrOutput() AppConnectionGcpCredentialsPtrOutput
	ToAppConnectionGcpCredentialsPtrOutputWithContext(context.Context) AppConnectionGcpCredentialsPtrOutput
}

type appConnectionGcpCredentialsPtrType AppConnectionGcpCredentialsArgs

func AppConnectionGcpCredentialsPtr(v *AppConnectionGcpCredentialsArgs) AppConnectionGcpCredentialsPtrInput {
	return (*appConnectionGcpCredentialsPtrType)(v)
}

func (*appConnectionGcpCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionGcpCredentials)(nil)).Elem()
}

func (i *appConnectionGcpCredentialsPtrType) ToAppConnectionGcpCredentialsPtrOutput() AppConnectionGcpCredentialsPtrOutput {
	return i.ToAppConnectionGcpCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionGcpCredentialsPtrType) ToAppConnectionGcpCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionGcpCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionGcpCredentialsPtrOutput)
}

type AppConnectionGcpCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionGcpCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionGcpCredentials)(nil)).Elem()
}

func (o AppConnectionGcpCredentialsOutput) ToAppConnectionGcpCredentialsOutput() AppConnectionGcpCredentialsOutput {
	return o
}

func (o AppConnectionGcpCredentialsOutput) ToAppConnectionGcpCredentialsOutputWithContext(ctx context.Context) AppConnectionGcpCredentialsOutput {
	return o
}

func (o AppConnectionGcpCredentialsOutput) ToAppConnectionGcpCredentialsPtrOutput() AppConnectionGcpCredentialsPtrOutput {
	return o.ToAppConnectionGcpCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionGcpCredentialsOutput) ToAppConnectionGcpCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionGcpCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionGcpCredentials) *AppConnectionGcpCredentials {
		return &v
	}).(AppConnectionGcpCredentialsPtrOutput)
}

// The service account email to connect with GCP. The service account ID (the part of the email before '@') must be suffixed with the first two sections of your organization ID e.g. service-account-df92581a-0fe9@my-project.iam.gserviceaccount.com. For more details, refer to the documentation here https://infisical.com/docs/integrations/app-connections/gcp#configure-service-account-for-infisical
func (o AppConnectionGcpCredentialsOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionGcpCredentials) *string { return v.ServiceAccountEmail }).(pulumi.StringPtrOutput)
}

type AppConnectionGcpCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionGcpCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionGcpCredentials)(nil)).Elem()
}

func (o AppConnectionGcpCredentialsPtrOutput) ToAppConnectionGcpCredentialsPtrOutput() AppConnectionGcpCredentialsPtrOutput {
	return o
}

func (o AppConnectionGcpCredentialsPtrOutput) ToAppConnectionGcpCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionGcpCredentialsPtrOutput {
	return o
}

func (o AppConnectionGcpCredentialsPtrOutput) Elem() AppConnectionGcpCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionGcpCredentials) AppConnectionGcpCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionGcpCredentials
		return ret
	}).(AppConnectionGcpCredentialsOutput)
}

// The service account email to connect with GCP. The service account ID (the part of the email before '@') must be suffixed with the first two sections of your organization ID e.g. service-account-df92581a-0fe9@my-project.iam.gserviceaccount.com. For more details, refer to the documentation here https://infisical.com/docs/integrations/app-connections/gcp#configure-service-account-for-infisical
func (o AppConnectionGcpCredentialsPtrOutput) ServiceAccountEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionGcpCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountEmail
	}).(pulumi.StringPtrOutput)
}

type AppConnectionLdapCredentials struct {
	// The Distinguished Name (DN) or User Principal Name (UPN) of the principal to bind with (e.g., 'CN=John,CN=Users,DC=example,DC=com').
	Dn string `pulumi:"dn"`
	// The password to bind with for authentication.
	Password string `pulumi:"password"`
	// The LDAP provider (e.g., 'active-directory').
	Provider string `pulumi:"provider"`
	// The SSL certificate (PEM format) to use for secure connection when using ldaps:// with a self-signed certificate.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not to reject unauthorized SSL certificates (true/false) when using ldaps://. Set to false only in test environments.
	SslRejectUnauthorized *bool `pulumi:"sslRejectUnauthorized"`
	// The LDAP server URL (e.g., 'ldap://example.com:389' or 'ldaps://example.com:636').
	Url string `pulumi:"url"`
}

// AppConnectionLdapCredentialsInput is an input type that accepts AppConnectionLdapCredentialsArgs and AppConnectionLdapCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionLdapCredentialsInput` via:
//
//	AppConnectionLdapCredentialsArgs{...}
type AppConnectionLdapCredentialsInput interface {
	pulumi.Input

	ToAppConnectionLdapCredentialsOutput() AppConnectionLdapCredentialsOutput
	ToAppConnectionLdapCredentialsOutputWithContext(context.Context) AppConnectionLdapCredentialsOutput
}

type AppConnectionLdapCredentialsArgs struct {
	// The Distinguished Name (DN) or User Principal Name (UPN) of the principal to bind with (e.g., 'CN=John,CN=Users,DC=example,DC=com').
	Dn pulumi.StringInput `pulumi:"dn"`
	// The password to bind with for authentication.
	Password pulumi.StringInput `pulumi:"password"`
	// The LDAP provider (e.g., 'active-directory').
	Provider pulumi.StringInput `pulumi:"provider"`
	// The SSL certificate (PEM format) to use for secure connection when using ldaps:// with a self-signed certificate.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not to reject unauthorized SSL certificates (true/false) when using ldaps://. Set to false only in test environments.
	SslRejectUnauthorized pulumi.BoolPtrInput `pulumi:"sslRejectUnauthorized"`
	// The LDAP server URL (e.g., 'ldap://example.com:389' or 'ldaps://example.com:636').
	Url pulumi.StringInput `pulumi:"url"`
}

func (AppConnectionLdapCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionLdapCredentials)(nil)).Elem()
}

func (i AppConnectionLdapCredentialsArgs) ToAppConnectionLdapCredentialsOutput() AppConnectionLdapCredentialsOutput {
	return i.ToAppConnectionLdapCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionLdapCredentialsArgs) ToAppConnectionLdapCredentialsOutputWithContext(ctx context.Context) AppConnectionLdapCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionLdapCredentialsOutput)
}

func (i AppConnectionLdapCredentialsArgs) ToAppConnectionLdapCredentialsPtrOutput() AppConnectionLdapCredentialsPtrOutput {
	return i.ToAppConnectionLdapCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionLdapCredentialsArgs) ToAppConnectionLdapCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionLdapCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionLdapCredentialsOutput).ToAppConnectionLdapCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionLdapCredentialsPtrInput is an input type that accepts AppConnectionLdapCredentialsArgs, AppConnectionLdapCredentialsPtr and AppConnectionLdapCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionLdapCredentialsPtrInput` via:
//
//	        AppConnectionLdapCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionLdapCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionLdapCredentialsPtrOutput() AppConnectionLdapCredentialsPtrOutput
	ToAppConnectionLdapCredentialsPtrOutputWithContext(context.Context) AppConnectionLdapCredentialsPtrOutput
}

type appConnectionLdapCredentialsPtrType AppConnectionLdapCredentialsArgs

func AppConnectionLdapCredentialsPtr(v *AppConnectionLdapCredentialsArgs) AppConnectionLdapCredentialsPtrInput {
	return (*appConnectionLdapCredentialsPtrType)(v)
}

func (*appConnectionLdapCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionLdapCredentials)(nil)).Elem()
}

func (i *appConnectionLdapCredentialsPtrType) ToAppConnectionLdapCredentialsPtrOutput() AppConnectionLdapCredentialsPtrOutput {
	return i.ToAppConnectionLdapCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionLdapCredentialsPtrType) ToAppConnectionLdapCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionLdapCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionLdapCredentialsPtrOutput)
}

type AppConnectionLdapCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionLdapCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionLdapCredentials)(nil)).Elem()
}

func (o AppConnectionLdapCredentialsOutput) ToAppConnectionLdapCredentialsOutput() AppConnectionLdapCredentialsOutput {
	return o
}

func (o AppConnectionLdapCredentialsOutput) ToAppConnectionLdapCredentialsOutputWithContext(ctx context.Context) AppConnectionLdapCredentialsOutput {
	return o
}

func (o AppConnectionLdapCredentialsOutput) ToAppConnectionLdapCredentialsPtrOutput() AppConnectionLdapCredentialsPtrOutput {
	return o.ToAppConnectionLdapCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionLdapCredentialsOutput) ToAppConnectionLdapCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionLdapCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionLdapCredentials) *AppConnectionLdapCredentials {
		return &v
	}).(AppConnectionLdapCredentialsPtrOutput)
}

// The Distinguished Name (DN) or User Principal Name (UPN) of the principal to bind with (e.g., 'CN=John,CN=Users,DC=example,DC=com').
func (o AppConnectionLdapCredentialsOutput) Dn() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionLdapCredentials) string { return v.Dn }).(pulumi.StringOutput)
}

// The password to bind with for authentication.
func (o AppConnectionLdapCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionLdapCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The LDAP provider (e.g., 'active-directory').
func (o AppConnectionLdapCredentialsOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionLdapCredentials) string { return v.Provider }).(pulumi.StringOutput)
}

// The SSL certificate (PEM format) to use for secure connection when using ldaps:// with a self-signed certificate.
func (o AppConnectionLdapCredentialsOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionLdapCredentials) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates (true/false) when using ldaps://. Set to false only in test environments.
func (o AppConnectionLdapCredentialsOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionLdapCredentials) *bool { return v.SslRejectUnauthorized }).(pulumi.BoolPtrOutput)
}

// The LDAP server URL (e.g., 'ldap://example.com:389' or 'ldaps://example.com:636').
func (o AppConnectionLdapCredentialsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionLdapCredentials) string { return v.Url }).(pulumi.StringOutput)
}

type AppConnectionLdapCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionLdapCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionLdapCredentials)(nil)).Elem()
}

func (o AppConnectionLdapCredentialsPtrOutput) ToAppConnectionLdapCredentialsPtrOutput() AppConnectionLdapCredentialsPtrOutput {
	return o
}

func (o AppConnectionLdapCredentialsPtrOutput) ToAppConnectionLdapCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionLdapCredentialsPtrOutput {
	return o
}

func (o AppConnectionLdapCredentialsPtrOutput) Elem() AppConnectionLdapCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionLdapCredentials) AppConnectionLdapCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionLdapCredentials
		return ret
	}).(AppConnectionLdapCredentialsOutput)
}

// The Distinguished Name (DN) or User Principal Name (UPN) of the principal to bind with (e.g., 'CN=John,CN=Users,DC=example,DC=com').
func (o AppConnectionLdapCredentialsPtrOutput) Dn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionLdapCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Dn
	}).(pulumi.StringPtrOutput)
}

// The password to bind with for authentication.
func (o AppConnectionLdapCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionLdapCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The LDAP provider (e.g., 'active-directory').
func (o AppConnectionLdapCredentialsPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionLdapCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(pulumi.StringPtrOutput)
}

// The SSL certificate (PEM format) to use for secure connection when using ldaps:// with a self-signed certificate.
func (o AppConnectionLdapCredentialsPtrOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionLdapCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SslCertificate
	}).(pulumi.StringPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates (true/false) when using ldaps://. Set to false only in test environments.
func (o AppConnectionLdapCredentialsPtrOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionLdapCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslRejectUnauthorized
	}).(pulumi.BoolPtrOutput)
}

// The LDAP server URL (e.g., 'ldap://example.com:389' or 'ldaps://example.com:636').
func (o AppConnectionLdapCredentialsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionLdapCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AppConnectionMssqlCredentials struct {
	// The name of the database to connect to.
	Database string `pulumi:"database"`
	// The hostname of the database server.
	Host string `pulumi:"host"`
	// The password to connect to the database with.
	Password string `pulumi:"password"`
	// The port number of the database.
	Port *int `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized *bool `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username string `pulumi:"username"`
}

// AppConnectionMssqlCredentialsInput is an input type that accepts AppConnectionMssqlCredentialsArgs and AppConnectionMssqlCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionMssqlCredentialsInput` via:
//
//	AppConnectionMssqlCredentialsArgs{...}
type AppConnectionMssqlCredentialsInput interface {
	pulumi.Input

	ToAppConnectionMssqlCredentialsOutput() AppConnectionMssqlCredentialsOutput
	ToAppConnectionMssqlCredentialsOutputWithContext(context.Context) AppConnectionMssqlCredentialsOutput
}

type AppConnectionMssqlCredentialsArgs struct {
	// The name of the database to connect to.
	Database pulumi.StringInput `pulumi:"database"`
	// The hostname of the database server.
	Host pulumi.StringInput `pulumi:"host"`
	// The password to connect to the database with.
	Password pulumi.StringInput `pulumi:"password"`
	// The port number of the database.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized pulumi.BoolPtrInput `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AppConnectionMssqlCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionMssqlCredentials)(nil)).Elem()
}

func (i AppConnectionMssqlCredentialsArgs) ToAppConnectionMssqlCredentialsOutput() AppConnectionMssqlCredentialsOutput {
	return i.ToAppConnectionMssqlCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionMssqlCredentialsArgs) ToAppConnectionMssqlCredentialsOutputWithContext(ctx context.Context) AppConnectionMssqlCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionMssqlCredentialsOutput)
}

func (i AppConnectionMssqlCredentialsArgs) ToAppConnectionMssqlCredentialsPtrOutput() AppConnectionMssqlCredentialsPtrOutput {
	return i.ToAppConnectionMssqlCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionMssqlCredentialsArgs) ToAppConnectionMssqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMssqlCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionMssqlCredentialsOutput).ToAppConnectionMssqlCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionMssqlCredentialsPtrInput is an input type that accepts AppConnectionMssqlCredentialsArgs, AppConnectionMssqlCredentialsPtr and AppConnectionMssqlCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionMssqlCredentialsPtrInput` via:
//
//	        AppConnectionMssqlCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionMssqlCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionMssqlCredentialsPtrOutput() AppConnectionMssqlCredentialsPtrOutput
	ToAppConnectionMssqlCredentialsPtrOutputWithContext(context.Context) AppConnectionMssqlCredentialsPtrOutput
}

type appConnectionMssqlCredentialsPtrType AppConnectionMssqlCredentialsArgs

func AppConnectionMssqlCredentialsPtr(v *AppConnectionMssqlCredentialsArgs) AppConnectionMssqlCredentialsPtrInput {
	return (*appConnectionMssqlCredentialsPtrType)(v)
}

func (*appConnectionMssqlCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionMssqlCredentials)(nil)).Elem()
}

func (i *appConnectionMssqlCredentialsPtrType) ToAppConnectionMssqlCredentialsPtrOutput() AppConnectionMssqlCredentialsPtrOutput {
	return i.ToAppConnectionMssqlCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionMssqlCredentialsPtrType) ToAppConnectionMssqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMssqlCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionMssqlCredentialsPtrOutput)
}

type AppConnectionMssqlCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionMssqlCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionMssqlCredentials)(nil)).Elem()
}

func (o AppConnectionMssqlCredentialsOutput) ToAppConnectionMssqlCredentialsOutput() AppConnectionMssqlCredentialsOutput {
	return o
}

func (o AppConnectionMssqlCredentialsOutput) ToAppConnectionMssqlCredentialsOutputWithContext(ctx context.Context) AppConnectionMssqlCredentialsOutput {
	return o
}

func (o AppConnectionMssqlCredentialsOutput) ToAppConnectionMssqlCredentialsPtrOutput() AppConnectionMssqlCredentialsPtrOutput {
	return o.ToAppConnectionMssqlCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionMssqlCredentialsOutput) ToAppConnectionMssqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMssqlCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionMssqlCredentials) *AppConnectionMssqlCredentials {
		return &v
	}).(AppConnectionMssqlCredentialsPtrOutput)
}

// The name of the database to connect to.
func (o AppConnectionMssqlCredentialsOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) string { return v.Database }).(pulumi.StringOutput)
}

// The hostname of the database server.
func (o AppConnectionMssqlCredentialsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) string { return v.Host }).(pulumi.StringOutput)
}

// The password to connect to the database with.
func (o AppConnectionMssqlCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The port number of the database.
func (o AppConnectionMssqlCredentialsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionMssqlCredentialsOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionMssqlCredentialsOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionMssqlCredentialsOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) *bool { return v.SslRejectUnauthorized }).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionMssqlCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMssqlCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type AppConnectionMssqlCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionMssqlCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionMssqlCredentials)(nil)).Elem()
}

func (o AppConnectionMssqlCredentialsPtrOutput) ToAppConnectionMssqlCredentialsPtrOutput() AppConnectionMssqlCredentialsPtrOutput {
	return o
}

func (o AppConnectionMssqlCredentialsPtrOutput) ToAppConnectionMssqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMssqlCredentialsPtrOutput {
	return o
}

func (o AppConnectionMssqlCredentialsPtrOutput) Elem() AppConnectionMssqlCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) AppConnectionMssqlCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionMssqlCredentials
		return ret
	}).(AppConnectionMssqlCredentialsOutput)
}

// The name of the database to connect to.
func (o AppConnectionMssqlCredentialsPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The hostname of the database server.
func (o AppConnectionMssqlCredentialsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// The password to connect to the database with.
func (o AppConnectionMssqlCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The port number of the database.
func (o AppConnectionMssqlCredentialsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionMssqlCredentialsPtrOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SslCertificate
	}).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionMssqlCredentialsPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionMssqlCredentialsPtrOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslRejectUnauthorized
	}).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionMssqlCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMssqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type AppConnectionMysqlCredentials struct {
	// The name of the database to connect to.
	Database string `pulumi:"database"`
	// The hostname of the database server.
	Host string `pulumi:"host"`
	// The password to connect to the database with.
	Password string `pulumi:"password"`
	// The port number of the database.
	Port *int `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized *bool `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username string `pulumi:"username"`
}

// AppConnectionMysqlCredentialsInput is an input type that accepts AppConnectionMysqlCredentialsArgs and AppConnectionMysqlCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionMysqlCredentialsInput` via:
//
//	AppConnectionMysqlCredentialsArgs{...}
type AppConnectionMysqlCredentialsInput interface {
	pulumi.Input

	ToAppConnectionMysqlCredentialsOutput() AppConnectionMysqlCredentialsOutput
	ToAppConnectionMysqlCredentialsOutputWithContext(context.Context) AppConnectionMysqlCredentialsOutput
}

type AppConnectionMysqlCredentialsArgs struct {
	// The name of the database to connect to.
	Database pulumi.StringInput `pulumi:"database"`
	// The hostname of the database server.
	Host pulumi.StringInput `pulumi:"host"`
	// The password to connect to the database with.
	Password pulumi.StringInput `pulumi:"password"`
	// The port number of the database.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized pulumi.BoolPtrInput `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AppConnectionMysqlCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionMysqlCredentials)(nil)).Elem()
}

func (i AppConnectionMysqlCredentialsArgs) ToAppConnectionMysqlCredentialsOutput() AppConnectionMysqlCredentialsOutput {
	return i.ToAppConnectionMysqlCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionMysqlCredentialsArgs) ToAppConnectionMysqlCredentialsOutputWithContext(ctx context.Context) AppConnectionMysqlCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionMysqlCredentialsOutput)
}

func (i AppConnectionMysqlCredentialsArgs) ToAppConnectionMysqlCredentialsPtrOutput() AppConnectionMysqlCredentialsPtrOutput {
	return i.ToAppConnectionMysqlCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionMysqlCredentialsArgs) ToAppConnectionMysqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMysqlCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionMysqlCredentialsOutput).ToAppConnectionMysqlCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionMysqlCredentialsPtrInput is an input type that accepts AppConnectionMysqlCredentialsArgs, AppConnectionMysqlCredentialsPtr and AppConnectionMysqlCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionMysqlCredentialsPtrInput` via:
//
//	        AppConnectionMysqlCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionMysqlCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionMysqlCredentialsPtrOutput() AppConnectionMysqlCredentialsPtrOutput
	ToAppConnectionMysqlCredentialsPtrOutputWithContext(context.Context) AppConnectionMysqlCredentialsPtrOutput
}

type appConnectionMysqlCredentialsPtrType AppConnectionMysqlCredentialsArgs

func AppConnectionMysqlCredentialsPtr(v *AppConnectionMysqlCredentialsArgs) AppConnectionMysqlCredentialsPtrInput {
	return (*appConnectionMysqlCredentialsPtrType)(v)
}

func (*appConnectionMysqlCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionMysqlCredentials)(nil)).Elem()
}

func (i *appConnectionMysqlCredentialsPtrType) ToAppConnectionMysqlCredentialsPtrOutput() AppConnectionMysqlCredentialsPtrOutput {
	return i.ToAppConnectionMysqlCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionMysqlCredentialsPtrType) ToAppConnectionMysqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMysqlCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionMysqlCredentialsPtrOutput)
}

type AppConnectionMysqlCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionMysqlCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionMysqlCredentials)(nil)).Elem()
}

func (o AppConnectionMysqlCredentialsOutput) ToAppConnectionMysqlCredentialsOutput() AppConnectionMysqlCredentialsOutput {
	return o
}

func (o AppConnectionMysqlCredentialsOutput) ToAppConnectionMysqlCredentialsOutputWithContext(ctx context.Context) AppConnectionMysqlCredentialsOutput {
	return o
}

func (o AppConnectionMysqlCredentialsOutput) ToAppConnectionMysqlCredentialsPtrOutput() AppConnectionMysqlCredentialsPtrOutput {
	return o.ToAppConnectionMysqlCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionMysqlCredentialsOutput) ToAppConnectionMysqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMysqlCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionMysqlCredentials) *AppConnectionMysqlCredentials {
		return &v
	}).(AppConnectionMysqlCredentialsPtrOutput)
}

// The name of the database to connect to.
func (o AppConnectionMysqlCredentialsOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) string { return v.Database }).(pulumi.StringOutput)
}

// The hostname of the database server.
func (o AppConnectionMysqlCredentialsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) string { return v.Host }).(pulumi.StringOutput)
}

// The password to connect to the database with.
func (o AppConnectionMysqlCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The port number of the database.
func (o AppConnectionMysqlCredentialsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionMysqlCredentialsOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionMysqlCredentialsOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionMysqlCredentialsOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) *bool { return v.SslRejectUnauthorized }).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionMysqlCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionMysqlCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type AppConnectionMysqlCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionMysqlCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionMysqlCredentials)(nil)).Elem()
}

func (o AppConnectionMysqlCredentialsPtrOutput) ToAppConnectionMysqlCredentialsPtrOutput() AppConnectionMysqlCredentialsPtrOutput {
	return o
}

func (o AppConnectionMysqlCredentialsPtrOutput) ToAppConnectionMysqlCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionMysqlCredentialsPtrOutput {
	return o
}

func (o AppConnectionMysqlCredentialsPtrOutput) Elem() AppConnectionMysqlCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) AppConnectionMysqlCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionMysqlCredentials
		return ret
	}).(AppConnectionMysqlCredentialsOutput)
}

// The name of the database to connect to.
func (o AppConnectionMysqlCredentialsPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The hostname of the database server.
func (o AppConnectionMysqlCredentialsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// The password to connect to the database with.
func (o AppConnectionMysqlCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The port number of the database.
func (o AppConnectionMysqlCredentialsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionMysqlCredentialsPtrOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SslCertificate
	}).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionMysqlCredentialsPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionMysqlCredentialsPtrOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslRejectUnauthorized
	}).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionMysqlCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionMysqlCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type AppConnectionOracledbCredentials struct {
	// The name of the database to connect to.
	Database string `pulumi:"database"`
	// The hostname of the database server.
	Host string `pulumi:"host"`
	// The password to connect to the database with.
	Password string `pulumi:"password"`
	// The port number of the database.
	Port *int `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized *bool `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username string `pulumi:"username"`
}

// AppConnectionOracledbCredentialsInput is an input type that accepts AppConnectionOracledbCredentialsArgs and AppConnectionOracledbCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionOracledbCredentialsInput` via:
//
//	AppConnectionOracledbCredentialsArgs{...}
type AppConnectionOracledbCredentialsInput interface {
	pulumi.Input

	ToAppConnectionOracledbCredentialsOutput() AppConnectionOracledbCredentialsOutput
	ToAppConnectionOracledbCredentialsOutputWithContext(context.Context) AppConnectionOracledbCredentialsOutput
}

type AppConnectionOracledbCredentialsArgs struct {
	// The name of the database to connect to.
	Database pulumi.StringInput `pulumi:"database"`
	// The hostname of the database server.
	Host pulumi.StringInput `pulumi:"host"`
	// The password to connect to the database with.
	Password pulumi.StringInput `pulumi:"password"`
	// The port number of the database.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized pulumi.BoolPtrInput `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AppConnectionOracledbCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionOracledbCredentials)(nil)).Elem()
}

func (i AppConnectionOracledbCredentialsArgs) ToAppConnectionOracledbCredentialsOutput() AppConnectionOracledbCredentialsOutput {
	return i.ToAppConnectionOracledbCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionOracledbCredentialsArgs) ToAppConnectionOracledbCredentialsOutputWithContext(ctx context.Context) AppConnectionOracledbCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionOracledbCredentialsOutput)
}

func (i AppConnectionOracledbCredentialsArgs) ToAppConnectionOracledbCredentialsPtrOutput() AppConnectionOracledbCredentialsPtrOutput {
	return i.ToAppConnectionOracledbCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionOracledbCredentialsArgs) ToAppConnectionOracledbCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionOracledbCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionOracledbCredentialsOutput).ToAppConnectionOracledbCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionOracledbCredentialsPtrInput is an input type that accepts AppConnectionOracledbCredentialsArgs, AppConnectionOracledbCredentialsPtr and AppConnectionOracledbCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionOracledbCredentialsPtrInput` via:
//
//	        AppConnectionOracledbCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionOracledbCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionOracledbCredentialsPtrOutput() AppConnectionOracledbCredentialsPtrOutput
	ToAppConnectionOracledbCredentialsPtrOutputWithContext(context.Context) AppConnectionOracledbCredentialsPtrOutput
}

type appConnectionOracledbCredentialsPtrType AppConnectionOracledbCredentialsArgs

func AppConnectionOracledbCredentialsPtr(v *AppConnectionOracledbCredentialsArgs) AppConnectionOracledbCredentialsPtrInput {
	return (*appConnectionOracledbCredentialsPtrType)(v)
}

func (*appConnectionOracledbCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionOracledbCredentials)(nil)).Elem()
}

func (i *appConnectionOracledbCredentialsPtrType) ToAppConnectionOracledbCredentialsPtrOutput() AppConnectionOracledbCredentialsPtrOutput {
	return i.ToAppConnectionOracledbCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionOracledbCredentialsPtrType) ToAppConnectionOracledbCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionOracledbCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionOracledbCredentialsPtrOutput)
}

type AppConnectionOracledbCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionOracledbCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionOracledbCredentials)(nil)).Elem()
}

func (o AppConnectionOracledbCredentialsOutput) ToAppConnectionOracledbCredentialsOutput() AppConnectionOracledbCredentialsOutput {
	return o
}

func (o AppConnectionOracledbCredentialsOutput) ToAppConnectionOracledbCredentialsOutputWithContext(ctx context.Context) AppConnectionOracledbCredentialsOutput {
	return o
}

func (o AppConnectionOracledbCredentialsOutput) ToAppConnectionOracledbCredentialsPtrOutput() AppConnectionOracledbCredentialsPtrOutput {
	return o.ToAppConnectionOracledbCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionOracledbCredentialsOutput) ToAppConnectionOracledbCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionOracledbCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionOracledbCredentials) *AppConnectionOracledbCredentials {
		return &v
	}).(AppConnectionOracledbCredentialsPtrOutput)
}

// The name of the database to connect to.
func (o AppConnectionOracledbCredentialsOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) string { return v.Database }).(pulumi.StringOutput)
}

// The hostname of the database server.
func (o AppConnectionOracledbCredentialsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) string { return v.Host }).(pulumi.StringOutput)
}

// The password to connect to the database with.
func (o AppConnectionOracledbCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The port number of the database.
func (o AppConnectionOracledbCredentialsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionOracledbCredentialsOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionOracledbCredentialsOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionOracledbCredentialsOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) *bool { return v.SslRejectUnauthorized }).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionOracledbCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionOracledbCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type AppConnectionOracledbCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionOracledbCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionOracledbCredentials)(nil)).Elem()
}

func (o AppConnectionOracledbCredentialsPtrOutput) ToAppConnectionOracledbCredentialsPtrOutput() AppConnectionOracledbCredentialsPtrOutput {
	return o
}

func (o AppConnectionOracledbCredentialsPtrOutput) ToAppConnectionOracledbCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionOracledbCredentialsPtrOutput {
	return o
}

func (o AppConnectionOracledbCredentialsPtrOutput) Elem() AppConnectionOracledbCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) AppConnectionOracledbCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionOracledbCredentials
		return ret
	}).(AppConnectionOracledbCredentialsOutput)
}

// The name of the database to connect to.
func (o AppConnectionOracledbCredentialsPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The hostname of the database server.
func (o AppConnectionOracledbCredentialsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// The password to connect to the database with.
func (o AppConnectionOracledbCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The port number of the database.
func (o AppConnectionOracledbCredentialsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionOracledbCredentialsPtrOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SslCertificate
	}).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionOracledbCredentialsPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionOracledbCredentialsPtrOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslRejectUnauthorized
	}).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionOracledbCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionOracledbCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type AppConnectionPostgresCredentials struct {
	// The name of the database to connect to.
	Database string `pulumi:"database"`
	// The hostname of the database server.
	Host string `pulumi:"host"`
	// The password to connect to the database with.
	Password string `pulumi:"password"`
	// The port number of the database.
	Port *int `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate *string `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled *bool `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized *bool `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username string `pulumi:"username"`
}

// AppConnectionPostgresCredentialsInput is an input type that accepts AppConnectionPostgresCredentialsArgs and AppConnectionPostgresCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionPostgresCredentialsInput` via:
//
//	AppConnectionPostgresCredentialsArgs{...}
type AppConnectionPostgresCredentialsInput interface {
	pulumi.Input

	ToAppConnectionPostgresCredentialsOutput() AppConnectionPostgresCredentialsOutput
	ToAppConnectionPostgresCredentialsOutputWithContext(context.Context) AppConnectionPostgresCredentialsOutput
}

type AppConnectionPostgresCredentialsArgs struct {
	// The name of the database to connect to.
	Database pulumi.StringInput `pulumi:"database"`
	// The hostname of the database server.
	Host pulumi.StringInput `pulumi:"host"`
	// The password to connect to the database with.
	Password pulumi.StringInput `pulumi:"password"`
	// The port number of the database.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The SSL certificate to use for connection.
	SslCertificate pulumi.StringPtrInput `pulumi:"sslCertificate"`
	// Whether or not to use SSL when connecting to the database.
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// Whether or not to reject unauthorized SSL certificates.
	SslRejectUnauthorized pulumi.BoolPtrInput `pulumi:"sslRejectUnauthorized"`
	// The username to connect to the database with.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AppConnectionPostgresCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionPostgresCredentials)(nil)).Elem()
}

func (i AppConnectionPostgresCredentialsArgs) ToAppConnectionPostgresCredentialsOutput() AppConnectionPostgresCredentialsOutput {
	return i.ToAppConnectionPostgresCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionPostgresCredentialsArgs) ToAppConnectionPostgresCredentialsOutputWithContext(ctx context.Context) AppConnectionPostgresCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionPostgresCredentialsOutput)
}

func (i AppConnectionPostgresCredentialsArgs) ToAppConnectionPostgresCredentialsPtrOutput() AppConnectionPostgresCredentialsPtrOutput {
	return i.ToAppConnectionPostgresCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionPostgresCredentialsArgs) ToAppConnectionPostgresCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionPostgresCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionPostgresCredentialsOutput).ToAppConnectionPostgresCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionPostgresCredentialsPtrInput is an input type that accepts AppConnectionPostgresCredentialsArgs, AppConnectionPostgresCredentialsPtr and AppConnectionPostgresCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionPostgresCredentialsPtrInput` via:
//
//	        AppConnectionPostgresCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionPostgresCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionPostgresCredentialsPtrOutput() AppConnectionPostgresCredentialsPtrOutput
	ToAppConnectionPostgresCredentialsPtrOutputWithContext(context.Context) AppConnectionPostgresCredentialsPtrOutput
}

type appConnectionPostgresCredentialsPtrType AppConnectionPostgresCredentialsArgs

func AppConnectionPostgresCredentialsPtr(v *AppConnectionPostgresCredentialsArgs) AppConnectionPostgresCredentialsPtrInput {
	return (*appConnectionPostgresCredentialsPtrType)(v)
}

func (*appConnectionPostgresCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionPostgresCredentials)(nil)).Elem()
}

func (i *appConnectionPostgresCredentialsPtrType) ToAppConnectionPostgresCredentialsPtrOutput() AppConnectionPostgresCredentialsPtrOutput {
	return i.ToAppConnectionPostgresCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionPostgresCredentialsPtrType) ToAppConnectionPostgresCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionPostgresCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionPostgresCredentialsPtrOutput)
}

type AppConnectionPostgresCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionPostgresCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionPostgresCredentials)(nil)).Elem()
}

func (o AppConnectionPostgresCredentialsOutput) ToAppConnectionPostgresCredentialsOutput() AppConnectionPostgresCredentialsOutput {
	return o
}

func (o AppConnectionPostgresCredentialsOutput) ToAppConnectionPostgresCredentialsOutputWithContext(ctx context.Context) AppConnectionPostgresCredentialsOutput {
	return o
}

func (o AppConnectionPostgresCredentialsOutput) ToAppConnectionPostgresCredentialsPtrOutput() AppConnectionPostgresCredentialsPtrOutput {
	return o.ToAppConnectionPostgresCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionPostgresCredentialsOutput) ToAppConnectionPostgresCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionPostgresCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionPostgresCredentials) *AppConnectionPostgresCredentials {
		return &v
	}).(AppConnectionPostgresCredentialsPtrOutput)
}

// The name of the database to connect to.
func (o AppConnectionPostgresCredentialsOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) string { return v.Database }).(pulumi.StringOutput)
}

// The hostname of the database server.
func (o AppConnectionPostgresCredentialsOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) string { return v.Host }).(pulumi.StringOutput)
}

// The password to connect to the database with.
func (o AppConnectionPostgresCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The port number of the database.
func (o AppConnectionPostgresCredentialsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionPostgresCredentialsOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) *string { return v.SslCertificate }).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionPostgresCredentialsOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionPostgresCredentialsOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) *bool { return v.SslRejectUnauthorized }).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionPostgresCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionPostgresCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type AppConnectionPostgresCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionPostgresCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionPostgresCredentials)(nil)).Elem()
}

func (o AppConnectionPostgresCredentialsPtrOutput) ToAppConnectionPostgresCredentialsPtrOutput() AppConnectionPostgresCredentialsPtrOutput {
	return o
}

func (o AppConnectionPostgresCredentialsPtrOutput) ToAppConnectionPostgresCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionPostgresCredentialsPtrOutput {
	return o
}

func (o AppConnectionPostgresCredentialsPtrOutput) Elem() AppConnectionPostgresCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) AppConnectionPostgresCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionPostgresCredentials
		return ret
	}).(AppConnectionPostgresCredentialsOutput)
}

// The name of the database to connect to.
func (o AppConnectionPostgresCredentialsPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The hostname of the database server.
func (o AppConnectionPostgresCredentialsPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// The password to connect to the database with.
func (o AppConnectionPostgresCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The port number of the database.
func (o AppConnectionPostgresCredentialsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The SSL certificate to use for connection.
func (o AppConnectionPostgresCredentialsPtrOutput) SslCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SslCertificate
	}).(pulumi.StringPtrOutput)
}

// Whether or not to use SSL when connecting to the database.
func (o AppConnectionPostgresCredentialsPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether or not to reject unauthorized SSL certificates.
func (o AppConnectionPostgresCredentialsPtrOutput) SslRejectUnauthorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.SslRejectUnauthorized
	}).(pulumi.BoolPtrOutput)
}

// The username to connect to the database with.
func (o AppConnectionPostgresCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionPostgresCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type AppConnectionRenderCredentials struct {
	// The API key to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/render
	ApiKey string `pulumi:"apiKey"`
}

// AppConnectionRenderCredentialsInput is an input type that accepts AppConnectionRenderCredentialsArgs and AppConnectionRenderCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionRenderCredentialsInput` via:
//
//	AppConnectionRenderCredentialsArgs{...}
type AppConnectionRenderCredentialsInput interface {
	pulumi.Input

	ToAppConnectionRenderCredentialsOutput() AppConnectionRenderCredentialsOutput
	ToAppConnectionRenderCredentialsOutputWithContext(context.Context) AppConnectionRenderCredentialsOutput
}

type AppConnectionRenderCredentialsArgs struct {
	// The API key to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/render
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
}

func (AppConnectionRenderCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionRenderCredentials)(nil)).Elem()
}

func (i AppConnectionRenderCredentialsArgs) ToAppConnectionRenderCredentialsOutput() AppConnectionRenderCredentialsOutput {
	return i.ToAppConnectionRenderCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionRenderCredentialsArgs) ToAppConnectionRenderCredentialsOutputWithContext(ctx context.Context) AppConnectionRenderCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionRenderCredentialsOutput)
}

func (i AppConnectionRenderCredentialsArgs) ToAppConnectionRenderCredentialsPtrOutput() AppConnectionRenderCredentialsPtrOutput {
	return i.ToAppConnectionRenderCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionRenderCredentialsArgs) ToAppConnectionRenderCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionRenderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionRenderCredentialsOutput).ToAppConnectionRenderCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionRenderCredentialsPtrInput is an input type that accepts AppConnectionRenderCredentialsArgs, AppConnectionRenderCredentialsPtr and AppConnectionRenderCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionRenderCredentialsPtrInput` via:
//
//	        AppConnectionRenderCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionRenderCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionRenderCredentialsPtrOutput() AppConnectionRenderCredentialsPtrOutput
	ToAppConnectionRenderCredentialsPtrOutputWithContext(context.Context) AppConnectionRenderCredentialsPtrOutput
}

type appConnectionRenderCredentialsPtrType AppConnectionRenderCredentialsArgs

func AppConnectionRenderCredentialsPtr(v *AppConnectionRenderCredentialsArgs) AppConnectionRenderCredentialsPtrInput {
	return (*appConnectionRenderCredentialsPtrType)(v)
}

func (*appConnectionRenderCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionRenderCredentials)(nil)).Elem()
}

func (i *appConnectionRenderCredentialsPtrType) ToAppConnectionRenderCredentialsPtrOutput() AppConnectionRenderCredentialsPtrOutput {
	return i.ToAppConnectionRenderCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionRenderCredentialsPtrType) ToAppConnectionRenderCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionRenderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionRenderCredentialsPtrOutput)
}

type AppConnectionRenderCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionRenderCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionRenderCredentials)(nil)).Elem()
}

func (o AppConnectionRenderCredentialsOutput) ToAppConnectionRenderCredentialsOutput() AppConnectionRenderCredentialsOutput {
	return o
}

func (o AppConnectionRenderCredentialsOutput) ToAppConnectionRenderCredentialsOutputWithContext(ctx context.Context) AppConnectionRenderCredentialsOutput {
	return o
}

func (o AppConnectionRenderCredentialsOutput) ToAppConnectionRenderCredentialsPtrOutput() AppConnectionRenderCredentialsPtrOutput {
	return o.ToAppConnectionRenderCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionRenderCredentialsOutput) ToAppConnectionRenderCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionRenderCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionRenderCredentials) *AppConnectionRenderCredentials {
		return &v
	}).(AppConnectionRenderCredentialsPtrOutput)
}

// The API key to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/render
func (o AppConnectionRenderCredentialsOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionRenderCredentials) string { return v.ApiKey }).(pulumi.StringOutput)
}

type AppConnectionRenderCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionRenderCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionRenderCredentials)(nil)).Elem()
}

func (o AppConnectionRenderCredentialsPtrOutput) ToAppConnectionRenderCredentialsPtrOutput() AppConnectionRenderCredentialsPtrOutput {
	return o
}

func (o AppConnectionRenderCredentialsPtrOutput) ToAppConnectionRenderCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionRenderCredentialsPtrOutput {
	return o
}

func (o AppConnectionRenderCredentialsPtrOutput) Elem() AppConnectionRenderCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionRenderCredentials) AppConnectionRenderCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionRenderCredentials
		return ret
	}).(AppConnectionRenderCredentialsOutput)
}

// The API key to use for authentication. For more details, refer to the documentation here infisical.com/docs/integrations/app-connections/render
func (o AppConnectionRenderCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionRenderCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

type AppConnectionSupabaseCredentials struct {
	// The Supabase access key for authentication.
	AccessKey string `pulumi:"accessKey"`
	// The Supabase instance URL (e.g., https://your-domain.com).
	InstanceUrl *string `pulumi:"instanceUrl"`
}

// AppConnectionSupabaseCredentialsInput is an input type that accepts AppConnectionSupabaseCredentialsArgs and AppConnectionSupabaseCredentialsOutput values.
// You can construct a concrete instance of `AppConnectionSupabaseCredentialsInput` via:
//
//	AppConnectionSupabaseCredentialsArgs{...}
type AppConnectionSupabaseCredentialsInput interface {
	pulumi.Input

	ToAppConnectionSupabaseCredentialsOutput() AppConnectionSupabaseCredentialsOutput
	ToAppConnectionSupabaseCredentialsOutputWithContext(context.Context) AppConnectionSupabaseCredentialsOutput
}

type AppConnectionSupabaseCredentialsArgs struct {
	// The Supabase access key for authentication.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// The Supabase instance URL (e.g., https://your-domain.com).
	InstanceUrl pulumi.StringPtrInput `pulumi:"instanceUrl"`
}

func (AppConnectionSupabaseCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionSupabaseCredentials)(nil)).Elem()
}

func (i AppConnectionSupabaseCredentialsArgs) ToAppConnectionSupabaseCredentialsOutput() AppConnectionSupabaseCredentialsOutput {
	return i.ToAppConnectionSupabaseCredentialsOutputWithContext(context.Background())
}

func (i AppConnectionSupabaseCredentialsArgs) ToAppConnectionSupabaseCredentialsOutputWithContext(ctx context.Context) AppConnectionSupabaseCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionSupabaseCredentialsOutput)
}

func (i AppConnectionSupabaseCredentialsArgs) ToAppConnectionSupabaseCredentialsPtrOutput() AppConnectionSupabaseCredentialsPtrOutput {
	return i.ToAppConnectionSupabaseCredentialsPtrOutputWithContext(context.Background())
}

func (i AppConnectionSupabaseCredentialsArgs) ToAppConnectionSupabaseCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionSupabaseCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionSupabaseCredentialsOutput).ToAppConnectionSupabaseCredentialsPtrOutputWithContext(ctx)
}

// AppConnectionSupabaseCredentialsPtrInput is an input type that accepts AppConnectionSupabaseCredentialsArgs, AppConnectionSupabaseCredentialsPtr and AppConnectionSupabaseCredentialsPtrOutput values.
// You can construct a concrete instance of `AppConnectionSupabaseCredentialsPtrInput` via:
//
//	        AppConnectionSupabaseCredentialsArgs{...}
//
//	or:
//
//	        nil
type AppConnectionSupabaseCredentialsPtrInput interface {
	pulumi.Input

	ToAppConnectionSupabaseCredentialsPtrOutput() AppConnectionSupabaseCredentialsPtrOutput
	ToAppConnectionSupabaseCredentialsPtrOutputWithContext(context.Context) AppConnectionSupabaseCredentialsPtrOutput
}

type appConnectionSupabaseCredentialsPtrType AppConnectionSupabaseCredentialsArgs

func AppConnectionSupabaseCredentialsPtr(v *AppConnectionSupabaseCredentialsArgs) AppConnectionSupabaseCredentialsPtrInput {
	return (*appConnectionSupabaseCredentialsPtrType)(v)
}

func (*appConnectionSupabaseCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionSupabaseCredentials)(nil)).Elem()
}

func (i *appConnectionSupabaseCredentialsPtrType) ToAppConnectionSupabaseCredentialsPtrOutput() AppConnectionSupabaseCredentialsPtrOutput {
	return i.ToAppConnectionSupabaseCredentialsPtrOutputWithContext(context.Background())
}

func (i *appConnectionSupabaseCredentialsPtrType) ToAppConnectionSupabaseCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionSupabaseCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionSupabaseCredentialsPtrOutput)
}

type AppConnectionSupabaseCredentialsOutput struct{ *pulumi.OutputState }

func (AppConnectionSupabaseCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppConnectionSupabaseCredentials)(nil)).Elem()
}

func (o AppConnectionSupabaseCredentialsOutput) ToAppConnectionSupabaseCredentialsOutput() AppConnectionSupabaseCredentialsOutput {
	return o
}

func (o AppConnectionSupabaseCredentialsOutput) ToAppConnectionSupabaseCredentialsOutputWithContext(ctx context.Context) AppConnectionSupabaseCredentialsOutput {
	return o
}

func (o AppConnectionSupabaseCredentialsOutput) ToAppConnectionSupabaseCredentialsPtrOutput() AppConnectionSupabaseCredentialsPtrOutput {
	return o.ToAppConnectionSupabaseCredentialsPtrOutputWithContext(context.Background())
}

func (o AppConnectionSupabaseCredentialsOutput) ToAppConnectionSupabaseCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionSupabaseCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppConnectionSupabaseCredentials) *AppConnectionSupabaseCredentials {
		return &v
	}).(AppConnectionSupabaseCredentialsPtrOutput)
}

// The Supabase access key for authentication.
func (o AppConnectionSupabaseCredentialsOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppConnectionSupabaseCredentials) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The Supabase instance URL (e.g., https://your-domain.com).
func (o AppConnectionSupabaseCredentialsOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppConnectionSupabaseCredentials) *string { return v.InstanceUrl }).(pulumi.StringPtrOutput)
}

type AppConnectionSupabaseCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AppConnectionSupabaseCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionSupabaseCredentials)(nil)).Elem()
}

func (o AppConnectionSupabaseCredentialsPtrOutput) ToAppConnectionSupabaseCredentialsPtrOutput() AppConnectionSupabaseCredentialsPtrOutput {
	return o
}

func (o AppConnectionSupabaseCredentialsPtrOutput) ToAppConnectionSupabaseCredentialsPtrOutputWithContext(ctx context.Context) AppConnectionSupabaseCredentialsPtrOutput {
	return o
}

func (o AppConnectionSupabaseCredentialsPtrOutput) Elem() AppConnectionSupabaseCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionSupabaseCredentials) AppConnectionSupabaseCredentials {
		if v != nil {
			return *v
		}
		var ret AppConnectionSupabaseCredentials
		return ret
	}).(AppConnectionSupabaseCredentialsOutput)
}

// The Supabase access key for authentication.
func (o AppConnectionSupabaseCredentialsPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionSupabaseCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The Supabase instance URL (e.g., https://your-domain.com).
func (o AppConnectionSupabaseCredentialsPtrOutput) InstanceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionSupabaseCredentials) *string {
		if v == nil {
			return nil
		}
		return v.InstanceUrl
	}).(pulumi.StringPtrOutput)
}

type DynamicSecretAwsIamConfiguration struct {
	// Configuration for the 'access_key' authentication method.
	AccessKeyConfig *DynamicSecretAwsIamConfigurationAccessKeyConfig `pulumi:"accessKeyConfig"`
	// Configuration for the 'assume_role' authentication method.
	AssumeRoleConfig *DynamicSecretAwsIamConfigurationAssumeRoleConfig `pulumi:"assumeRoleConfig"`
	// IAM AWS Path to scope created IAM User resource access.
	AwsPath *string `pulumi:"awsPath"`
	// The authentication method to use. Must be 'access_key' or 'assume_role'.
	Method string `pulumi:"method"`
	// The IAM Policy ARN of the AWS Permissions Boundary to attach to IAM users created in the role.
	PermissionBoundaryPolicyArn *string `pulumi:"permissionBoundaryPolicyArn"`
	// The AWS IAM managed policies that should be attached to the created users. Multiple values can be provided by separating them with commas
	PolicyArns *string `pulumi:"policyArns"`
	// The AWS IAM inline policy that should be attached to the created users. Multiple values can be provided by separating them with commas
	PolicyDocument *string `pulumi:"policyDocument"`
	// The AWS data center region.
	Region string `pulumi:"region"`
	// The AWS IAM groups that should be assigned to the created users. Multiple values can be provided by separating them with commas
	UserGroups *string `pulumi:"userGroups"`
}

// DynamicSecretAwsIamConfigurationInput is an input type that accepts DynamicSecretAwsIamConfigurationArgs and DynamicSecretAwsIamConfigurationOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamConfigurationInput` via:
//
//	DynamicSecretAwsIamConfigurationArgs{...}
type DynamicSecretAwsIamConfigurationInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamConfigurationOutput() DynamicSecretAwsIamConfigurationOutput
	ToDynamicSecretAwsIamConfigurationOutputWithContext(context.Context) DynamicSecretAwsIamConfigurationOutput
}

type DynamicSecretAwsIamConfigurationArgs struct {
	// Configuration for the 'access_key' authentication method.
	AccessKeyConfig DynamicSecretAwsIamConfigurationAccessKeyConfigPtrInput `pulumi:"accessKeyConfig"`
	// Configuration for the 'assume_role' authentication method.
	AssumeRoleConfig DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrInput `pulumi:"assumeRoleConfig"`
	// IAM AWS Path to scope created IAM User resource access.
	AwsPath pulumi.StringPtrInput `pulumi:"awsPath"`
	// The authentication method to use. Must be 'access_key' or 'assume_role'.
	Method pulumi.StringInput `pulumi:"method"`
	// The IAM Policy ARN of the AWS Permissions Boundary to attach to IAM users created in the role.
	PermissionBoundaryPolicyArn pulumi.StringPtrInput `pulumi:"permissionBoundaryPolicyArn"`
	// The AWS IAM managed policies that should be attached to the created users. Multiple values can be provided by separating them with commas
	PolicyArns pulumi.StringPtrInput `pulumi:"policyArns"`
	// The AWS IAM inline policy that should be attached to the created users. Multiple values can be provided by separating them with commas
	PolicyDocument pulumi.StringPtrInput `pulumi:"policyDocument"`
	// The AWS data center region.
	Region pulumi.StringInput `pulumi:"region"`
	// The AWS IAM groups that should be assigned to the created users. Multiple values can be provided by separating them with commas
	UserGroups pulumi.StringPtrInput `pulumi:"userGroups"`
}

func (DynamicSecretAwsIamConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamConfiguration)(nil)).Elem()
}

func (i DynamicSecretAwsIamConfigurationArgs) ToDynamicSecretAwsIamConfigurationOutput() DynamicSecretAwsIamConfigurationOutput {
	return i.ToDynamicSecretAwsIamConfigurationOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamConfigurationArgs) ToDynamicSecretAwsIamConfigurationOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationOutput)
}

func (i DynamicSecretAwsIamConfigurationArgs) ToDynamicSecretAwsIamConfigurationPtrOutput() DynamicSecretAwsIamConfigurationPtrOutput {
	return i.ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamConfigurationArgs) ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationOutput).ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(ctx)
}

// DynamicSecretAwsIamConfigurationPtrInput is an input type that accepts DynamicSecretAwsIamConfigurationArgs, DynamicSecretAwsIamConfigurationPtr and DynamicSecretAwsIamConfigurationPtrOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamConfigurationPtrInput` via:
//
//	        DynamicSecretAwsIamConfigurationArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretAwsIamConfigurationPtrInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamConfigurationPtrOutput() DynamicSecretAwsIamConfigurationPtrOutput
	ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(context.Context) DynamicSecretAwsIamConfigurationPtrOutput
}

type dynamicSecretAwsIamConfigurationPtrType DynamicSecretAwsIamConfigurationArgs

func DynamicSecretAwsIamConfigurationPtr(v *DynamicSecretAwsIamConfigurationArgs) DynamicSecretAwsIamConfigurationPtrInput {
	return (*dynamicSecretAwsIamConfigurationPtrType)(v)
}

func (*dynamicSecretAwsIamConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretAwsIamConfiguration)(nil)).Elem()
}

func (i *dynamicSecretAwsIamConfigurationPtrType) ToDynamicSecretAwsIamConfigurationPtrOutput() DynamicSecretAwsIamConfigurationPtrOutput {
	return i.ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretAwsIamConfigurationPtrType) ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationPtrOutput)
}

type DynamicSecretAwsIamConfigurationOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamConfiguration)(nil)).Elem()
}

func (o DynamicSecretAwsIamConfigurationOutput) ToDynamicSecretAwsIamConfigurationOutput() DynamicSecretAwsIamConfigurationOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationOutput) ToDynamicSecretAwsIamConfigurationOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationOutput) ToDynamicSecretAwsIamConfigurationPtrOutput() DynamicSecretAwsIamConfigurationPtrOutput {
	return o.ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(context.Background())
}

func (o DynamicSecretAwsIamConfigurationOutput) ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretAwsIamConfiguration) *DynamicSecretAwsIamConfiguration {
		return &v
	}).(DynamicSecretAwsIamConfigurationPtrOutput)
}

// Configuration for the 'access_key' authentication method.
func (o DynamicSecretAwsIamConfigurationOutput) AccessKeyConfig() DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) *DynamicSecretAwsIamConfigurationAccessKeyConfig {
		return v.AccessKeyConfig
	}).(DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput)
}

// Configuration for the 'assume_role' authentication method.
func (o DynamicSecretAwsIamConfigurationOutput) AssumeRoleConfig() DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) *DynamicSecretAwsIamConfigurationAssumeRoleConfig {
		return v.AssumeRoleConfig
	}).(DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput)
}

// IAM AWS Path to scope created IAM User resource access.
func (o DynamicSecretAwsIamConfigurationOutput) AwsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) *string { return v.AwsPath }).(pulumi.StringPtrOutput)
}

// The authentication method to use. Must be 'access_key' or 'assume_role'.
func (o DynamicSecretAwsIamConfigurationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) string { return v.Method }).(pulumi.StringOutput)
}

// The IAM Policy ARN of the AWS Permissions Boundary to attach to IAM users created in the role.
func (o DynamicSecretAwsIamConfigurationOutput) PermissionBoundaryPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) *string { return v.PermissionBoundaryPolicyArn }).(pulumi.StringPtrOutput)
}

// The AWS IAM managed policies that should be attached to the created users. Multiple values can be provided by separating them with commas
func (o DynamicSecretAwsIamConfigurationOutput) PolicyArns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) *string { return v.PolicyArns }).(pulumi.StringPtrOutput)
}

// The AWS IAM inline policy that should be attached to the created users. Multiple values can be provided by separating them with commas
func (o DynamicSecretAwsIamConfigurationOutput) PolicyDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) *string { return v.PolicyDocument }).(pulumi.StringPtrOutput)
}

// The AWS data center region.
func (o DynamicSecretAwsIamConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// The AWS IAM groups that should be assigned to the created users. Multiple values can be provided by separating them with commas
func (o DynamicSecretAwsIamConfigurationOutput) UserGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfiguration) *string { return v.UserGroups }).(pulumi.StringPtrOutput)
}

type DynamicSecretAwsIamConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretAwsIamConfiguration)(nil)).Elem()
}

func (o DynamicSecretAwsIamConfigurationPtrOutput) ToDynamicSecretAwsIamConfigurationPtrOutput() DynamicSecretAwsIamConfigurationPtrOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationPtrOutput) ToDynamicSecretAwsIamConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationPtrOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationPtrOutput) Elem() DynamicSecretAwsIamConfigurationOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) DynamicSecretAwsIamConfiguration {
		if v != nil {
			return *v
		}
		var ret DynamicSecretAwsIamConfiguration
		return ret
	}).(DynamicSecretAwsIamConfigurationOutput)
}

// Configuration for the 'access_key' authentication method.
func (o DynamicSecretAwsIamConfigurationPtrOutput) AccessKeyConfig() DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *DynamicSecretAwsIamConfigurationAccessKeyConfig {
		if v == nil {
			return nil
		}
		return v.AccessKeyConfig
	}).(DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput)
}

// Configuration for the 'assume_role' authentication method.
func (o DynamicSecretAwsIamConfigurationPtrOutput) AssumeRoleConfig() DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *DynamicSecretAwsIamConfigurationAssumeRoleConfig {
		if v == nil {
			return nil
		}
		return v.AssumeRoleConfig
	}).(DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput)
}

// IAM AWS Path to scope created IAM User resource access.
func (o DynamicSecretAwsIamConfigurationPtrOutput) AwsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AwsPath
	}).(pulumi.StringPtrOutput)
}

// The authentication method to use. Must be 'access_key' or 'assume_role'.
func (o DynamicSecretAwsIamConfigurationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Method
	}).(pulumi.StringPtrOutput)
}

// The IAM Policy ARN of the AWS Permissions Boundary to attach to IAM users created in the role.
func (o DynamicSecretAwsIamConfigurationPtrOutput) PermissionBoundaryPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PermissionBoundaryPolicyArn
	}).(pulumi.StringPtrOutput)
}

// The AWS IAM managed policies that should be attached to the created users. Multiple values can be provided by separating them with commas
func (o DynamicSecretAwsIamConfigurationPtrOutput) PolicyArns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PolicyArns
	}).(pulumi.StringPtrOutput)
}

// The AWS IAM inline policy that should be attached to the created users. Multiple values can be provided by separating them with commas
func (o DynamicSecretAwsIamConfigurationPtrOutput) PolicyDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PolicyDocument
	}).(pulumi.StringPtrOutput)
}

// The AWS data center region.
func (o DynamicSecretAwsIamConfigurationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// The AWS IAM groups that should be assigned to the created users. Multiple values can be provided by separating them with commas
func (o DynamicSecretAwsIamConfigurationPtrOutput) UserGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.UserGroups
	}).(pulumi.StringPtrOutput)
}

type DynamicSecretAwsIamConfigurationAccessKeyConfig struct {
	// The managing AWS IAM User Access Key
	AccessKey string `pulumi:"accessKey"`
	// The managing AWS IAM User Secret Key
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// DynamicSecretAwsIamConfigurationAccessKeyConfigInput is an input type that accepts DynamicSecretAwsIamConfigurationAccessKeyConfigArgs and DynamicSecretAwsIamConfigurationAccessKeyConfigOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamConfigurationAccessKeyConfigInput` via:
//
//	DynamicSecretAwsIamConfigurationAccessKeyConfigArgs{...}
type DynamicSecretAwsIamConfigurationAccessKeyConfigInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamConfigurationAccessKeyConfigOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigOutput
	ToDynamicSecretAwsIamConfigurationAccessKeyConfigOutputWithContext(context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigOutput
}

type DynamicSecretAwsIamConfigurationAccessKeyConfigArgs struct {
	// The managing AWS IAM User Access Key
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// The managing AWS IAM User Secret Key
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (DynamicSecretAwsIamConfigurationAccessKeyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamConfigurationAccessKeyConfig)(nil)).Elem()
}

func (i DynamicSecretAwsIamConfigurationAccessKeyConfigArgs) ToDynamicSecretAwsIamConfigurationAccessKeyConfigOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigOutput {
	return i.ToDynamicSecretAwsIamConfigurationAccessKeyConfigOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamConfigurationAccessKeyConfigArgs) ToDynamicSecretAwsIamConfigurationAccessKeyConfigOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationAccessKeyConfigOutput)
}

func (i DynamicSecretAwsIamConfigurationAccessKeyConfigArgs) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return i.ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamConfigurationAccessKeyConfigArgs) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationAccessKeyConfigOutput).ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(ctx)
}

// DynamicSecretAwsIamConfigurationAccessKeyConfigPtrInput is an input type that accepts DynamicSecretAwsIamConfigurationAccessKeyConfigArgs, DynamicSecretAwsIamConfigurationAccessKeyConfigPtr and DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamConfigurationAccessKeyConfigPtrInput` via:
//
//	        DynamicSecretAwsIamConfigurationAccessKeyConfigArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretAwsIamConfigurationAccessKeyConfigPtrInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput
	ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput
}

type dynamicSecretAwsIamConfigurationAccessKeyConfigPtrType DynamicSecretAwsIamConfigurationAccessKeyConfigArgs

func DynamicSecretAwsIamConfigurationAccessKeyConfigPtr(v *DynamicSecretAwsIamConfigurationAccessKeyConfigArgs) DynamicSecretAwsIamConfigurationAccessKeyConfigPtrInput {
	return (*dynamicSecretAwsIamConfigurationAccessKeyConfigPtrType)(v)
}

func (*dynamicSecretAwsIamConfigurationAccessKeyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretAwsIamConfigurationAccessKeyConfig)(nil)).Elem()
}

func (i *dynamicSecretAwsIamConfigurationAccessKeyConfigPtrType) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return i.ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretAwsIamConfigurationAccessKeyConfigPtrType) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput)
}

type DynamicSecretAwsIamConfigurationAccessKeyConfigOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamConfigurationAccessKeyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamConfigurationAccessKeyConfig)(nil)).Elem()
}

func (o DynamicSecretAwsIamConfigurationAccessKeyConfigOutput) ToDynamicSecretAwsIamConfigurationAccessKeyConfigOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAccessKeyConfigOutput) ToDynamicSecretAwsIamConfigurationAccessKeyConfigOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAccessKeyConfigOutput) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return o.ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(context.Background())
}

func (o DynamicSecretAwsIamConfigurationAccessKeyConfigOutput) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretAwsIamConfigurationAccessKeyConfig) *DynamicSecretAwsIamConfigurationAccessKeyConfig {
		return &v
	}).(DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput)
}

// The managing AWS IAM User Access Key
func (o DynamicSecretAwsIamConfigurationAccessKeyConfigOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfigurationAccessKeyConfig) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The managing AWS IAM User Secret Key
func (o DynamicSecretAwsIamConfigurationAccessKeyConfigOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfigurationAccessKeyConfig) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretAwsIamConfigurationAccessKeyConfig)(nil)).Elem()
}

func (o DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput() DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput) ToDynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput) Elem() DynamicSecretAwsIamConfigurationAccessKeyConfigOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfigurationAccessKeyConfig) DynamicSecretAwsIamConfigurationAccessKeyConfig {
		if v != nil {
			return *v
		}
		var ret DynamicSecretAwsIamConfigurationAccessKeyConfig
		return ret
	}).(DynamicSecretAwsIamConfigurationAccessKeyConfigOutput)
}

// The managing AWS IAM User Access Key
func (o DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfigurationAccessKeyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The managing AWS IAM User Secret Key
func (o DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfigurationAccessKeyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type DynamicSecretAwsIamConfigurationAssumeRoleConfig struct {
	// The ARN of the AWS Role to assume.
	RoleArn string `pulumi:"roleArn"`
}

// DynamicSecretAwsIamConfigurationAssumeRoleConfigInput is an input type that accepts DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs and DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamConfigurationAssumeRoleConfigInput` via:
//
//	DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs{...}
type DynamicSecretAwsIamConfigurationAssumeRoleConfigInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamConfigurationAssumeRoleConfigOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput
	ToDynamicSecretAwsIamConfigurationAssumeRoleConfigOutputWithContext(context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput
}

type DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs struct {
	// The ARN of the AWS Role to assume.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamConfigurationAssumeRoleConfig)(nil)).Elem()
}

func (i DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput {
	return i.ToDynamicSecretAwsIamConfigurationAssumeRoleConfigOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput)
}

func (i DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return i.ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput).ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(ctx)
}

// DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrInput is an input type that accepts DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs, DynamicSecretAwsIamConfigurationAssumeRoleConfigPtr and DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrInput` via:
//
//	        DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput
	ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput
}

type dynamicSecretAwsIamConfigurationAssumeRoleConfigPtrType DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs

func DynamicSecretAwsIamConfigurationAssumeRoleConfigPtr(v *DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs) DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrInput {
	return (*dynamicSecretAwsIamConfigurationAssumeRoleConfigPtrType)(v)
}

func (*dynamicSecretAwsIamConfigurationAssumeRoleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretAwsIamConfigurationAssumeRoleConfig)(nil)).Elem()
}

func (i *dynamicSecretAwsIamConfigurationAssumeRoleConfigPtrType) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return i.ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretAwsIamConfigurationAssumeRoleConfigPtrType) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput)
}

type DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamConfigurationAssumeRoleConfig)(nil)).Elem()
}

func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return o.ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(context.Background())
}

func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretAwsIamConfigurationAssumeRoleConfig) *DynamicSecretAwsIamConfigurationAssumeRoleConfig {
		return &v
	}).(DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput)
}

// The ARN of the AWS Role to assume.
func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamConfigurationAssumeRoleConfig) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretAwsIamConfigurationAssumeRoleConfig)(nil)).Elem()
}

func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput() DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput) ToDynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutputWithContext(ctx context.Context) DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput {
	return o
}

func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput) Elem() DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfigurationAssumeRoleConfig) DynamicSecretAwsIamConfigurationAssumeRoleConfig {
		if v != nil {
			return *v
		}
		var ret DynamicSecretAwsIamConfigurationAssumeRoleConfig
		return ret
	}).(DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput)
}

// The ARN of the AWS Role to assume.
func (o DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretAwsIamConfigurationAssumeRoleConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DynamicSecretAwsIamMetadata struct {
	// The key of the metadata object
	Key string `pulumi:"key"`
	// The value of the metadata object
	Value string `pulumi:"value"`
}

// DynamicSecretAwsIamMetadataInput is an input type that accepts DynamicSecretAwsIamMetadataArgs and DynamicSecretAwsIamMetadataOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamMetadataInput` via:
//
//	DynamicSecretAwsIamMetadataArgs{...}
type DynamicSecretAwsIamMetadataInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamMetadataOutput() DynamicSecretAwsIamMetadataOutput
	ToDynamicSecretAwsIamMetadataOutputWithContext(context.Context) DynamicSecretAwsIamMetadataOutput
}

type DynamicSecretAwsIamMetadataArgs struct {
	// The key of the metadata object
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the metadata object
	Value pulumi.StringInput `pulumi:"value"`
}

func (DynamicSecretAwsIamMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamMetadata)(nil)).Elem()
}

func (i DynamicSecretAwsIamMetadataArgs) ToDynamicSecretAwsIamMetadataOutput() DynamicSecretAwsIamMetadataOutput {
	return i.ToDynamicSecretAwsIamMetadataOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamMetadataArgs) ToDynamicSecretAwsIamMetadataOutputWithContext(ctx context.Context) DynamicSecretAwsIamMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamMetadataOutput)
}

// DynamicSecretAwsIamMetadataArrayInput is an input type that accepts DynamicSecretAwsIamMetadataArray and DynamicSecretAwsIamMetadataArrayOutput values.
// You can construct a concrete instance of `DynamicSecretAwsIamMetadataArrayInput` via:
//
//	DynamicSecretAwsIamMetadataArray{ DynamicSecretAwsIamMetadataArgs{...} }
type DynamicSecretAwsIamMetadataArrayInput interface {
	pulumi.Input

	ToDynamicSecretAwsIamMetadataArrayOutput() DynamicSecretAwsIamMetadataArrayOutput
	ToDynamicSecretAwsIamMetadataArrayOutputWithContext(context.Context) DynamicSecretAwsIamMetadataArrayOutput
}

type DynamicSecretAwsIamMetadataArray []DynamicSecretAwsIamMetadataInput

func (DynamicSecretAwsIamMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicSecretAwsIamMetadata)(nil)).Elem()
}

func (i DynamicSecretAwsIamMetadataArray) ToDynamicSecretAwsIamMetadataArrayOutput() DynamicSecretAwsIamMetadataArrayOutput {
	return i.ToDynamicSecretAwsIamMetadataArrayOutputWithContext(context.Background())
}

func (i DynamicSecretAwsIamMetadataArray) ToDynamicSecretAwsIamMetadataArrayOutputWithContext(ctx context.Context) DynamicSecretAwsIamMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretAwsIamMetadataArrayOutput)
}

type DynamicSecretAwsIamMetadataOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretAwsIamMetadata)(nil)).Elem()
}

func (o DynamicSecretAwsIamMetadataOutput) ToDynamicSecretAwsIamMetadataOutput() DynamicSecretAwsIamMetadataOutput {
	return o
}

func (o DynamicSecretAwsIamMetadataOutput) ToDynamicSecretAwsIamMetadataOutputWithContext(ctx context.Context) DynamicSecretAwsIamMetadataOutput {
	return o
}

// The key of the metadata object
func (o DynamicSecretAwsIamMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the metadata object
func (o DynamicSecretAwsIamMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretAwsIamMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type DynamicSecretAwsIamMetadataArrayOutput struct{ *pulumi.OutputState }

func (DynamicSecretAwsIamMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicSecretAwsIamMetadata)(nil)).Elem()
}

func (o DynamicSecretAwsIamMetadataArrayOutput) ToDynamicSecretAwsIamMetadataArrayOutput() DynamicSecretAwsIamMetadataArrayOutput {
	return o
}

func (o DynamicSecretAwsIamMetadataArrayOutput) ToDynamicSecretAwsIamMetadataArrayOutputWithContext(ctx context.Context) DynamicSecretAwsIamMetadataArrayOutput {
	return o
}

func (o DynamicSecretAwsIamMetadataArrayOutput) Index(i pulumi.IntInput) DynamicSecretAwsIamMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicSecretAwsIamMetadata {
		return vs[0].([]DynamicSecretAwsIamMetadata)[vs[1].(int)]
	}).(DynamicSecretAwsIamMetadataOutput)
}

type DynamicSecretKubernetesConfiguration struct {
	// Configuration for the 'api' authentication method.
	ApiConfig *DynamicSecretKubernetesConfigurationApiConfig `pulumi:"apiConfig"`
	// Optional list of audiences to include in the generated token.
	Audiences []string `pulumi:"audiences"`
	// Choose between Token ('api') or 'gateway' authentication. If using Gateway, the Gateway must be deployed in your Kubernetes cluster.
	AuthMethod string `pulumi:"authMethod"`
	// Choose between 'static' (predefined service account) or 'dynamic' (temporary service accounts with role assignments).
	CredentialType string `pulumi:"credentialType"`
	// Configuration for the 'dynamic' credential type.
	DynamicConfig *DynamicSecretKubernetesConfigurationDynamicConfig `pulumi:"dynamicConfig"`
	// Select a gateway for private cluster access. If not specified, the Internet Gateway will be used.
	GatewayId *string `pulumi:"gatewayId"`
	// Configuration for the 'static' credential type.
	StaticConfig *DynamicSecretKubernetesConfigurationStaticConfig `pulumi:"staticConfig"`
}

// DynamicSecretKubernetesConfigurationInput is an input type that accepts DynamicSecretKubernetesConfigurationArgs and DynamicSecretKubernetesConfigurationOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationInput` via:
//
//	DynamicSecretKubernetesConfigurationArgs{...}
type DynamicSecretKubernetesConfigurationInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationOutput() DynamicSecretKubernetesConfigurationOutput
	ToDynamicSecretKubernetesConfigurationOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationOutput
}

type DynamicSecretKubernetesConfigurationArgs struct {
	// Configuration for the 'api' authentication method.
	ApiConfig DynamicSecretKubernetesConfigurationApiConfigPtrInput `pulumi:"apiConfig"`
	// Optional list of audiences to include in the generated token.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Choose between Token ('api') or 'gateway' authentication. If using Gateway, the Gateway must be deployed in your Kubernetes cluster.
	AuthMethod pulumi.StringInput `pulumi:"authMethod"`
	// Choose between 'static' (predefined service account) or 'dynamic' (temporary service accounts with role assignments).
	CredentialType pulumi.StringInput `pulumi:"credentialType"`
	// Configuration for the 'dynamic' credential type.
	DynamicConfig DynamicSecretKubernetesConfigurationDynamicConfigPtrInput `pulumi:"dynamicConfig"`
	// Select a gateway for private cluster access. If not specified, the Internet Gateway will be used.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Configuration for the 'static' credential type.
	StaticConfig DynamicSecretKubernetesConfigurationStaticConfigPtrInput `pulumi:"staticConfig"`
}

func (DynamicSecretKubernetesConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfiguration)(nil)).Elem()
}

func (i DynamicSecretKubernetesConfigurationArgs) ToDynamicSecretKubernetesConfigurationOutput() DynamicSecretKubernetesConfigurationOutput {
	return i.ToDynamicSecretKubernetesConfigurationOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationArgs) ToDynamicSecretKubernetesConfigurationOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationOutput)
}

func (i DynamicSecretKubernetesConfigurationArgs) ToDynamicSecretKubernetesConfigurationPtrOutput() DynamicSecretKubernetesConfigurationPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationArgs) ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationOutput).ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(ctx)
}

// DynamicSecretKubernetesConfigurationPtrInput is an input type that accepts DynamicSecretKubernetesConfigurationArgs, DynamicSecretKubernetesConfigurationPtr and DynamicSecretKubernetesConfigurationPtrOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationPtrInput` via:
//
//	        DynamicSecretKubernetesConfigurationArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretKubernetesConfigurationPtrInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationPtrOutput() DynamicSecretKubernetesConfigurationPtrOutput
	ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationPtrOutput
}

type dynamicSecretKubernetesConfigurationPtrType DynamicSecretKubernetesConfigurationArgs

func DynamicSecretKubernetesConfigurationPtr(v *DynamicSecretKubernetesConfigurationArgs) DynamicSecretKubernetesConfigurationPtrInput {
	return (*dynamicSecretKubernetesConfigurationPtrType)(v)
}

func (*dynamicSecretKubernetesConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfiguration)(nil)).Elem()
}

func (i *dynamicSecretKubernetesConfigurationPtrType) ToDynamicSecretKubernetesConfigurationPtrOutput() DynamicSecretKubernetesConfigurationPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretKubernetesConfigurationPtrType) ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationPtrOutput)
}

type DynamicSecretKubernetesConfigurationOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfiguration)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationOutput) ToDynamicSecretKubernetesConfigurationOutput() DynamicSecretKubernetesConfigurationOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationOutput) ToDynamicSecretKubernetesConfigurationOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationOutput) ToDynamicSecretKubernetesConfigurationPtrOutput() DynamicSecretKubernetesConfigurationPtrOutput {
	return o.ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(context.Background())
}

func (o DynamicSecretKubernetesConfigurationOutput) ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretKubernetesConfiguration) *DynamicSecretKubernetesConfiguration {
		return &v
	}).(DynamicSecretKubernetesConfigurationPtrOutput)
}

// Configuration for the 'api' authentication method.
func (o DynamicSecretKubernetesConfigurationOutput) ApiConfig() DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfiguration) *DynamicSecretKubernetesConfigurationApiConfig {
		return v.ApiConfig
	}).(DynamicSecretKubernetesConfigurationApiConfigPtrOutput)
}

// Optional list of audiences to include in the generated token.
func (o DynamicSecretKubernetesConfigurationOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfiguration) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// Choose between Token ('api') or 'gateway' authentication. If using Gateway, the Gateway must be deployed in your Kubernetes cluster.
func (o DynamicSecretKubernetesConfigurationOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfiguration) string { return v.AuthMethod }).(pulumi.StringOutput)
}

// Choose between 'static' (predefined service account) or 'dynamic' (temporary service accounts with role assignments).
func (o DynamicSecretKubernetesConfigurationOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfiguration) string { return v.CredentialType }).(pulumi.StringOutput)
}

// Configuration for the 'dynamic' credential type.
func (o DynamicSecretKubernetesConfigurationOutput) DynamicConfig() DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfiguration) *DynamicSecretKubernetesConfigurationDynamicConfig {
		return v.DynamicConfig
	}).(DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput)
}

// Select a gateway for private cluster access. If not specified, the Internet Gateway will be used.
func (o DynamicSecretKubernetesConfigurationOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfiguration) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Configuration for the 'static' credential type.
func (o DynamicSecretKubernetesConfigurationOutput) StaticConfig() DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfiguration) *DynamicSecretKubernetesConfigurationStaticConfig {
		return v.StaticConfig
	}).(DynamicSecretKubernetesConfigurationStaticConfigPtrOutput)
}

type DynamicSecretKubernetesConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfiguration)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationPtrOutput) ToDynamicSecretKubernetesConfigurationPtrOutput() DynamicSecretKubernetesConfigurationPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationPtrOutput) ToDynamicSecretKubernetesConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationPtrOutput) Elem() DynamicSecretKubernetesConfigurationOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) DynamicSecretKubernetesConfiguration {
		if v != nil {
			return *v
		}
		var ret DynamicSecretKubernetesConfiguration
		return ret
	}).(DynamicSecretKubernetesConfigurationOutput)
}

// Configuration for the 'api' authentication method.
func (o DynamicSecretKubernetesConfigurationPtrOutput) ApiConfig() DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) *DynamicSecretKubernetesConfigurationApiConfig {
		if v == nil {
			return nil
		}
		return v.ApiConfig
	}).(DynamicSecretKubernetesConfigurationApiConfigPtrOutput)
}

// Optional list of audiences to include in the generated token.
func (o DynamicSecretKubernetesConfigurationPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Choose between Token ('api') or 'gateway' authentication. If using Gateway, the Gateway must be deployed in your Kubernetes cluster.
func (o DynamicSecretKubernetesConfigurationPtrOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AuthMethod
	}).(pulumi.StringPtrOutput)
}

// Choose between 'static' (predefined service account) or 'dynamic' (temporary service accounts with role assignments).
func (o DynamicSecretKubernetesConfigurationPtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// Configuration for the 'dynamic' credential type.
func (o DynamicSecretKubernetesConfigurationPtrOutput) DynamicConfig() DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) *DynamicSecretKubernetesConfigurationDynamicConfig {
		if v == nil {
			return nil
		}
		return v.DynamicConfig
	}).(DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput)
}

// Select a gateway for private cluster access. If not specified, the Internet Gateway will be used.
func (o DynamicSecretKubernetesConfigurationPtrOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GatewayId
	}).(pulumi.StringPtrOutput)
}

// Configuration for the 'static' credential type.
func (o DynamicSecretKubernetesConfigurationPtrOutput) StaticConfig() DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfiguration) *DynamicSecretKubernetesConfigurationStaticConfig {
		if v == nil {
			return nil
		}
		return v.StaticConfig
	}).(DynamicSecretKubernetesConfigurationStaticConfigPtrOutput)
}

type DynamicSecretKubernetesConfigurationApiConfig struct {
	// Custom CA certificate for the Kubernetes API server. Leave blank to use the system/public CA.
	Ca *string `pulumi:"ca"`
	// Service account token with permissions to create service accounts and manage RBAC.
	ClusterToken string `pulumi:"clusterToken"`
	// Kubernetes API server URL (e.g., https://kubernetes.default.svc).
	ClusterUrl string `pulumi:"clusterUrl"`
	// Whether to enable SSL verification for the Kubernetes API server connection.
	EnableSsl *bool `pulumi:"enableSsl"`
}

// DynamicSecretKubernetesConfigurationApiConfigInput is an input type that accepts DynamicSecretKubernetesConfigurationApiConfigArgs and DynamicSecretKubernetesConfigurationApiConfigOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationApiConfigInput` via:
//
//	DynamicSecretKubernetesConfigurationApiConfigArgs{...}
type DynamicSecretKubernetesConfigurationApiConfigInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationApiConfigOutput() DynamicSecretKubernetesConfigurationApiConfigOutput
	ToDynamicSecretKubernetesConfigurationApiConfigOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationApiConfigOutput
}

type DynamicSecretKubernetesConfigurationApiConfigArgs struct {
	// Custom CA certificate for the Kubernetes API server. Leave blank to use the system/public CA.
	Ca pulumi.StringPtrInput `pulumi:"ca"`
	// Service account token with permissions to create service accounts and manage RBAC.
	ClusterToken pulumi.StringInput `pulumi:"clusterToken"`
	// Kubernetes API server URL (e.g., https://kubernetes.default.svc).
	ClusterUrl pulumi.StringInput `pulumi:"clusterUrl"`
	// Whether to enable SSL verification for the Kubernetes API server connection.
	EnableSsl pulumi.BoolPtrInput `pulumi:"enableSsl"`
}

func (DynamicSecretKubernetesConfigurationApiConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfigurationApiConfig)(nil)).Elem()
}

func (i DynamicSecretKubernetesConfigurationApiConfigArgs) ToDynamicSecretKubernetesConfigurationApiConfigOutput() DynamicSecretKubernetesConfigurationApiConfigOutput {
	return i.ToDynamicSecretKubernetesConfigurationApiConfigOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationApiConfigArgs) ToDynamicSecretKubernetesConfigurationApiConfigOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationApiConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationApiConfigOutput)
}

func (i DynamicSecretKubernetesConfigurationApiConfigArgs) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutput() DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationApiConfigArgs) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationApiConfigOutput).ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(ctx)
}

// DynamicSecretKubernetesConfigurationApiConfigPtrInput is an input type that accepts DynamicSecretKubernetesConfigurationApiConfigArgs, DynamicSecretKubernetesConfigurationApiConfigPtr and DynamicSecretKubernetesConfigurationApiConfigPtrOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationApiConfigPtrInput` via:
//
//	        DynamicSecretKubernetesConfigurationApiConfigArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretKubernetesConfigurationApiConfigPtrInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationApiConfigPtrOutput() DynamicSecretKubernetesConfigurationApiConfigPtrOutput
	ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationApiConfigPtrOutput
}

type dynamicSecretKubernetesConfigurationApiConfigPtrType DynamicSecretKubernetesConfigurationApiConfigArgs

func DynamicSecretKubernetesConfigurationApiConfigPtr(v *DynamicSecretKubernetesConfigurationApiConfigArgs) DynamicSecretKubernetesConfigurationApiConfigPtrInput {
	return (*dynamicSecretKubernetesConfigurationApiConfigPtrType)(v)
}

func (*dynamicSecretKubernetesConfigurationApiConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfigurationApiConfig)(nil)).Elem()
}

func (i *dynamicSecretKubernetesConfigurationApiConfigPtrType) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutput() DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretKubernetesConfigurationApiConfigPtrType) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationApiConfigPtrOutput)
}

type DynamicSecretKubernetesConfigurationApiConfigOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationApiConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfigurationApiConfig)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationApiConfigOutput) ToDynamicSecretKubernetesConfigurationApiConfigOutput() DynamicSecretKubernetesConfigurationApiConfigOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationApiConfigOutput) ToDynamicSecretKubernetesConfigurationApiConfigOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationApiConfigOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationApiConfigOutput) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutput() DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return o.ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(context.Background())
}

func (o DynamicSecretKubernetesConfigurationApiConfigOutput) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretKubernetesConfigurationApiConfig) *DynamicSecretKubernetesConfigurationApiConfig {
		return &v
	}).(DynamicSecretKubernetesConfigurationApiConfigPtrOutput)
}

// Custom CA certificate for the Kubernetes API server. Leave blank to use the system/public CA.
func (o DynamicSecretKubernetesConfigurationApiConfigOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationApiConfig) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

// Service account token with permissions to create service accounts and manage RBAC.
func (o DynamicSecretKubernetesConfigurationApiConfigOutput) ClusterToken() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationApiConfig) string { return v.ClusterToken }).(pulumi.StringOutput)
}

// Kubernetes API server URL (e.g., https://kubernetes.default.svc).
func (o DynamicSecretKubernetesConfigurationApiConfigOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationApiConfig) string { return v.ClusterUrl }).(pulumi.StringOutput)
}

// Whether to enable SSL verification for the Kubernetes API server connection.
func (o DynamicSecretKubernetesConfigurationApiConfigOutput) EnableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationApiConfig) *bool { return v.EnableSsl }).(pulumi.BoolPtrOutput)
}

type DynamicSecretKubernetesConfigurationApiConfigPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationApiConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfigurationApiConfig)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationApiConfigPtrOutput) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutput() DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationApiConfigPtrOutput) ToDynamicSecretKubernetesConfigurationApiConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationApiConfigPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationApiConfigPtrOutput) Elem() DynamicSecretKubernetesConfigurationApiConfigOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationApiConfig) DynamicSecretKubernetesConfigurationApiConfig {
		if v != nil {
			return *v
		}
		var ret DynamicSecretKubernetesConfigurationApiConfig
		return ret
	}).(DynamicSecretKubernetesConfigurationApiConfigOutput)
}

// Custom CA certificate for the Kubernetes API server. Leave blank to use the system/public CA.
func (o DynamicSecretKubernetesConfigurationApiConfigPtrOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationApiConfig) *string {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(pulumi.StringPtrOutput)
}

// Service account token with permissions to create service accounts and manage RBAC.
func (o DynamicSecretKubernetesConfigurationApiConfigPtrOutput) ClusterToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationApiConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterToken
	}).(pulumi.StringPtrOutput)
}

// Kubernetes API server URL (e.g., https://kubernetes.default.svc).
func (o DynamicSecretKubernetesConfigurationApiConfigPtrOutput) ClusterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationApiConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterUrl
	}).(pulumi.StringPtrOutput)
}

// Whether to enable SSL verification for the Kubernetes API server connection.
func (o DynamicSecretKubernetesConfigurationApiConfigPtrOutput) EnableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationApiConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSsl
	}).(pulumi.BoolPtrOutput)
}

type DynamicSecretKubernetesConfigurationDynamicConfig struct {
	// Kubernetes namespace(s) where the service accounts will be created. You can specify multiple namespaces as a comma-separated list (e.g., “default,kube-system”). During lease creation, you can specify which namespace to use from this allowed list.
	AllowedNamespaces string `pulumi:"allowedNamespaces"`
	// Name of the role to assign to the temporary service account.
	Role string `pulumi:"role"`
	// Type of role to assign ('cluster-role' or 'role').
	RoleType string `pulumi:"roleType"`
}

// DynamicSecretKubernetesConfigurationDynamicConfigInput is an input type that accepts DynamicSecretKubernetesConfigurationDynamicConfigArgs and DynamicSecretKubernetesConfigurationDynamicConfigOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationDynamicConfigInput` via:
//
//	DynamicSecretKubernetesConfigurationDynamicConfigArgs{...}
type DynamicSecretKubernetesConfigurationDynamicConfigInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationDynamicConfigOutput() DynamicSecretKubernetesConfigurationDynamicConfigOutput
	ToDynamicSecretKubernetesConfigurationDynamicConfigOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationDynamicConfigOutput
}

type DynamicSecretKubernetesConfigurationDynamicConfigArgs struct {
	// Kubernetes namespace(s) where the service accounts will be created. You can specify multiple namespaces as a comma-separated list (e.g., “default,kube-system”). During lease creation, you can specify which namespace to use from this allowed list.
	AllowedNamespaces pulumi.StringInput `pulumi:"allowedNamespaces"`
	// Name of the role to assign to the temporary service account.
	Role pulumi.StringInput `pulumi:"role"`
	// Type of role to assign ('cluster-role' or 'role').
	RoleType pulumi.StringInput `pulumi:"roleType"`
}

func (DynamicSecretKubernetesConfigurationDynamicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfigurationDynamicConfig)(nil)).Elem()
}

func (i DynamicSecretKubernetesConfigurationDynamicConfigArgs) ToDynamicSecretKubernetesConfigurationDynamicConfigOutput() DynamicSecretKubernetesConfigurationDynamicConfigOutput {
	return i.ToDynamicSecretKubernetesConfigurationDynamicConfigOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationDynamicConfigArgs) ToDynamicSecretKubernetesConfigurationDynamicConfigOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationDynamicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationDynamicConfigOutput)
}

func (i DynamicSecretKubernetesConfigurationDynamicConfigArgs) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutput() DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationDynamicConfigArgs) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationDynamicConfigOutput).ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(ctx)
}

// DynamicSecretKubernetesConfigurationDynamicConfigPtrInput is an input type that accepts DynamicSecretKubernetesConfigurationDynamicConfigArgs, DynamicSecretKubernetesConfigurationDynamicConfigPtr and DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationDynamicConfigPtrInput` via:
//
//	        DynamicSecretKubernetesConfigurationDynamicConfigArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretKubernetesConfigurationDynamicConfigPtrInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutput() DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput
	ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput
}

type dynamicSecretKubernetesConfigurationDynamicConfigPtrType DynamicSecretKubernetesConfigurationDynamicConfigArgs

func DynamicSecretKubernetesConfigurationDynamicConfigPtr(v *DynamicSecretKubernetesConfigurationDynamicConfigArgs) DynamicSecretKubernetesConfigurationDynamicConfigPtrInput {
	return (*dynamicSecretKubernetesConfigurationDynamicConfigPtrType)(v)
}

func (*dynamicSecretKubernetesConfigurationDynamicConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfigurationDynamicConfig)(nil)).Elem()
}

func (i *dynamicSecretKubernetesConfigurationDynamicConfigPtrType) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutput() DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretKubernetesConfigurationDynamicConfigPtrType) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput)
}

type DynamicSecretKubernetesConfigurationDynamicConfigOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationDynamicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfigurationDynamicConfig)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationDynamicConfigOutput) ToDynamicSecretKubernetesConfigurationDynamicConfigOutput() DynamicSecretKubernetesConfigurationDynamicConfigOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationDynamicConfigOutput) ToDynamicSecretKubernetesConfigurationDynamicConfigOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationDynamicConfigOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationDynamicConfigOutput) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutput() DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return o.ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(context.Background())
}

func (o DynamicSecretKubernetesConfigurationDynamicConfigOutput) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretKubernetesConfigurationDynamicConfig) *DynamicSecretKubernetesConfigurationDynamicConfig {
		return &v
	}).(DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput)
}

// Kubernetes namespace(s) where the service accounts will be created. You can specify multiple namespaces as a comma-separated list (e.g., “default,kube-system”). During lease creation, you can specify which namespace to use from this allowed list.
func (o DynamicSecretKubernetesConfigurationDynamicConfigOutput) AllowedNamespaces() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationDynamicConfig) string { return v.AllowedNamespaces }).(pulumi.StringOutput)
}

// Name of the role to assign to the temporary service account.
func (o DynamicSecretKubernetesConfigurationDynamicConfigOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationDynamicConfig) string { return v.Role }).(pulumi.StringOutput)
}

// Type of role to assign ('cluster-role' or 'role').
func (o DynamicSecretKubernetesConfigurationDynamicConfigOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationDynamicConfig) string { return v.RoleType }).(pulumi.StringOutput)
}

type DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfigurationDynamicConfig)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutput() DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput) ToDynamicSecretKubernetesConfigurationDynamicConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput) Elem() DynamicSecretKubernetesConfigurationDynamicConfigOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationDynamicConfig) DynamicSecretKubernetesConfigurationDynamicConfig {
		if v != nil {
			return *v
		}
		var ret DynamicSecretKubernetesConfigurationDynamicConfig
		return ret
	}).(DynamicSecretKubernetesConfigurationDynamicConfigOutput)
}

// Kubernetes namespace(s) where the service accounts will be created. You can specify multiple namespaces as a comma-separated list (e.g., “default,kube-system”). During lease creation, you can specify which namespace to use from this allowed list.
func (o DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput) AllowedNamespaces() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationDynamicConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AllowedNamespaces
	}).(pulumi.StringPtrOutput)
}

// Name of the role to assign to the temporary service account.
func (o DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationDynamicConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// Type of role to assign ('cluster-role' or 'role').
func (o DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput) RoleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationDynamicConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RoleType
	}).(pulumi.StringPtrOutput)
}

type DynamicSecretKubernetesConfigurationStaticConfig struct {
	// Kubernetes namespace where the service account exists.
	Namespace string `pulumi:"namespace"`
	// Name of the service account to generate tokens for.
	ServiceAccountName string `pulumi:"serviceAccountName"`
}

// DynamicSecretKubernetesConfigurationStaticConfigInput is an input type that accepts DynamicSecretKubernetesConfigurationStaticConfigArgs and DynamicSecretKubernetesConfigurationStaticConfigOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationStaticConfigInput` via:
//
//	DynamicSecretKubernetesConfigurationStaticConfigArgs{...}
type DynamicSecretKubernetesConfigurationStaticConfigInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationStaticConfigOutput() DynamicSecretKubernetesConfigurationStaticConfigOutput
	ToDynamicSecretKubernetesConfigurationStaticConfigOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationStaticConfigOutput
}

type DynamicSecretKubernetesConfigurationStaticConfigArgs struct {
	// Kubernetes namespace where the service account exists.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Name of the service account to generate tokens for.
	ServiceAccountName pulumi.StringInput `pulumi:"serviceAccountName"`
}

func (DynamicSecretKubernetesConfigurationStaticConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfigurationStaticConfig)(nil)).Elem()
}

func (i DynamicSecretKubernetesConfigurationStaticConfigArgs) ToDynamicSecretKubernetesConfigurationStaticConfigOutput() DynamicSecretKubernetesConfigurationStaticConfigOutput {
	return i.ToDynamicSecretKubernetesConfigurationStaticConfigOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationStaticConfigArgs) ToDynamicSecretKubernetesConfigurationStaticConfigOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationStaticConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationStaticConfigOutput)
}

func (i DynamicSecretKubernetesConfigurationStaticConfigArgs) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutput() DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesConfigurationStaticConfigArgs) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationStaticConfigOutput).ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(ctx)
}

// DynamicSecretKubernetesConfigurationStaticConfigPtrInput is an input type that accepts DynamicSecretKubernetesConfigurationStaticConfigArgs, DynamicSecretKubernetesConfigurationStaticConfigPtr and DynamicSecretKubernetesConfigurationStaticConfigPtrOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesConfigurationStaticConfigPtrInput` via:
//
//	        DynamicSecretKubernetesConfigurationStaticConfigArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretKubernetesConfigurationStaticConfigPtrInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutput() DynamicSecretKubernetesConfigurationStaticConfigPtrOutput
	ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(context.Context) DynamicSecretKubernetesConfigurationStaticConfigPtrOutput
}

type dynamicSecretKubernetesConfigurationStaticConfigPtrType DynamicSecretKubernetesConfigurationStaticConfigArgs

func DynamicSecretKubernetesConfigurationStaticConfigPtr(v *DynamicSecretKubernetesConfigurationStaticConfigArgs) DynamicSecretKubernetesConfigurationStaticConfigPtrInput {
	return (*dynamicSecretKubernetesConfigurationStaticConfigPtrType)(v)
}

func (*dynamicSecretKubernetesConfigurationStaticConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfigurationStaticConfig)(nil)).Elem()
}

func (i *dynamicSecretKubernetesConfigurationStaticConfigPtrType) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutput() DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return i.ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretKubernetesConfigurationStaticConfigPtrType) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesConfigurationStaticConfigPtrOutput)
}

type DynamicSecretKubernetesConfigurationStaticConfigOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationStaticConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesConfigurationStaticConfig)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationStaticConfigOutput) ToDynamicSecretKubernetesConfigurationStaticConfigOutput() DynamicSecretKubernetesConfigurationStaticConfigOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationStaticConfigOutput) ToDynamicSecretKubernetesConfigurationStaticConfigOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationStaticConfigOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationStaticConfigOutput) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutput() DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return o.ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(context.Background())
}

func (o DynamicSecretKubernetesConfigurationStaticConfigOutput) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretKubernetesConfigurationStaticConfig) *DynamicSecretKubernetesConfigurationStaticConfig {
		return &v
	}).(DynamicSecretKubernetesConfigurationStaticConfigPtrOutput)
}

// Kubernetes namespace where the service account exists.
func (o DynamicSecretKubernetesConfigurationStaticConfigOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationStaticConfig) string { return v.Namespace }).(pulumi.StringOutput)
}

// Name of the service account to generate tokens for.
func (o DynamicSecretKubernetesConfigurationStaticConfigOutput) ServiceAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesConfigurationStaticConfig) string { return v.ServiceAccountName }).(pulumi.StringOutput)
}

type DynamicSecretKubernetesConfigurationStaticConfigPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesConfigurationStaticConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretKubernetesConfigurationStaticConfig)(nil)).Elem()
}

func (o DynamicSecretKubernetesConfigurationStaticConfigPtrOutput) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutput() DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationStaticConfigPtrOutput) ToDynamicSecretKubernetesConfigurationStaticConfigPtrOutputWithContext(ctx context.Context) DynamicSecretKubernetesConfigurationStaticConfigPtrOutput {
	return o
}

func (o DynamicSecretKubernetesConfigurationStaticConfigPtrOutput) Elem() DynamicSecretKubernetesConfigurationStaticConfigOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationStaticConfig) DynamicSecretKubernetesConfigurationStaticConfig {
		if v != nil {
			return *v
		}
		var ret DynamicSecretKubernetesConfigurationStaticConfig
		return ret
	}).(DynamicSecretKubernetesConfigurationStaticConfigOutput)
}

// Kubernetes namespace where the service account exists.
func (o DynamicSecretKubernetesConfigurationStaticConfigPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationStaticConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Name of the service account to generate tokens for.
func (o DynamicSecretKubernetesConfigurationStaticConfigPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretKubernetesConfigurationStaticConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

type DynamicSecretKubernetesMetadata struct {
	// The key of the metadata object
	Key string `pulumi:"key"`
	// The value of the metadata object
	Value string `pulumi:"value"`
}

// DynamicSecretKubernetesMetadataInput is an input type that accepts DynamicSecretKubernetesMetadataArgs and DynamicSecretKubernetesMetadataOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesMetadataInput` via:
//
//	DynamicSecretKubernetesMetadataArgs{...}
type DynamicSecretKubernetesMetadataInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesMetadataOutput() DynamicSecretKubernetesMetadataOutput
	ToDynamicSecretKubernetesMetadataOutputWithContext(context.Context) DynamicSecretKubernetesMetadataOutput
}

type DynamicSecretKubernetesMetadataArgs struct {
	// The key of the metadata object
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the metadata object
	Value pulumi.StringInput `pulumi:"value"`
}

func (DynamicSecretKubernetesMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesMetadata)(nil)).Elem()
}

func (i DynamicSecretKubernetesMetadataArgs) ToDynamicSecretKubernetesMetadataOutput() DynamicSecretKubernetesMetadataOutput {
	return i.ToDynamicSecretKubernetesMetadataOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesMetadataArgs) ToDynamicSecretKubernetesMetadataOutputWithContext(ctx context.Context) DynamicSecretKubernetesMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesMetadataOutput)
}

// DynamicSecretKubernetesMetadataArrayInput is an input type that accepts DynamicSecretKubernetesMetadataArray and DynamicSecretKubernetesMetadataArrayOutput values.
// You can construct a concrete instance of `DynamicSecretKubernetesMetadataArrayInput` via:
//
//	DynamicSecretKubernetesMetadataArray{ DynamicSecretKubernetesMetadataArgs{...} }
type DynamicSecretKubernetesMetadataArrayInput interface {
	pulumi.Input

	ToDynamicSecretKubernetesMetadataArrayOutput() DynamicSecretKubernetesMetadataArrayOutput
	ToDynamicSecretKubernetesMetadataArrayOutputWithContext(context.Context) DynamicSecretKubernetesMetadataArrayOutput
}

type DynamicSecretKubernetesMetadataArray []DynamicSecretKubernetesMetadataInput

func (DynamicSecretKubernetesMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicSecretKubernetesMetadata)(nil)).Elem()
}

func (i DynamicSecretKubernetesMetadataArray) ToDynamicSecretKubernetesMetadataArrayOutput() DynamicSecretKubernetesMetadataArrayOutput {
	return i.ToDynamicSecretKubernetesMetadataArrayOutputWithContext(context.Background())
}

func (i DynamicSecretKubernetesMetadataArray) ToDynamicSecretKubernetesMetadataArrayOutputWithContext(ctx context.Context) DynamicSecretKubernetesMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretKubernetesMetadataArrayOutput)
}

type DynamicSecretKubernetesMetadataOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretKubernetesMetadata)(nil)).Elem()
}

func (o DynamicSecretKubernetesMetadataOutput) ToDynamicSecretKubernetesMetadataOutput() DynamicSecretKubernetesMetadataOutput {
	return o
}

func (o DynamicSecretKubernetesMetadataOutput) ToDynamicSecretKubernetesMetadataOutputWithContext(ctx context.Context) DynamicSecretKubernetesMetadataOutput {
	return o
}

// The key of the metadata object
func (o DynamicSecretKubernetesMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the metadata object
func (o DynamicSecretKubernetesMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretKubernetesMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type DynamicSecretKubernetesMetadataArrayOutput struct{ *pulumi.OutputState }

func (DynamicSecretKubernetesMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicSecretKubernetesMetadata)(nil)).Elem()
}

func (o DynamicSecretKubernetesMetadataArrayOutput) ToDynamicSecretKubernetesMetadataArrayOutput() DynamicSecretKubernetesMetadataArrayOutput {
	return o
}

func (o DynamicSecretKubernetesMetadataArrayOutput) ToDynamicSecretKubernetesMetadataArrayOutputWithContext(ctx context.Context) DynamicSecretKubernetesMetadataArrayOutput {
	return o
}

func (o DynamicSecretKubernetesMetadataArrayOutput) Index(i pulumi.IntInput) DynamicSecretKubernetesMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicSecretKubernetesMetadata {
		return vs[0].([]DynamicSecretKubernetesMetadata)[vs[1].(int)]
	}).(DynamicSecretKubernetesMetadataOutput)
}

type DynamicSecretSqlDatabaseConfiguration struct {
	// The CA certificate to use to connect to the database.
	Ca *string `pulumi:"ca"`
	// The database client to use. Currently supported values are postgres, mysql2, oracledb, mssql, sap-ase, and vertica.
	Client string `pulumi:"client"`
	// The creation statement to use to create the dynamic secret lease.
	CreationStatement string `pulumi:"creationStatement"`
	// The name of the database to use.
	Database string `pulumi:"database"`
	// The Gateway ID to use to connect to the database.
	GatewayId *string `pulumi:"gatewayId"`
	// The host of the database server.
	Host string `pulumi:"host"`
	// The password to use to connect to the database.
	Password string `pulumi:"password"`
	// The password requirements to use to create the dynamic secret lease.
	PasswordRequirements *DynamicSecretSqlDatabaseConfigurationPasswordRequirements `pulumi:"passwordRequirements"`
	// The port of the database server.
	Port int `pulumi:"port"`
	// The renew statement to use to renew the dynamic secret lease.
	RenewStatement *string `pulumi:"renewStatement"`
	// The revocation statement to use to revoke the dynamic secret lease.
	RevocationStatement string `pulumi:"revocationStatement"`
	// The username to use to connect to the database.
	Username string `pulumi:"username"`
}

// DynamicSecretSqlDatabaseConfigurationInput is an input type that accepts DynamicSecretSqlDatabaseConfigurationArgs and DynamicSecretSqlDatabaseConfigurationOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseConfigurationInput` via:
//
//	DynamicSecretSqlDatabaseConfigurationArgs{...}
type DynamicSecretSqlDatabaseConfigurationInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseConfigurationOutput() DynamicSecretSqlDatabaseConfigurationOutput
	ToDynamicSecretSqlDatabaseConfigurationOutputWithContext(context.Context) DynamicSecretSqlDatabaseConfigurationOutput
}

type DynamicSecretSqlDatabaseConfigurationArgs struct {
	// The CA certificate to use to connect to the database.
	Ca pulumi.StringPtrInput `pulumi:"ca"`
	// The database client to use. Currently supported values are postgres, mysql2, oracledb, mssql, sap-ase, and vertica.
	Client pulumi.StringInput `pulumi:"client"`
	// The creation statement to use to create the dynamic secret lease.
	CreationStatement pulumi.StringInput `pulumi:"creationStatement"`
	// The name of the database to use.
	Database pulumi.StringInput `pulumi:"database"`
	// The Gateway ID to use to connect to the database.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// The host of the database server.
	Host pulumi.StringInput `pulumi:"host"`
	// The password to use to connect to the database.
	Password pulumi.StringInput `pulumi:"password"`
	// The password requirements to use to create the dynamic secret lease.
	PasswordRequirements DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrInput `pulumi:"passwordRequirements"`
	// The port of the database server.
	Port pulumi.IntInput `pulumi:"port"`
	// The renew statement to use to renew the dynamic secret lease.
	RenewStatement pulumi.StringPtrInput `pulumi:"renewStatement"`
	// The revocation statement to use to revoke the dynamic secret lease.
	RevocationStatement pulumi.StringInput `pulumi:"revocationStatement"`
	// The username to use to connect to the database.
	Username pulumi.StringInput `pulumi:"username"`
}

func (DynamicSecretSqlDatabaseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseConfiguration)(nil)).Elem()
}

func (i DynamicSecretSqlDatabaseConfigurationArgs) ToDynamicSecretSqlDatabaseConfigurationOutput() DynamicSecretSqlDatabaseConfigurationOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseConfigurationArgs) ToDynamicSecretSqlDatabaseConfigurationOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationOutput)
}

func (i DynamicSecretSqlDatabaseConfigurationArgs) ToDynamicSecretSqlDatabaseConfigurationPtrOutput() DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseConfigurationArgs) ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationOutput).ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(ctx)
}

// DynamicSecretSqlDatabaseConfigurationPtrInput is an input type that accepts DynamicSecretSqlDatabaseConfigurationArgs, DynamicSecretSqlDatabaseConfigurationPtr and DynamicSecretSqlDatabaseConfigurationPtrOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseConfigurationPtrInput` via:
//
//	        DynamicSecretSqlDatabaseConfigurationArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretSqlDatabaseConfigurationPtrInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseConfigurationPtrOutput() DynamicSecretSqlDatabaseConfigurationPtrOutput
	ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(context.Context) DynamicSecretSqlDatabaseConfigurationPtrOutput
}

type dynamicSecretSqlDatabaseConfigurationPtrType DynamicSecretSqlDatabaseConfigurationArgs

func DynamicSecretSqlDatabaseConfigurationPtr(v *DynamicSecretSqlDatabaseConfigurationArgs) DynamicSecretSqlDatabaseConfigurationPtrInput {
	return (*dynamicSecretSqlDatabaseConfigurationPtrType)(v)
}

func (*dynamicSecretSqlDatabaseConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretSqlDatabaseConfiguration)(nil)).Elem()
}

func (i *dynamicSecretSqlDatabaseConfigurationPtrType) ToDynamicSecretSqlDatabaseConfigurationPtrOutput() DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretSqlDatabaseConfigurationPtrType) ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationPtrOutput)
}

type DynamicSecretSqlDatabaseConfigurationOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseConfiguration)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseConfigurationOutput) ToDynamicSecretSqlDatabaseConfigurationOutput() DynamicSecretSqlDatabaseConfigurationOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationOutput) ToDynamicSecretSqlDatabaseConfigurationOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationOutput) ToDynamicSecretSqlDatabaseConfigurationPtrOutput() DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return o.ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(context.Background())
}

func (o DynamicSecretSqlDatabaseConfigurationOutput) ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretSqlDatabaseConfiguration) *DynamicSecretSqlDatabaseConfiguration {
		return &v
	}).(DynamicSecretSqlDatabaseConfigurationPtrOutput)
}

// The CA certificate to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) *string { return v.Ca }).(pulumi.StringPtrOutput)
}

// The database client to use. Currently supported values are postgres, mysql2, oracledb, mssql, sap-ase, and vertica.
func (o DynamicSecretSqlDatabaseConfigurationOutput) Client() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) string { return v.Client }).(pulumi.StringOutput)
}

// The creation statement to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationOutput) CreationStatement() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) string { return v.CreationStatement }).(pulumi.StringOutput)
}

// The name of the database to use.
func (o DynamicSecretSqlDatabaseConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// The Gateway ID to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// The host of the database server.
func (o DynamicSecretSqlDatabaseConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// The password to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The password requirements to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationOutput) PasswordRequirements() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) *DynamicSecretSqlDatabaseConfigurationPasswordRequirements {
		return v.PasswordRequirements
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput)
}

// The port of the database server.
func (o DynamicSecretSqlDatabaseConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The renew statement to use to renew the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationOutput) RenewStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) *string { return v.RenewStatement }).(pulumi.StringPtrOutput)
}

// The revocation statement to use to revoke the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationOutput) RevocationStatement() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) string { return v.RevocationStatement }).(pulumi.StringOutput)
}

// The username to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type DynamicSecretSqlDatabaseConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretSqlDatabaseConfiguration)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) ToDynamicSecretSqlDatabaseConfigurationPtrOutput() DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) ToDynamicSecretSqlDatabaseConfigurationPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPtrOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Elem() DynamicSecretSqlDatabaseConfigurationOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) DynamicSecretSqlDatabaseConfiguration {
		if v != nil {
			return *v
		}
		var ret DynamicSecretSqlDatabaseConfiguration
		return ret
	}).(DynamicSecretSqlDatabaseConfigurationOutput)
}

// The CA certificate to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Ca() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Ca
	}).(pulumi.StringPtrOutput)
}

// The database client to use. Currently supported values are postgres, mysql2, oracledb, mssql, sap-ase, and vertica.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Client
	}).(pulumi.StringPtrOutput)
}

// The creation statement to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) CreationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CreationStatement
	}).(pulumi.StringPtrOutput)
}

// The name of the database to use.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The Gateway ID to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GatewayId
	}).(pulumi.StringPtrOutput)
}

// The host of the database server.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// The password to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The password requirements to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) PasswordRequirements() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *DynamicSecretSqlDatabaseConfigurationPasswordRequirements {
		if v == nil {
			return nil
		}
		return v.PasswordRequirements
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput)
}

// The port of the database server.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The renew statement to use to renew the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) RenewStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RenewStatement
	}).(pulumi.StringPtrOutput)
}

// The revocation statement to use to revoke the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) RevocationStatement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RevocationStatement
	}).(pulumi.StringPtrOutput)
}

// The username to use to connect to the database.
func (o DynamicSecretSqlDatabaseConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirements struct {
	// The symbols allowed in the password.
	AllowedSymbols *string `pulumi:"allowedSymbols"`
	// The length of the password to use to create the dynamic secret lease.
	Length int `pulumi:"length"`
	// The required characters to use to create the dynamic secret lease.
	Required DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired `pulumi:"required"`
}

// DynamicSecretSqlDatabaseConfigurationPasswordRequirementsInput is an input type that accepts DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs and DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseConfigurationPasswordRequirementsInput` via:
//
//	DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs{...}
type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput
	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutputWithContext(context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs struct {
	// The symbols allowed in the password.
	AllowedSymbols pulumi.StringPtrInput `pulumi:"allowedSymbols"`
	// The length of the password to use to create the dynamic secret lease.
	Length pulumi.IntInput `pulumi:"length"`
	// The required characters to use to create the dynamic secret lease.
	Required DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredInput `pulumi:"required"`
}

func (DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirements)(nil)).Elem()
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput)
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput).ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(ctx)
}

// DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrInput is an input type that accepts DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs, DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtr and DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrInput` via:
//
//	        DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput
	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput
}

type dynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrType DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs

func DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtr(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrInput {
	return (*dynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrType)(v)
}

func (*dynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretSqlDatabaseConfigurationPasswordRequirements)(nil)).Elem()
}

func (i *dynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrType) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrType) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput)
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirements)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return o.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(context.Background())
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretSqlDatabaseConfigurationPasswordRequirements) *DynamicSecretSqlDatabaseConfigurationPasswordRequirements {
		return &v
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput)
}

// The symbols allowed in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) AllowedSymbols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfigurationPasswordRequirements) *string { return v.AllowedSymbols }).(pulumi.StringPtrOutput)
}

// The length of the password to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfigurationPasswordRequirements) int { return v.Length }).(pulumi.IntOutput)
}

// The required characters to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput) Required() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfigurationPasswordRequirements) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired {
		return v.Required
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput)
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretSqlDatabaseConfigurationPasswordRequirements)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput) Elem() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirements) DynamicSecretSqlDatabaseConfigurationPasswordRequirements {
		if v != nil {
			return *v
		}
		var ret DynamicSecretSqlDatabaseConfigurationPasswordRequirements
		return ret
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput)
}

// The symbols allowed in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput) AllowedSymbols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirements) *string {
		if v == nil {
			return nil
		}
		return v.AllowedSymbols
	}).(pulumi.StringPtrOutput)
}

// The length of the password to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirements) *int {
		if v == nil {
			return nil
		}
		return &v.Length
	}).(pulumi.IntPtrOutput)
}

// The required characters to use to create the dynamic secret lease.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput) Required() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirements) *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired {
		if v == nil {
			return nil
		}
		return &v.Required
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput)
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired struct {
	// The number of digits required in the password.
	Digits int `pulumi:"digits"`
	// The number of lowercase characters required in the password.
	Lowercase int `pulumi:"lowercase"`
	// The number of symbols required in the password.
	Symbols int `pulumi:"symbols"`
	// The number of uppercase characters required in the password.
	Uppercase int `pulumi:"uppercase"`
}

// DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredInput is an input type that accepts DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs and DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredInput` via:
//
//	DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs{...}
type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput
	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutputWithContext(context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs struct {
	// The number of digits required in the password.
	Digits pulumi.IntInput `pulumi:"digits"`
	// The number of lowercase characters required in the password.
	Lowercase pulumi.IntInput `pulumi:"lowercase"`
	// The number of symbols required in the password.
	Symbols pulumi.IntInput `pulumi:"symbols"`
	// The number of uppercase characters required in the password.
	Uppercase pulumi.IntInput `pulumi:"uppercase"`
}

func (DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired)(nil)).Elem()
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput)
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput).ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(ctx)
}

// DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrInput is an input type that accepts DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs, DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtr and DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrInput` via:
//
//	        DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs{...}
//
//	or:
//
//	        nil
type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput
	ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput
}

type dynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrType DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs

func DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtr(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrInput {
	return (*dynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrType)(v)
}

func (*dynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired)(nil)).Elem()
}

func (i *dynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrType) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return i.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(context.Background())
}

func (i *dynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrType) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput)
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return o.ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(context.Background())
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired {
		return &v
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput)
}

// The number of digits required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) Digits() pulumi.IntOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) int { return v.Digits }).(pulumi.IntOutput)
}

// The number of lowercase characters required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) Lowercase() pulumi.IntOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) int { return v.Lowercase }).(pulumi.IntOutput)
}

// The number of symbols required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) Symbols() pulumi.IntOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) int { return v.Symbols }).(pulumi.IntOutput)
}

// The number of uppercase characters required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput) Uppercase() pulumi.IntOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) int { return v.Uppercase }).(pulumi.IntOutput)
}

type DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) ToDynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput {
	return o
}

func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) Elem() DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired {
		if v != nil {
			return *v
		}
		var ret DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired
		return ret
	}).(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput)
}

// The number of digits required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) Digits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Digits
	}).(pulumi.IntPtrOutput)
}

// The number of lowercase characters required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) Lowercase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Lowercase
	}).(pulumi.IntPtrOutput)
}

// The number of symbols required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) Symbols() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Symbols
	}).(pulumi.IntPtrOutput)
}

// The number of uppercase characters required in the password.
func (o DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput) Uppercase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Uppercase
	}).(pulumi.IntPtrOutput)
}

type DynamicSecretSqlDatabaseMetadata struct {
	// The key of the metadata object
	Key string `pulumi:"key"`
	// The value of the metadata object
	Value string `pulumi:"value"`
}

// DynamicSecretSqlDatabaseMetadataInput is an input type that accepts DynamicSecretSqlDatabaseMetadataArgs and DynamicSecretSqlDatabaseMetadataOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseMetadataInput` via:
//
//	DynamicSecretSqlDatabaseMetadataArgs{...}
type DynamicSecretSqlDatabaseMetadataInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseMetadataOutput() DynamicSecretSqlDatabaseMetadataOutput
	ToDynamicSecretSqlDatabaseMetadataOutputWithContext(context.Context) DynamicSecretSqlDatabaseMetadataOutput
}

type DynamicSecretSqlDatabaseMetadataArgs struct {
	// The key of the metadata object
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the metadata object
	Value pulumi.StringInput `pulumi:"value"`
}

func (DynamicSecretSqlDatabaseMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseMetadata)(nil)).Elem()
}

func (i DynamicSecretSqlDatabaseMetadataArgs) ToDynamicSecretSqlDatabaseMetadataOutput() DynamicSecretSqlDatabaseMetadataOutput {
	return i.ToDynamicSecretSqlDatabaseMetadataOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseMetadataArgs) ToDynamicSecretSqlDatabaseMetadataOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseMetadataOutput)
}

// DynamicSecretSqlDatabaseMetadataArrayInput is an input type that accepts DynamicSecretSqlDatabaseMetadataArray and DynamicSecretSqlDatabaseMetadataArrayOutput values.
// You can construct a concrete instance of `DynamicSecretSqlDatabaseMetadataArrayInput` via:
//
//	DynamicSecretSqlDatabaseMetadataArray{ DynamicSecretSqlDatabaseMetadataArgs{...} }
type DynamicSecretSqlDatabaseMetadataArrayInput interface {
	pulumi.Input

	ToDynamicSecretSqlDatabaseMetadataArrayOutput() DynamicSecretSqlDatabaseMetadataArrayOutput
	ToDynamicSecretSqlDatabaseMetadataArrayOutputWithContext(context.Context) DynamicSecretSqlDatabaseMetadataArrayOutput
}

type DynamicSecretSqlDatabaseMetadataArray []DynamicSecretSqlDatabaseMetadataInput

func (DynamicSecretSqlDatabaseMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicSecretSqlDatabaseMetadata)(nil)).Elem()
}

func (i DynamicSecretSqlDatabaseMetadataArray) ToDynamicSecretSqlDatabaseMetadataArrayOutput() DynamicSecretSqlDatabaseMetadataArrayOutput {
	return i.ToDynamicSecretSqlDatabaseMetadataArrayOutputWithContext(context.Background())
}

func (i DynamicSecretSqlDatabaseMetadataArray) ToDynamicSecretSqlDatabaseMetadataArrayOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DynamicSecretSqlDatabaseMetadataArrayOutput)
}

type DynamicSecretSqlDatabaseMetadataOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DynamicSecretSqlDatabaseMetadata)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseMetadataOutput) ToDynamicSecretSqlDatabaseMetadataOutput() DynamicSecretSqlDatabaseMetadataOutput {
	return o
}

func (o DynamicSecretSqlDatabaseMetadataOutput) ToDynamicSecretSqlDatabaseMetadataOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseMetadataOutput {
	return o
}

// The key of the metadata object
func (o DynamicSecretSqlDatabaseMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the metadata object
func (o DynamicSecretSqlDatabaseMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DynamicSecretSqlDatabaseMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type DynamicSecretSqlDatabaseMetadataArrayOutput struct{ *pulumi.OutputState }

func (DynamicSecretSqlDatabaseMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DynamicSecretSqlDatabaseMetadata)(nil)).Elem()
}

func (o DynamicSecretSqlDatabaseMetadataArrayOutput) ToDynamicSecretSqlDatabaseMetadataArrayOutput() DynamicSecretSqlDatabaseMetadataArrayOutput {
	return o
}

func (o DynamicSecretSqlDatabaseMetadataArrayOutput) ToDynamicSecretSqlDatabaseMetadataArrayOutputWithContext(ctx context.Context) DynamicSecretSqlDatabaseMetadataArrayOutput {
	return o
}

func (o DynamicSecretSqlDatabaseMetadataArrayOutput) Index(i pulumi.IntInput) DynamicSecretSqlDatabaseMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DynamicSecretSqlDatabaseMetadata {
		return vs[0].([]DynamicSecretSqlDatabaseMetadata)[vs[1].(int)]
	}).(DynamicSecretSqlDatabaseMetadataOutput)
}

type IdentityAwsAuthAccessTokenTrustedIp struct {
	IpAddress *string `pulumi:"ipAddress"`
}

// IdentityAwsAuthAccessTokenTrustedIpInput is an input type that accepts IdentityAwsAuthAccessTokenTrustedIpArgs and IdentityAwsAuthAccessTokenTrustedIpOutput values.
// You can construct a concrete instance of `IdentityAwsAuthAccessTokenTrustedIpInput` via:
//
//	IdentityAwsAuthAccessTokenTrustedIpArgs{...}
type IdentityAwsAuthAccessTokenTrustedIpInput interface {
	pulumi.Input

	ToIdentityAwsAuthAccessTokenTrustedIpOutput() IdentityAwsAuthAccessTokenTrustedIpOutput
	ToIdentityAwsAuthAccessTokenTrustedIpOutputWithContext(context.Context) IdentityAwsAuthAccessTokenTrustedIpOutput
}

type IdentityAwsAuthAccessTokenTrustedIpArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IdentityAwsAuthAccessTokenTrustedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAwsAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityAwsAuthAccessTokenTrustedIpArgs) ToIdentityAwsAuthAccessTokenTrustedIpOutput() IdentityAwsAuthAccessTokenTrustedIpOutput {
	return i.ToIdentityAwsAuthAccessTokenTrustedIpOutputWithContext(context.Background())
}

func (i IdentityAwsAuthAccessTokenTrustedIpArgs) ToIdentityAwsAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityAwsAuthAccessTokenTrustedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAuthAccessTokenTrustedIpOutput)
}

// IdentityAwsAuthAccessTokenTrustedIpArrayInput is an input type that accepts IdentityAwsAuthAccessTokenTrustedIpArray and IdentityAwsAuthAccessTokenTrustedIpArrayOutput values.
// You can construct a concrete instance of `IdentityAwsAuthAccessTokenTrustedIpArrayInput` via:
//
//	IdentityAwsAuthAccessTokenTrustedIpArray{ IdentityAwsAuthAccessTokenTrustedIpArgs{...} }
type IdentityAwsAuthAccessTokenTrustedIpArrayInput interface {
	pulumi.Input

	ToIdentityAwsAuthAccessTokenTrustedIpArrayOutput() IdentityAwsAuthAccessTokenTrustedIpArrayOutput
	ToIdentityAwsAuthAccessTokenTrustedIpArrayOutputWithContext(context.Context) IdentityAwsAuthAccessTokenTrustedIpArrayOutput
}

type IdentityAwsAuthAccessTokenTrustedIpArray []IdentityAwsAuthAccessTokenTrustedIpInput

func (IdentityAwsAuthAccessTokenTrustedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAwsAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityAwsAuthAccessTokenTrustedIpArray) ToIdentityAwsAuthAccessTokenTrustedIpArrayOutput() IdentityAwsAuthAccessTokenTrustedIpArrayOutput {
	return i.ToIdentityAwsAuthAccessTokenTrustedIpArrayOutputWithContext(context.Background())
}

func (i IdentityAwsAuthAccessTokenTrustedIpArray) ToIdentityAwsAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityAwsAuthAccessTokenTrustedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAuthAccessTokenTrustedIpArrayOutput)
}

type IdentityAwsAuthAccessTokenTrustedIpOutput struct{ *pulumi.OutputState }

func (IdentityAwsAuthAccessTokenTrustedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAwsAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityAwsAuthAccessTokenTrustedIpOutput) ToIdentityAwsAuthAccessTokenTrustedIpOutput() IdentityAwsAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityAwsAuthAccessTokenTrustedIpOutput) ToIdentityAwsAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityAwsAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityAwsAuthAccessTokenTrustedIpOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAwsAuthAccessTokenTrustedIp) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IdentityAwsAuthAccessTokenTrustedIpArrayOutput struct{ *pulumi.OutputState }

func (IdentityAwsAuthAccessTokenTrustedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAwsAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityAwsAuthAccessTokenTrustedIpArrayOutput) ToIdentityAwsAuthAccessTokenTrustedIpArrayOutput() IdentityAwsAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityAwsAuthAccessTokenTrustedIpArrayOutput) ToIdentityAwsAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityAwsAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityAwsAuthAccessTokenTrustedIpArrayOutput) Index(i pulumi.IntInput) IdentityAwsAuthAccessTokenTrustedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityAwsAuthAccessTokenTrustedIp {
		return vs[0].([]IdentityAwsAuthAccessTokenTrustedIp)[vs[1].(int)]
	}).(IdentityAwsAuthAccessTokenTrustedIpOutput)
}

type IdentityAzureAuthAccessTokenTrustedIp struct {
	IpAddress *string `pulumi:"ipAddress"`
}

// IdentityAzureAuthAccessTokenTrustedIpInput is an input type that accepts IdentityAzureAuthAccessTokenTrustedIpArgs and IdentityAzureAuthAccessTokenTrustedIpOutput values.
// You can construct a concrete instance of `IdentityAzureAuthAccessTokenTrustedIpInput` via:
//
//	IdentityAzureAuthAccessTokenTrustedIpArgs{...}
type IdentityAzureAuthAccessTokenTrustedIpInput interface {
	pulumi.Input

	ToIdentityAzureAuthAccessTokenTrustedIpOutput() IdentityAzureAuthAccessTokenTrustedIpOutput
	ToIdentityAzureAuthAccessTokenTrustedIpOutputWithContext(context.Context) IdentityAzureAuthAccessTokenTrustedIpOutput
}

type IdentityAzureAuthAccessTokenTrustedIpArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IdentityAzureAuthAccessTokenTrustedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityAzureAuthAccessTokenTrustedIpArgs) ToIdentityAzureAuthAccessTokenTrustedIpOutput() IdentityAzureAuthAccessTokenTrustedIpOutput {
	return i.ToIdentityAzureAuthAccessTokenTrustedIpOutputWithContext(context.Background())
}

func (i IdentityAzureAuthAccessTokenTrustedIpArgs) ToIdentityAzureAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityAzureAuthAccessTokenTrustedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAuthAccessTokenTrustedIpOutput)
}

// IdentityAzureAuthAccessTokenTrustedIpArrayInput is an input type that accepts IdentityAzureAuthAccessTokenTrustedIpArray and IdentityAzureAuthAccessTokenTrustedIpArrayOutput values.
// You can construct a concrete instance of `IdentityAzureAuthAccessTokenTrustedIpArrayInput` via:
//
//	IdentityAzureAuthAccessTokenTrustedIpArray{ IdentityAzureAuthAccessTokenTrustedIpArgs{...} }
type IdentityAzureAuthAccessTokenTrustedIpArrayInput interface {
	pulumi.Input

	ToIdentityAzureAuthAccessTokenTrustedIpArrayOutput() IdentityAzureAuthAccessTokenTrustedIpArrayOutput
	ToIdentityAzureAuthAccessTokenTrustedIpArrayOutputWithContext(context.Context) IdentityAzureAuthAccessTokenTrustedIpArrayOutput
}

type IdentityAzureAuthAccessTokenTrustedIpArray []IdentityAzureAuthAccessTokenTrustedIpInput

func (IdentityAzureAuthAccessTokenTrustedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAzureAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityAzureAuthAccessTokenTrustedIpArray) ToIdentityAzureAuthAccessTokenTrustedIpArrayOutput() IdentityAzureAuthAccessTokenTrustedIpArrayOutput {
	return i.ToIdentityAzureAuthAccessTokenTrustedIpArrayOutputWithContext(context.Background())
}

func (i IdentityAzureAuthAccessTokenTrustedIpArray) ToIdentityAzureAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityAzureAuthAccessTokenTrustedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAuthAccessTokenTrustedIpArrayOutput)
}

type IdentityAzureAuthAccessTokenTrustedIpOutput struct{ *pulumi.OutputState }

func (IdentityAzureAuthAccessTokenTrustedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityAzureAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityAzureAuthAccessTokenTrustedIpOutput) ToIdentityAzureAuthAccessTokenTrustedIpOutput() IdentityAzureAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityAzureAuthAccessTokenTrustedIpOutput) ToIdentityAzureAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityAzureAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityAzureAuthAccessTokenTrustedIpOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityAzureAuthAccessTokenTrustedIp) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IdentityAzureAuthAccessTokenTrustedIpArrayOutput struct{ *pulumi.OutputState }

func (IdentityAzureAuthAccessTokenTrustedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityAzureAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityAzureAuthAccessTokenTrustedIpArrayOutput) ToIdentityAzureAuthAccessTokenTrustedIpArrayOutput() IdentityAzureAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityAzureAuthAccessTokenTrustedIpArrayOutput) ToIdentityAzureAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityAzureAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityAzureAuthAccessTokenTrustedIpArrayOutput) Index(i pulumi.IntInput) IdentityAzureAuthAccessTokenTrustedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityAzureAuthAccessTokenTrustedIp {
		return vs[0].([]IdentityAzureAuthAccessTokenTrustedIp)[vs[1].(int)]
	}).(IdentityAzureAuthAccessTokenTrustedIpOutput)
}

type IdentityGcpAuthAccessTokenTrustedIp struct {
	IpAddress *string `pulumi:"ipAddress"`
}

// IdentityGcpAuthAccessTokenTrustedIpInput is an input type that accepts IdentityGcpAuthAccessTokenTrustedIpArgs and IdentityGcpAuthAccessTokenTrustedIpOutput values.
// You can construct a concrete instance of `IdentityGcpAuthAccessTokenTrustedIpInput` via:
//
//	IdentityGcpAuthAccessTokenTrustedIpArgs{...}
type IdentityGcpAuthAccessTokenTrustedIpInput interface {
	pulumi.Input

	ToIdentityGcpAuthAccessTokenTrustedIpOutput() IdentityGcpAuthAccessTokenTrustedIpOutput
	ToIdentityGcpAuthAccessTokenTrustedIpOutputWithContext(context.Context) IdentityGcpAuthAccessTokenTrustedIpOutput
}

type IdentityGcpAuthAccessTokenTrustedIpArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IdentityGcpAuthAccessTokenTrustedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityGcpAuthAccessTokenTrustedIpArgs) ToIdentityGcpAuthAccessTokenTrustedIpOutput() IdentityGcpAuthAccessTokenTrustedIpOutput {
	return i.ToIdentityGcpAuthAccessTokenTrustedIpOutputWithContext(context.Background())
}

func (i IdentityGcpAuthAccessTokenTrustedIpArgs) ToIdentityGcpAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityGcpAuthAccessTokenTrustedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAuthAccessTokenTrustedIpOutput)
}

// IdentityGcpAuthAccessTokenTrustedIpArrayInput is an input type that accepts IdentityGcpAuthAccessTokenTrustedIpArray and IdentityGcpAuthAccessTokenTrustedIpArrayOutput values.
// You can construct a concrete instance of `IdentityGcpAuthAccessTokenTrustedIpArrayInput` via:
//
//	IdentityGcpAuthAccessTokenTrustedIpArray{ IdentityGcpAuthAccessTokenTrustedIpArgs{...} }
type IdentityGcpAuthAccessTokenTrustedIpArrayInput interface {
	pulumi.Input

	ToIdentityGcpAuthAccessTokenTrustedIpArrayOutput() IdentityGcpAuthAccessTokenTrustedIpArrayOutput
	ToIdentityGcpAuthAccessTokenTrustedIpArrayOutputWithContext(context.Context) IdentityGcpAuthAccessTokenTrustedIpArrayOutput
}

type IdentityGcpAuthAccessTokenTrustedIpArray []IdentityGcpAuthAccessTokenTrustedIpInput

func (IdentityGcpAuthAccessTokenTrustedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityGcpAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityGcpAuthAccessTokenTrustedIpArray) ToIdentityGcpAuthAccessTokenTrustedIpArrayOutput() IdentityGcpAuthAccessTokenTrustedIpArrayOutput {
	return i.ToIdentityGcpAuthAccessTokenTrustedIpArrayOutputWithContext(context.Background())
}

func (i IdentityGcpAuthAccessTokenTrustedIpArray) ToIdentityGcpAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityGcpAuthAccessTokenTrustedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityGcpAuthAccessTokenTrustedIpArrayOutput)
}

type IdentityGcpAuthAccessTokenTrustedIpOutput struct{ *pulumi.OutputState }

func (IdentityGcpAuthAccessTokenTrustedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityGcpAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityGcpAuthAccessTokenTrustedIpOutput) ToIdentityGcpAuthAccessTokenTrustedIpOutput() IdentityGcpAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityGcpAuthAccessTokenTrustedIpOutput) ToIdentityGcpAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityGcpAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityGcpAuthAccessTokenTrustedIpOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityGcpAuthAccessTokenTrustedIp) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IdentityGcpAuthAccessTokenTrustedIpArrayOutput struct{ *pulumi.OutputState }

func (IdentityGcpAuthAccessTokenTrustedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityGcpAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityGcpAuthAccessTokenTrustedIpArrayOutput) ToIdentityGcpAuthAccessTokenTrustedIpArrayOutput() IdentityGcpAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityGcpAuthAccessTokenTrustedIpArrayOutput) ToIdentityGcpAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityGcpAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityGcpAuthAccessTokenTrustedIpArrayOutput) Index(i pulumi.IntInput) IdentityGcpAuthAccessTokenTrustedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityGcpAuthAccessTokenTrustedIp {
		return vs[0].([]IdentityGcpAuthAccessTokenTrustedIp)[vs[1].(int)]
	}).(IdentityGcpAuthAccessTokenTrustedIpOutput)
}

type IdentityKubernetesAuthAccessTokenTrustedIp struct {
	IpAddress *string `pulumi:"ipAddress"`
}

// IdentityKubernetesAuthAccessTokenTrustedIpInput is an input type that accepts IdentityKubernetesAuthAccessTokenTrustedIpArgs and IdentityKubernetesAuthAccessTokenTrustedIpOutput values.
// You can construct a concrete instance of `IdentityKubernetesAuthAccessTokenTrustedIpInput` via:
//
//	IdentityKubernetesAuthAccessTokenTrustedIpArgs{...}
type IdentityKubernetesAuthAccessTokenTrustedIpInput interface {
	pulumi.Input

	ToIdentityKubernetesAuthAccessTokenTrustedIpOutput() IdentityKubernetesAuthAccessTokenTrustedIpOutput
	ToIdentityKubernetesAuthAccessTokenTrustedIpOutputWithContext(context.Context) IdentityKubernetesAuthAccessTokenTrustedIpOutput
}

type IdentityKubernetesAuthAccessTokenTrustedIpArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IdentityKubernetesAuthAccessTokenTrustedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityKubernetesAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityKubernetesAuthAccessTokenTrustedIpArgs) ToIdentityKubernetesAuthAccessTokenTrustedIpOutput() IdentityKubernetesAuthAccessTokenTrustedIpOutput {
	return i.ToIdentityKubernetesAuthAccessTokenTrustedIpOutputWithContext(context.Background())
}

func (i IdentityKubernetesAuthAccessTokenTrustedIpArgs) ToIdentityKubernetesAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityKubernetesAuthAccessTokenTrustedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityKubernetesAuthAccessTokenTrustedIpOutput)
}

// IdentityKubernetesAuthAccessTokenTrustedIpArrayInput is an input type that accepts IdentityKubernetesAuthAccessTokenTrustedIpArray and IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput values.
// You can construct a concrete instance of `IdentityKubernetesAuthAccessTokenTrustedIpArrayInput` via:
//
//	IdentityKubernetesAuthAccessTokenTrustedIpArray{ IdentityKubernetesAuthAccessTokenTrustedIpArgs{...} }
type IdentityKubernetesAuthAccessTokenTrustedIpArrayInput interface {
	pulumi.Input

	ToIdentityKubernetesAuthAccessTokenTrustedIpArrayOutput() IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput
	ToIdentityKubernetesAuthAccessTokenTrustedIpArrayOutputWithContext(context.Context) IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput
}

type IdentityKubernetesAuthAccessTokenTrustedIpArray []IdentityKubernetesAuthAccessTokenTrustedIpInput

func (IdentityKubernetesAuthAccessTokenTrustedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityKubernetesAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityKubernetesAuthAccessTokenTrustedIpArray) ToIdentityKubernetesAuthAccessTokenTrustedIpArrayOutput() IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput {
	return i.ToIdentityKubernetesAuthAccessTokenTrustedIpArrayOutputWithContext(context.Background())
}

func (i IdentityKubernetesAuthAccessTokenTrustedIpArray) ToIdentityKubernetesAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput)
}

type IdentityKubernetesAuthAccessTokenTrustedIpOutput struct{ *pulumi.OutputState }

func (IdentityKubernetesAuthAccessTokenTrustedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityKubernetesAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityKubernetesAuthAccessTokenTrustedIpOutput) ToIdentityKubernetesAuthAccessTokenTrustedIpOutput() IdentityKubernetesAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityKubernetesAuthAccessTokenTrustedIpOutput) ToIdentityKubernetesAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityKubernetesAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityKubernetesAuthAccessTokenTrustedIpOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityKubernetesAuthAccessTokenTrustedIp) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput struct{ *pulumi.OutputState }

func (IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityKubernetesAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput) ToIdentityKubernetesAuthAccessTokenTrustedIpArrayOutput() IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput) ToIdentityKubernetesAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput) Index(i pulumi.IntInput) IdentityKubernetesAuthAccessTokenTrustedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityKubernetesAuthAccessTokenTrustedIp {
		return vs[0].([]IdentityKubernetesAuthAccessTokenTrustedIp)[vs[1].(int)]
	}).(IdentityKubernetesAuthAccessTokenTrustedIpOutput)
}

type IdentityMetadata struct {
	// The key of the metadata object
	Key string `pulumi:"key"`
	// The value of the metadata object
	Value string `pulumi:"value"`
}

// IdentityMetadataInput is an input type that accepts IdentityMetadataArgs and IdentityMetadataOutput values.
// You can construct a concrete instance of `IdentityMetadataInput` via:
//
//	IdentityMetadataArgs{...}
type IdentityMetadataInput interface {
	pulumi.Input

	ToIdentityMetadataOutput() IdentityMetadataOutput
	ToIdentityMetadataOutputWithContext(context.Context) IdentityMetadataOutput
}

type IdentityMetadataArgs struct {
	// The key of the metadata object
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the metadata object
	Value pulumi.StringInput `pulumi:"value"`
}

func (IdentityMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityMetadata)(nil)).Elem()
}

func (i IdentityMetadataArgs) ToIdentityMetadataOutput() IdentityMetadataOutput {
	return i.ToIdentityMetadataOutputWithContext(context.Background())
}

func (i IdentityMetadataArgs) ToIdentityMetadataOutputWithContext(ctx context.Context) IdentityMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityMetadataOutput)
}

// IdentityMetadataArrayInput is an input type that accepts IdentityMetadataArray and IdentityMetadataArrayOutput values.
// You can construct a concrete instance of `IdentityMetadataArrayInput` via:
//
//	IdentityMetadataArray{ IdentityMetadataArgs{...} }
type IdentityMetadataArrayInput interface {
	pulumi.Input

	ToIdentityMetadataArrayOutput() IdentityMetadataArrayOutput
	ToIdentityMetadataArrayOutputWithContext(context.Context) IdentityMetadataArrayOutput
}

type IdentityMetadataArray []IdentityMetadataInput

func (IdentityMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityMetadata)(nil)).Elem()
}

func (i IdentityMetadataArray) ToIdentityMetadataArrayOutput() IdentityMetadataArrayOutput {
	return i.ToIdentityMetadataArrayOutputWithContext(context.Background())
}

func (i IdentityMetadataArray) ToIdentityMetadataArrayOutputWithContext(ctx context.Context) IdentityMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityMetadataArrayOutput)
}

type IdentityMetadataOutput struct{ *pulumi.OutputState }

func (IdentityMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityMetadata)(nil)).Elem()
}

func (o IdentityMetadataOutput) ToIdentityMetadataOutput() IdentityMetadataOutput {
	return o
}

func (o IdentityMetadataOutput) ToIdentityMetadataOutputWithContext(ctx context.Context) IdentityMetadataOutput {
	return o
}

// The key of the metadata object
func (o IdentityMetadataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityMetadata) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the metadata object
func (o IdentityMetadataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityMetadata) string { return v.Value }).(pulumi.StringOutput)
}

type IdentityMetadataArrayOutput struct{ *pulumi.OutputState }

func (IdentityMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityMetadata)(nil)).Elem()
}

func (o IdentityMetadataArrayOutput) ToIdentityMetadataArrayOutput() IdentityMetadataArrayOutput {
	return o
}

func (o IdentityMetadataArrayOutput) ToIdentityMetadataArrayOutputWithContext(ctx context.Context) IdentityMetadataArrayOutput {
	return o
}

func (o IdentityMetadataArrayOutput) Index(i pulumi.IntInput) IdentityMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityMetadata {
		return vs[0].([]IdentityMetadata)[vs[1].(int)]
	}).(IdentityMetadataOutput)
}

type IdentityOidcAuthAccessTokenTrustedIp struct {
	IpAddress *string `pulumi:"ipAddress"`
}

// IdentityOidcAuthAccessTokenTrustedIpInput is an input type that accepts IdentityOidcAuthAccessTokenTrustedIpArgs and IdentityOidcAuthAccessTokenTrustedIpOutput values.
// You can construct a concrete instance of `IdentityOidcAuthAccessTokenTrustedIpInput` via:
//
//	IdentityOidcAuthAccessTokenTrustedIpArgs{...}
type IdentityOidcAuthAccessTokenTrustedIpInput interface {
	pulumi.Input

	ToIdentityOidcAuthAccessTokenTrustedIpOutput() IdentityOidcAuthAccessTokenTrustedIpOutput
	ToIdentityOidcAuthAccessTokenTrustedIpOutputWithContext(context.Context) IdentityOidcAuthAccessTokenTrustedIpOutput
}

type IdentityOidcAuthAccessTokenTrustedIpArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IdentityOidcAuthAccessTokenTrustedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityOidcAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityOidcAuthAccessTokenTrustedIpArgs) ToIdentityOidcAuthAccessTokenTrustedIpOutput() IdentityOidcAuthAccessTokenTrustedIpOutput {
	return i.ToIdentityOidcAuthAccessTokenTrustedIpOutputWithContext(context.Background())
}

func (i IdentityOidcAuthAccessTokenTrustedIpArgs) ToIdentityOidcAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityOidcAuthAccessTokenTrustedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOidcAuthAccessTokenTrustedIpOutput)
}

// IdentityOidcAuthAccessTokenTrustedIpArrayInput is an input type that accepts IdentityOidcAuthAccessTokenTrustedIpArray and IdentityOidcAuthAccessTokenTrustedIpArrayOutput values.
// You can construct a concrete instance of `IdentityOidcAuthAccessTokenTrustedIpArrayInput` via:
//
//	IdentityOidcAuthAccessTokenTrustedIpArray{ IdentityOidcAuthAccessTokenTrustedIpArgs{...} }
type IdentityOidcAuthAccessTokenTrustedIpArrayInput interface {
	pulumi.Input

	ToIdentityOidcAuthAccessTokenTrustedIpArrayOutput() IdentityOidcAuthAccessTokenTrustedIpArrayOutput
	ToIdentityOidcAuthAccessTokenTrustedIpArrayOutputWithContext(context.Context) IdentityOidcAuthAccessTokenTrustedIpArrayOutput
}

type IdentityOidcAuthAccessTokenTrustedIpArray []IdentityOidcAuthAccessTokenTrustedIpInput

func (IdentityOidcAuthAccessTokenTrustedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityOidcAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityOidcAuthAccessTokenTrustedIpArray) ToIdentityOidcAuthAccessTokenTrustedIpArrayOutput() IdentityOidcAuthAccessTokenTrustedIpArrayOutput {
	return i.ToIdentityOidcAuthAccessTokenTrustedIpArrayOutputWithContext(context.Background())
}

func (i IdentityOidcAuthAccessTokenTrustedIpArray) ToIdentityOidcAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityOidcAuthAccessTokenTrustedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOidcAuthAccessTokenTrustedIpArrayOutput)
}

type IdentityOidcAuthAccessTokenTrustedIpOutput struct{ *pulumi.OutputState }

func (IdentityOidcAuthAccessTokenTrustedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityOidcAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityOidcAuthAccessTokenTrustedIpOutput) ToIdentityOidcAuthAccessTokenTrustedIpOutput() IdentityOidcAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityOidcAuthAccessTokenTrustedIpOutput) ToIdentityOidcAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityOidcAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityOidcAuthAccessTokenTrustedIpOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityOidcAuthAccessTokenTrustedIp) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IdentityOidcAuthAccessTokenTrustedIpArrayOutput struct{ *pulumi.OutputState }

func (IdentityOidcAuthAccessTokenTrustedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityOidcAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityOidcAuthAccessTokenTrustedIpArrayOutput) ToIdentityOidcAuthAccessTokenTrustedIpArrayOutput() IdentityOidcAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityOidcAuthAccessTokenTrustedIpArrayOutput) ToIdentityOidcAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityOidcAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityOidcAuthAccessTokenTrustedIpArrayOutput) Index(i pulumi.IntInput) IdentityOidcAuthAccessTokenTrustedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityOidcAuthAccessTokenTrustedIp {
		return vs[0].([]IdentityOidcAuthAccessTokenTrustedIp)[vs[1].(int)]
	}).(IdentityOidcAuthAccessTokenTrustedIpOutput)
}

type IdentityUniversalAuthAccessTokenTrustedIp struct {
	IpAddress *string `pulumi:"ipAddress"`
}

// IdentityUniversalAuthAccessTokenTrustedIpInput is an input type that accepts IdentityUniversalAuthAccessTokenTrustedIpArgs and IdentityUniversalAuthAccessTokenTrustedIpOutput values.
// You can construct a concrete instance of `IdentityUniversalAuthAccessTokenTrustedIpInput` via:
//
//	IdentityUniversalAuthAccessTokenTrustedIpArgs{...}
type IdentityUniversalAuthAccessTokenTrustedIpInput interface {
	pulumi.Input

	ToIdentityUniversalAuthAccessTokenTrustedIpOutput() IdentityUniversalAuthAccessTokenTrustedIpOutput
	ToIdentityUniversalAuthAccessTokenTrustedIpOutputWithContext(context.Context) IdentityUniversalAuthAccessTokenTrustedIpOutput
}

type IdentityUniversalAuthAccessTokenTrustedIpArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IdentityUniversalAuthAccessTokenTrustedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityUniversalAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityUniversalAuthAccessTokenTrustedIpArgs) ToIdentityUniversalAuthAccessTokenTrustedIpOutput() IdentityUniversalAuthAccessTokenTrustedIpOutput {
	return i.ToIdentityUniversalAuthAccessTokenTrustedIpOutputWithContext(context.Background())
}

func (i IdentityUniversalAuthAccessTokenTrustedIpArgs) ToIdentityUniversalAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityUniversalAuthAccessTokenTrustedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUniversalAuthAccessTokenTrustedIpOutput)
}

// IdentityUniversalAuthAccessTokenTrustedIpArrayInput is an input type that accepts IdentityUniversalAuthAccessTokenTrustedIpArray and IdentityUniversalAuthAccessTokenTrustedIpArrayOutput values.
// You can construct a concrete instance of `IdentityUniversalAuthAccessTokenTrustedIpArrayInput` via:
//
//	IdentityUniversalAuthAccessTokenTrustedIpArray{ IdentityUniversalAuthAccessTokenTrustedIpArgs{...} }
type IdentityUniversalAuthAccessTokenTrustedIpArrayInput interface {
	pulumi.Input

	ToIdentityUniversalAuthAccessTokenTrustedIpArrayOutput() IdentityUniversalAuthAccessTokenTrustedIpArrayOutput
	ToIdentityUniversalAuthAccessTokenTrustedIpArrayOutputWithContext(context.Context) IdentityUniversalAuthAccessTokenTrustedIpArrayOutput
}

type IdentityUniversalAuthAccessTokenTrustedIpArray []IdentityUniversalAuthAccessTokenTrustedIpInput

func (IdentityUniversalAuthAccessTokenTrustedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityUniversalAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (i IdentityUniversalAuthAccessTokenTrustedIpArray) ToIdentityUniversalAuthAccessTokenTrustedIpArrayOutput() IdentityUniversalAuthAccessTokenTrustedIpArrayOutput {
	return i.ToIdentityUniversalAuthAccessTokenTrustedIpArrayOutputWithContext(context.Background())
}

func (i IdentityUniversalAuthAccessTokenTrustedIpArray) ToIdentityUniversalAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityUniversalAuthAccessTokenTrustedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUniversalAuthAccessTokenTrustedIpArrayOutput)
}

type IdentityUniversalAuthAccessTokenTrustedIpOutput struct{ *pulumi.OutputState }

func (IdentityUniversalAuthAccessTokenTrustedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityUniversalAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityUniversalAuthAccessTokenTrustedIpOutput) ToIdentityUniversalAuthAccessTokenTrustedIpOutput() IdentityUniversalAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityUniversalAuthAccessTokenTrustedIpOutput) ToIdentityUniversalAuthAccessTokenTrustedIpOutputWithContext(ctx context.Context) IdentityUniversalAuthAccessTokenTrustedIpOutput {
	return o
}

func (o IdentityUniversalAuthAccessTokenTrustedIpOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityUniversalAuthAccessTokenTrustedIp) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IdentityUniversalAuthAccessTokenTrustedIpArrayOutput struct{ *pulumi.OutputState }

func (IdentityUniversalAuthAccessTokenTrustedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityUniversalAuthAccessTokenTrustedIp)(nil)).Elem()
}

func (o IdentityUniversalAuthAccessTokenTrustedIpArrayOutput) ToIdentityUniversalAuthAccessTokenTrustedIpArrayOutput() IdentityUniversalAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityUniversalAuthAccessTokenTrustedIpArrayOutput) ToIdentityUniversalAuthAccessTokenTrustedIpArrayOutputWithContext(ctx context.Context) IdentityUniversalAuthAccessTokenTrustedIpArrayOutput {
	return o
}

func (o IdentityUniversalAuthAccessTokenTrustedIpArrayOutput) Index(i pulumi.IntInput) IdentityUniversalAuthAccessTokenTrustedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityUniversalAuthAccessTokenTrustedIp {
		return vs[0].([]IdentityUniversalAuthAccessTokenTrustedIp)[vs[1].(int)]
	}).(IdentityUniversalAuthAccessTokenTrustedIpOutput)
}

type IdentityUniversalAuthClientSecretTrustedIp struct {
	IpAddress *string `pulumi:"ipAddress"`
}

// IdentityUniversalAuthClientSecretTrustedIpInput is an input type that accepts IdentityUniversalAuthClientSecretTrustedIpArgs and IdentityUniversalAuthClientSecretTrustedIpOutput values.
// You can construct a concrete instance of `IdentityUniversalAuthClientSecretTrustedIpInput` via:
//
//	IdentityUniversalAuthClientSecretTrustedIpArgs{...}
type IdentityUniversalAuthClientSecretTrustedIpInput interface {
	pulumi.Input

	ToIdentityUniversalAuthClientSecretTrustedIpOutput() IdentityUniversalAuthClientSecretTrustedIpOutput
	ToIdentityUniversalAuthClientSecretTrustedIpOutputWithContext(context.Context) IdentityUniversalAuthClientSecretTrustedIpOutput
}

type IdentityUniversalAuthClientSecretTrustedIpArgs struct {
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IdentityUniversalAuthClientSecretTrustedIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityUniversalAuthClientSecretTrustedIp)(nil)).Elem()
}

func (i IdentityUniversalAuthClientSecretTrustedIpArgs) ToIdentityUniversalAuthClientSecretTrustedIpOutput() IdentityUniversalAuthClientSecretTrustedIpOutput {
	return i.ToIdentityUniversalAuthClientSecretTrustedIpOutputWithContext(context.Background())
}

func (i IdentityUniversalAuthClientSecretTrustedIpArgs) ToIdentityUniversalAuthClientSecretTrustedIpOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretTrustedIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUniversalAuthClientSecretTrustedIpOutput)
}

// IdentityUniversalAuthClientSecretTrustedIpArrayInput is an input type that accepts IdentityUniversalAuthClientSecretTrustedIpArray and IdentityUniversalAuthClientSecretTrustedIpArrayOutput values.
// You can construct a concrete instance of `IdentityUniversalAuthClientSecretTrustedIpArrayInput` via:
//
//	IdentityUniversalAuthClientSecretTrustedIpArray{ IdentityUniversalAuthClientSecretTrustedIpArgs{...} }
type IdentityUniversalAuthClientSecretTrustedIpArrayInput interface {
	pulumi.Input

	ToIdentityUniversalAuthClientSecretTrustedIpArrayOutput() IdentityUniversalAuthClientSecretTrustedIpArrayOutput
	ToIdentityUniversalAuthClientSecretTrustedIpArrayOutputWithContext(context.Context) IdentityUniversalAuthClientSecretTrustedIpArrayOutput
}

type IdentityUniversalAuthClientSecretTrustedIpArray []IdentityUniversalAuthClientSecretTrustedIpInput

func (IdentityUniversalAuthClientSecretTrustedIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityUniversalAuthClientSecretTrustedIp)(nil)).Elem()
}

func (i IdentityUniversalAuthClientSecretTrustedIpArray) ToIdentityUniversalAuthClientSecretTrustedIpArrayOutput() IdentityUniversalAuthClientSecretTrustedIpArrayOutput {
	return i.ToIdentityUniversalAuthClientSecretTrustedIpArrayOutputWithContext(context.Background())
}

func (i IdentityUniversalAuthClientSecretTrustedIpArray) ToIdentityUniversalAuthClientSecretTrustedIpArrayOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretTrustedIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUniversalAuthClientSecretTrustedIpArrayOutput)
}

type IdentityUniversalAuthClientSecretTrustedIpOutput struct{ *pulumi.OutputState }

func (IdentityUniversalAuthClientSecretTrustedIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityUniversalAuthClientSecretTrustedIp)(nil)).Elem()
}

func (o IdentityUniversalAuthClientSecretTrustedIpOutput) ToIdentityUniversalAuthClientSecretTrustedIpOutput() IdentityUniversalAuthClientSecretTrustedIpOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretTrustedIpOutput) ToIdentityUniversalAuthClientSecretTrustedIpOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretTrustedIpOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretTrustedIpOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityUniversalAuthClientSecretTrustedIp) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IdentityUniversalAuthClientSecretTrustedIpArrayOutput struct{ *pulumi.OutputState }

func (IdentityUniversalAuthClientSecretTrustedIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityUniversalAuthClientSecretTrustedIp)(nil)).Elem()
}

func (o IdentityUniversalAuthClientSecretTrustedIpArrayOutput) ToIdentityUniversalAuthClientSecretTrustedIpArrayOutput() IdentityUniversalAuthClientSecretTrustedIpArrayOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretTrustedIpArrayOutput) ToIdentityUniversalAuthClientSecretTrustedIpArrayOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretTrustedIpArrayOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretTrustedIpArrayOutput) Index(i pulumi.IntInput) IdentityUniversalAuthClientSecretTrustedIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityUniversalAuthClientSecretTrustedIp {
		return vs[0].([]IdentityUniversalAuthClientSecretTrustedIp)[vs[1].(int)]
	}).(IdentityUniversalAuthClientSecretTrustedIpOutput)
}

type IntegrationAwsParameterStoreOptions struct {
	// Tags to attach to the AWS parameter store secrets.
	AwsTags []IntegrationAwsParameterStoreOptionsAwsTag `pulumi:"awsTags"`
	// Whether to disable deletion of existing secrets in AWS Parameter Store.
	ShouldDisableDelete *bool `pulumi:"shouldDisableDelete"`
}

// IntegrationAwsParameterStoreOptionsInput is an input type that accepts IntegrationAwsParameterStoreOptionsArgs and IntegrationAwsParameterStoreOptionsOutput values.
// You can construct a concrete instance of `IntegrationAwsParameterStoreOptionsInput` via:
//
//	IntegrationAwsParameterStoreOptionsArgs{...}
type IntegrationAwsParameterStoreOptionsInput interface {
	pulumi.Input

	ToIntegrationAwsParameterStoreOptionsOutput() IntegrationAwsParameterStoreOptionsOutput
	ToIntegrationAwsParameterStoreOptionsOutputWithContext(context.Context) IntegrationAwsParameterStoreOptionsOutput
}

type IntegrationAwsParameterStoreOptionsArgs struct {
	// Tags to attach to the AWS parameter store secrets.
	AwsTags IntegrationAwsParameterStoreOptionsAwsTagArrayInput `pulumi:"awsTags"`
	// Whether to disable deletion of existing secrets in AWS Parameter Store.
	ShouldDisableDelete pulumi.BoolPtrInput `pulumi:"shouldDisableDelete"`
}

func (IntegrationAwsParameterStoreOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsParameterStoreOptions)(nil)).Elem()
}

func (i IntegrationAwsParameterStoreOptionsArgs) ToIntegrationAwsParameterStoreOptionsOutput() IntegrationAwsParameterStoreOptionsOutput {
	return i.ToIntegrationAwsParameterStoreOptionsOutputWithContext(context.Background())
}

func (i IntegrationAwsParameterStoreOptionsArgs) ToIntegrationAwsParameterStoreOptionsOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsParameterStoreOptionsOutput)
}

func (i IntegrationAwsParameterStoreOptionsArgs) ToIntegrationAwsParameterStoreOptionsPtrOutput() IntegrationAwsParameterStoreOptionsPtrOutput {
	return i.ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(context.Background())
}

func (i IntegrationAwsParameterStoreOptionsArgs) ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsParameterStoreOptionsOutput).ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(ctx)
}

// IntegrationAwsParameterStoreOptionsPtrInput is an input type that accepts IntegrationAwsParameterStoreOptionsArgs, IntegrationAwsParameterStoreOptionsPtr and IntegrationAwsParameterStoreOptionsPtrOutput values.
// You can construct a concrete instance of `IntegrationAwsParameterStoreOptionsPtrInput` via:
//
//	        IntegrationAwsParameterStoreOptionsArgs{...}
//
//	or:
//
//	        nil
type IntegrationAwsParameterStoreOptionsPtrInput interface {
	pulumi.Input

	ToIntegrationAwsParameterStoreOptionsPtrOutput() IntegrationAwsParameterStoreOptionsPtrOutput
	ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(context.Context) IntegrationAwsParameterStoreOptionsPtrOutput
}

type integrationAwsParameterStoreOptionsPtrType IntegrationAwsParameterStoreOptionsArgs

func IntegrationAwsParameterStoreOptionsPtr(v *IntegrationAwsParameterStoreOptionsArgs) IntegrationAwsParameterStoreOptionsPtrInput {
	return (*integrationAwsParameterStoreOptionsPtrType)(v)
}

func (*integrationAwsParameterStoreOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAwsParameterStoreOptions)(nil)).Elem()
}

func (i *integrationAwsParameterStoreOptionsPtrType) ToIntegrationAwsParameterStoreOptionsPtrOutput() IntegrationAwsParameterStoreOptionsPtrOutput {
	return i.ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(context.Background())
}

func (i *integrationAwsParameterStoreOptionsPtrType) ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsParameterStoreOptionsPtrOutput)
}

type IntegrationAwsParameterStoreOptionsOutput struct{ *pulumi.OutputState }

func (IntegrationAwsParameterStoreOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsParameterStoreOptions)(nil)).Elem()
}

func (o IntegrationAwsParameterStoreOptionsOutput) ToIntegrationAwsParameterStoreOptionsOutput() IntegrationAwsParameterStoreOptionsOutput {
	return o
}

func (o IntegrationAwsParameterStoreOptionsOutput) ToIntegrationAwsParameterStoreOptionsOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsOutput {
	return o
}

func (o IntegrationAwsParameterStoreOptionsOutput) ToIntegrationAwsParameterStoreOptionsPtrOutput() IntegrationAwsParameterStoreOptionsPtrOutput {
	return o.ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(context.Background())
}

func (o IntegrationAwsParameterStoreOptionsOutput) ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAwsParameterStoreOptions) *IntegrationAwsParameterStoreOptions {
		return &v
	}).(IntegrationAwsParameterStoreOptionsPtrOutput)
}

// Tags to attach to the AWS parameter store secrets.
func (o IntegrationAwsParameterStoreOptionsOutput) AwsTags() IntegrationAwsParameterStoreOptionsAwsTagArrayOutput {
	return o.ApplyT(func(v IntegrationAwsParameterStoreOptions) []IntegrationAwsParameterStoreOptionsAwsTag {
		return v.AwsTags
	}).(IntegrationAwsParameterStoreOptionsAwsTagArrayOutput)
}

// Whether to disable deletion of existing secrets in AWS Parameter Store.
func (o IntegrationAwsParameterStoreOptionsOutput) ShouldDisableDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IntegrationAwsParameterStoreOptions) *bool { return v.ShouldDisableDelete }).(pulumi.BoolPtrOutput)
}

type IntegrationAwsParameterStoreOptionsPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAwsParameterStoreOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAwsParameterStoreOptions)(nil)).Elem()
}

func (o IntegrationAwsParameterStoreOptionsPtrOutput) ToIntegrationAwsParameterStoreOptionsPtrOutput() IntegrationAwsParameterStoreOptionsPtrOutput {
	return o
}

func (o IntegrationAwsParameterStoreOptionsPtrOutput) ToIntegrationAwsParameterStoreOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsPtrOutput {
	return o
}

func (o IntegrationAwsParameterStoreOptionsPtrOutput) Elem() IntegrationAwsParameterStoreOptionsOutput {
	return o.ApplyT(func(v *IntegrationAwsParameterStoreOptions) IntegrationAwsParameterStoreOptions {
		if v != nil {
			return *v
		}
		var ret IntegrationAwsParameterStoreOptions
		return ret
	}).(IntegrationAwsParameterStoreOptionsOutput)
}

// Tags to attach to the AWS parameter store secrets.
func (o IntegrationAwsParameterStoreOptionsPtrOutput) AwsTags() IntegrationAwsParameterStoreOptionsAwsTagArrayOutput {
	return o.ApplyT(func(v *IntegrationAwsParameterStoreOptions) []IntegrationAwsParameterStoreOptionsAwsTag {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(IntegrationAwsParameterStoreOptionsAwsTagArrayOutput)
}

// Whether to disable deletion of existing secrets in AWS Parameter Store.
func (o IntegrationAwsParameterStoreOptionsPtrOutput) ShouldDisableDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationAwsParameterStoreOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldDisableDelete
	}).(pulumi.BoolPtrOutput)
}

type IntegrationAwsParameterStoreOptionsAwsTag struct {
	// The key of the tag.
	Key *string `pulumi:"key"`
	// The value of the tag.
	Value *string `pulumi:"value"`
}

// IntegrationAwsParameterStoreOptionsAwsTagInput is an input type that accepts IntegrationAwsParameterStoreOptionsAwsTagArgs and IntegrationAwsParameterStoreOptionsAwsTagOutput values.
// You can construct a concrete instance of `IntegrationAwsParameterStoreOptionsAwsTagInput` via:
//
//	IntegrationAwsParameterStoreOptionsAwsTagArgs{...}
type IntegrationAwsParameterStoreOptionsAwsTagInput interface {
	pulumi.Input

	ToIntegrationAwsParameterStoreOptionsAwsTagOutput() IntegrationAwsParameterStoreOptionsAwsTagOutput
	ToIntegrationAwsParameterStoreOptionsAwsTagOutputWithContext(context.Context) IntegrationAwsParameterStoreOptionsAwsTagOutput
}

type IntegrationAwsParameterStoreOptionsAwsTagArgs struct {
	// The key of the tag.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationAwsParameterStoreOptionsAwsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsParameterStoreOptionsAwsTag)(nil)).Elem()
}

func (i IntegrationAwsParameterStoreOptionsAwsTagArgs) ToIntegrationAwsParameterStoreOptionsAwsTagOutput() IntegrationAwsParameterStoreOptionsAwsTagOutput {
	return i.ToIntegrationAwsParameterStoreOptionsAwsTagOutputWithContext(context.Background())
}

func (i IntegrationAwsParameterStoreOptionsAwsTagArgs) ToIntegrationAwsParameterStoreOptionsAwsTagOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsAwsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsParameterStoreOptionsAwsTagOutput)
}

// IntegrationAwsParameterStoreOptionsAwsTagArrayInput is an input type that accepts IntegrationAwsParameterStoreOptionsAwsTagArray and IntegrationAwsParameterStoreOptionsAwsTagArrayOutput values.
// You can construct a concrete instance of `IntegrationAwsParameterStoreOptionsAwsTagArrayInput` via:
//
//	IntegrationAwsParameterStoreOptionsAwsTagArray{ IntegrationAwsParameterStoreOptionsAwsTagArgs{...} }
type IntegrationAwsParameterStoreOptionsAwsTagArrayInput interface {
	pulumi.Input

	ToIntegrationAwsParameterStoreOptionsAwsTagArrayOutput() IntegrationAwsParameterStoreOptionsAwsTagArrayOutput
	ToIntegrationAwsParameterStoreOptionsAwsTagArrayOutputWithContext(context.Context) IntegrationAwsParameterStoreOptionsAwsTagArrayOutput
}

type IntegrationAwsParameterStoreOptionsAwsTagArray []IntegrationAwsParameterStoreOptionsAwsTagInput

func (IntegrationAwsParameterStoreOptionsAwsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAwsParameterStoreOptionsAwsTag)(nil)).Elem()
}

func (i IntegrationAwsParameterStoreOptionsAwsTagArray) ToIntegrationAwsParameterStoreOptionsAwsTagArrayOutput() IntegrationAwsParameterStoreOptionsAwsTagArrayOutput {
	return i.ToIntegrationAwsParameterStoreOptionsAwsTagArrayOutputWithContext(context.Background())
}

func (i IntegrationAwsParameterStoreOptionsAwsTagArray) ToIntegrationAwsParameterStoreOptionsAwsTagArrayOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsAwsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsParameterStoreOptionsAwsTagArrayOutput)
}

type IntegrationAwsParameterStoreOptionsAwsTagOutput struct{ *pulumi.OutputState }

func (IntegrationAwsParameterStoreOptionsAwsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsParameterStoreOptionsAwsTag)(nil)).Elem()
}

func (o IntegrationAwsParameterStoreOptionsAwsTagOutput) ToIntegrationAwsParameterStoreOptionsAwsTagOutput() IntegrationAwsParameterStoreOptionsAwsTagOutput {
	return o
}

func (o IntegrationAwsParameterStoreOptionsAwsTagOutput) ToIntegrationAwsParameterStoreOptionsAwsTagOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsAwsTagOutput {
	return o
}

// The key of the tag.
func (o IntegrationAwsParameterStoreOptionsAwsTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAwsParameterStoreOptionsAwsTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag.
func (o IntegrationAwsParameterStoreOptionsAwsTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAwsParameterStoreOptionsAwsTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationAwsParameterStoreOptionsAwsTagArrayOutput struct{ *pulumi.OutputState }

func (IntegrationAwsParameterStoreOptionsAwsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAwsParameterStoreOptionsAwsTag)(nil)).Elem()
}

func (o IntegrationAwsParameterStoreOptionsAwsTagArrayOutput) ToIntegrationAwsParameterStoreOptionsAwsTagArrayOutput() IntegrationAwsParameterStoreOptionsAwsTagArrayOutput {
	return o
}

func (o IntegrationAwsParameterStoreOptionsAwsTagArrayOutput) ToIntegrationAwsParameterStoreOptionsAwsTagArrayOutputWithContext(ctx context.Context) IntegrationAwsParameterStoreOptionsAwsTagArrayOutput {
	return o
}

func (o IntegrationAwsParameterStoreOptionsAwsTagArrayOutput) Index(i pulumi.IntInput) IntegrationAwsParameterStoreOptionsAwsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationAwsParameterStoreOptionsAwsTag {
		return vs[0].([]IntegrationAwsParameterStoreOptionsAwsTag)[vs[1].(int)]
	}).(IntegrationAwsParameterStoreOptionsAwsTagOutput)
}

type IntegrationAwsSecretsManagerOptions struct {
	// Tags to attach to the AWS Secrets Manager secrets.
	AwsTags []IntegrationAwsSecretsManagerOptionsAwsTag `pulumi:"awsTags"`
	// The sync mode for AWS tags. The supported options are `secret-metadata` and `custom`. If `secret-metadata` is selected, the metadata of the Infisical secrets are used as tags in AWS (only supported for one-to-one integrations). If `custom` is selected, then the key/value pairs in the `awsTags` field is used.
	MetadataSyncMode *string `pulumi:"metadataSyncMode"`
	// The prefix to add to the secret name in AWS Secrets Manager.
	SecretPrefix *string `pulumi:"secretPrefix"`
}

// IntegrationAwsSecretsManagerOptionsInput is an input type that accepts IntegrationAwsSecretsManagerOptionsArgs and IntegrationAwsSecretsManagerOptionsOutput values.
// You can construct a concrete instance of `IntegrationAwsSecretsManagerOptionsInput` via:
//
//	IntegrationAwsSecretsManagerOptionsArgs{...}
type IntegrationAwsSecretsManagerOptionsInput interface {
	pulumi.Input

	ToIntegrationAwsSecretsManagerOptionsOutput() IntegrationAwsSecretsManagerOptionsOutput
	ToIntegrationAwsSecretsManagerOptionsOutputWithContext(context.Context) IntegrationAwsSecretsManagerOptionsOutput
}

type IntegrationAwsSecretsManagerOptionsArgs struct {
	// Tags to attach to the AWS Secrets Manager secrets.
	AwsTags IntegrationAwsSecretsManagerOptionsAwsTagArrayInput `pulumi:"awsTags"`
	// The sync mode for AWS tags. The supported options are `secret-metadata` and `custom`. If `secret-metadata` is selected, the metadata of the Infisical secrets are used as tags in AWS (only supported for one-to-one integrations). If `custom` is selected, then the key/value pairs in the `awsTags` field is used.
	MetadataSyncMode pulumi.StringPtrInput `pulumi:"metadataSyncMode"`
	// The prefix to add to the secret name in AWS Secrets Manager.
	SecretPrefix pulumi.StringPtrInput `pulumi:"secretPrefix"`
}

func (IntegrationAwsSecretsManagerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsSecretsManagerOptions)(nil)).Elem()
}

func (i IntegrationAwsSecretsManagerOptionsArgs) ToIntegrationAwsSecretsManagerOptionsOutput() IntegrationAwsSecretsManagerOptionsOutput {
	return i.ToIntegrationAwsSecretsManagerOptionsOutputWithContext(context.Background())
}

func (i IntegrationAwsSecretsManagerOptionsArgs) ToIntegrationAwsSecretsManagerOptionsOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsSecretsManagerOptionsOutput)
}

func (i IntegrationAwsSecretsManagerOptionsArgs) ToIntegrationAwsSecretsManagerOptionsPtrOutput() IntegrationAwsSecretsManagerOptionsPtrOutput {
	return i.ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(context.Background())
}

func (i IntegrationAwsSecretsManagerOptionsArgs) ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsSecretsManagerOptionsOutput).ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(ctx)
}

// IntegrationAwsSecretsManagerOptionsPtrInput is an input type that accepts IntegrationAwsSecretsManagerOptionsArgs, IntegrationAwsSecretsManagerOptionsPtr and IntegrationAwsSecretsManagerOptionsPtrOutput values.
// You can construct a concrete instance of `IntegrationAwsSecretsManagerOptionsPtrInput` via:
//
//	        IntegrationAwsSecretsManagerOptionsArgs{...}
//
//	or:
//
//	        nil
type IntegrationAwsSecretsManagerOptionsPtrInput interface {
	pulumi.Input

	ToIntegrationAwsSecretsManagerOptionsPtrOutput() IntegrationAwsSecretsManagerOptionsPtrOutput
	ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(context.Context) IntegrationAwsSecretsManagerOptionsPtrOutput
}

type integrationAwsSecretsManagerOptionsPtrType IntegrationAwsSecretsManagerOptionsArgs

func IntegrationAwsSecretsManagerOptionsPtr(v *IntegrationAwsSecretsManagerOptionsArgs) IntegrationAwsSecretsManagerOptionsPtrInput {
	return (*integrationAwsSecretsManagerOptionsPtrType)(v)
}

func (*integrationAwsSecretsManagerOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAwsSecretsManagerOptions)(nil)).Elem()
}

func (i *integrationAwsSecretsManagerOptionsPtrType) ToIntegrationAwsSecretsManagerOptionsPtrOutput() IntegrationAwsSecretsManagerOptionsPtrOutput {
	return i.ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(context.Background())
}

func (i *integrationAwsSecretsManagerOptionsPtrType) ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsSecretsManagerOptionsPtrOutput)
}

type IntegrationAwsSecretsManagerOptionsOutput struct{ *pulumi.OutputState }

func (IntegrationAwsSecretsManagerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsSecretsManagerOptions)(nil)).Elem()
}

func (o IntegrationAwsSecretsManagerOptionsOutput) ToIntegrationAwsSecretsManagerOptionsOutput() IntegrationAwsSecretsManagerOptionsOutput {
	return o
}

func (o IntegrationAwsSecretsManagerOptionsOutput) ToIntegrationAwsSecretsManagerOptionsOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsOutput {
	return o
}

func (o IntegrationAwsSecretsManagerOptionsOutput) ToIntegrationAwsSecretsManagerOptionsPtrOutput() IntegrationAwsSecretsManagerOptionsPtrOutput {
	return o.ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(context.Background())
}

func (o IntegrationAwsSecretsManagerOptionsOutput) ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAwsSecretsManagerOptions) *IntegrationAwsSecretsManagerOptions {
		return &v
	}).(IntegrationAwsSecretsManagerOptionsPtrOutput)
}

// Tags to attach to the AWS Secrets Manager secrets.
func (o IntegrationAwsSecretsManagerOptionsOutput) AwsTags() IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput {
	return o.ApplyT(func(v IntegrationAwsSecretsManagerOptions) []IntegrationAwsSecretsManagerOptionsAwsTag {
		return v.AwsTags
	}).(IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput)
}

// The sync mode for AWS tags. The supported options are `secret-metadata` and `custom`. If `secret-metadata` is selected, the metadata of the Infisical secrets are used as tags in AWS (only supported for one-to-one integrations). If `custom` is selected, then the key/value pairs in the `awsTags` field is used.
func (o IntegrationAwsSecretsManagerOptionsOutput) MetadataSyncMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAwsSecretsManagerOptions) *string { return v.MetadataSyncMode }).(pulumi.StringPtrOutput)
}

// The prefix to add to the secret name in AWS Secrets Manager.
func (o IntegrationAwsSecretsManagerOptionsOutput) SecretPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAwsSecretsManagerOptions) *string { return v.SecretPrefix }).(pulumi.StringPtrOutput)
}

type IntegrationAwsSecretsManagerOptionsPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAwsSecretsManagerOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAwsSecretsManagerOptions)(nil)).Elem()
}

func (o IntegrationAwsSecretsManagerOptionsPtrOutput) ToIntegrationAwsSecretsManagerOptionsPtrOutput() IntegrationAwsSecretsManagerOptionsPtrOutput {
	return o
}

func (o IntegrationAwsSecretsManagerOptionsPtrOutput) ToIntegrationAwsSecretsManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsPtrOutput {
	return o
}

func (o IntegrationAwsSecretsManagerOptionsPtrOutput) Elem() IntegrationAwsSecretsManagerOptionsOutput {
	return o.ApplyT(func(v *IntegrationAwsSecretsManagerOptions) IntegrationAwsSecretsManagerOptions {
		if v != nil {
			return *v
		}
		var ret IntegrationAwsSecretsManagerOptions
		return ret
	}).(IntegrationAwsSecretsManagerOptionsOutput)
}

// Tags to attach to the AWS Secrets Manager secrets.
func (o IntegrationAwsSecretsManagerOptionsPtrOutput) AwsTags() IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput {
	return o.ApplyT(func(v *IntegrationAwsSecretsManagerOptions) []IntegrationAwsSecretsManagerOptionsAwsTag {
		if v == nil {
			return nil
		}
		return v.AwsTags
	}).(IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput)
}

// The sync mode for AWS tags. The supported options are `secret-metadata` and `custom`. If `secret-metadata` is selected, the metadata of the Infisical secrets are used as tags in AWS (only supported for one-to-one integrations). If `custom` is selected, then the key/value pairs in the `awsTags` field is used.
func (o IntegrationAwsSecretsManagerOptionsPtrOutput) MetadataSyncMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAwsSecretsManagerOptions) *string {
		if v == nil {
			return nil
		}
		return v.MetadataSyncMode
	}).(pulumi.StringPtrOutput)
}

// The prefix to add to the secret name in AWS Secrets Manager.
func (o IntegrationAwsSecretsManagerOptionsPtrOutput) SecretPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAwsSecretsManagerOptions) *string {
		if v == nil {
			return nil
		}
		return v.SecretPrefix
	}).(pulumi.StringPtrOutput)
}

type IntegrationAwsSecretsManagerOptionsAwsTag struct {
	// The key of the tag.
	Key *string `pulumi:"key"`
	// The value of the tag.
	Value *string `pulumi:"value"`
}

// IntegrationAwsSecretsManagerOptionsAwsTagInput is an input type that accepts IntegrationAwsSecretsManagerOptionsAwsTagArgs and IntegrationAwsSecretsManagerOptionsAwsTagOutput values.
// You can construct a concrete instance of `IntegrationAwsSecretsManagerOptionsAwsTagInput` via:
//
//	IntegrationAwsSecretsManagerOptionsAwsTagArgs{...}
type IntegrationAwsSecretsManagerOptionsAwsTagInput interface {
	pulumi.Input

	ToIntegrationAwsSecretsManagerOptionsAwsTagOutput() IntegrationAwsSecretsManagerOptionsAwsTagOutput
	ToIntegrationAwsSecretsManagerOptionsAwsTagOutputWithContext(context.Context) IntegrationAwsSecretsManagerOptionsAwsTagOutput
}

type IntegrationAwsSecretsManagerOptionsAwsTagArgs struct {
	// The key of the tag.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of the tag.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IntegrationAwsSecretsManagerOptionsAwsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsSecretsManagerOptionsAwsTag)(nil)).Elem()
}

func (i IntegrationAwsSecretsManagerOptionsAwsTagArgs) ToIntegrationAwsSecretsManagerOptionsAwsTagOutput() IntegrationAwsSecretsManagerOptionsAwsTagOutput {
	return i.ToIntegrationAwsSecretsManagerOptionsAwsTagOutputWithContext(context.Background())
}

func (i IntegrationAwsSecretsManagerOptionsAwsTagArgs) ToIntegrationAwsSecretsManagerOptionsAwsTagOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsAwsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsSecretsManagerOptionsAwsTagOutput)
}

// IntegrationAwsSecretsManagerOptionsAwsTagArrayInput is an input type that accepts IntegrationAwsSecretsManagerOptionsAwsTagArray and IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput values.
// You can construct a concrete instance of `IntegrationAwsSecretsManagerOptionsAwsTagArrayInput` via:
//
//	IntegrationAwsSecretsManagerOptionsAwsTagArray{ IntegrationAwsSecretsManagerOptionsAwsTagArgs{...} }
type IntegrationAwsSecretsManagerOptionsAwsTagArrayInput interface {
	pulumi.Input

	ToIntegrationAwsSecretsManagerOptionsAwsTagArrayOutput() IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput
	ToIntegrationAwsSecretsManagerOptionsAwsTagArrayOutputWithContext(context.Context) IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput
}

type IntegrationAwsSecretsManagerOptionsAwsTagArray []IntegrationAwsSecretsManagerOptionsAwsTagInput

func (IntegrationAwsSecretsManagerOptionsAwsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAwsSecretsManagerOptionsAwsTag)(nil)).Elem()
}

func (i IntegrationAwsSecretsManagerOptionsAwsTagArray) ToIntegrationAwsSecretsManagerOptionsAwsTagArrayOutput() IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput {
	return i.ToIntegrationAwsSecretsManagerOptionsAwsTagArrayOutputWithContext(context.Background())
}

func (i IntegrationAwsSecretsManagerOptionsAwsTagArray) ToIntegrationAwsSecretsManagerOptionsAwsTagArrayOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput)
}

type IntegrationAwsSecretsManagerOptionsAwsTagOutput struct{ *pulumi.OutputState }

func (IntegrationAwsSecretsManagerOptionsAwsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAwsSecretsManagerOptionsAwsTag)(nil)).Elem()
}

func (o IntegrationAwsSecretsManagerOptionsAwsTagOutput) ToIntegrationAwsSecretsManagerOptionsAwsTagOutput() IntegrationAwsSecretsManagerOptionsAwsTagOutput {
	return o
}

func (o IntegrationAwsSecretsManagerOptionsAwsTagOutput) ToIntegrationAwsSecretsManagerOptionsAwsTagOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsAwsTagOutput {
	return o
}

// The key of the tag.
func (o IntegrationAwsSecretsManagerOptionsAwsTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAwsSecretsManagerOptionsAwsTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of the tag.
func (o IntegrationAwsSecretsManagerOptionsAwsTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAwsSecretsManagerOptionsAwsTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput struct{ *pulumi.OutputState }

func (IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAwsSecretsManagerOptionsAwsTag)(nil)).Elem()
}

func (o IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput) ToIntegrationAwsSecretsManagerOptionsAwsTagArrayOutput() IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput {
	return o
}

func (o IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput) ToIntegrationAwsSecretsManagerOptionsAwsTagArrayOutputWithContext(ctx context.Context) IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput {
	return o
}

func (o IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput) Index(i pulumi.IntInput) IntegrationAwsSecretsManagerOptionsAwsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationAwsSecretsManagerOptionsAwsTag {
		return vs[0].([]IntegrationAwsSecretsManagerOptionsAwsTag)[vs[1].(int)]
	}).(IntegrationAwsSecretsManagerOptionsAwsTagOutput)
}

type IntegrationGcpSecretManagerOptions struct {
	// The prefix to add to the secret name in GCP Secret Manager.
	SecretPrefix *string `pulumi:"secretPrefix"`
	// The suffix to add to the secret name in GCP Secret Manager.
	SecretSuffix *string `pulumi:"secretSuffix"`
}

// IntegrationGcpSecretManagerOptionsInput is an input type that accepts IntegrationGcpSecretManagerOptionsArgs and IntegrationGcpSecretManagerOptionsOutput values.
// You can construct a concrete instance of `IntegrationGcpSecretManagerOptionsInput` via:
//
//	IntegrationGcpSecretManagerOptionsArgs{...}
type IntegrationGcpSecretManagerOptionsInput interface {
	pulumi.Input

	ToIntegrationGcpSecretManagerOptionsOutput() IntegrationGcpSecretManagerOptionsOutput
	ToIntegrationGcpSecretManagerOptionsOutputWithContext(context.Context) IntegrationGcpSecretManagerOptionsOutput
}

type IntegrationGcpSecretManagerOptionsArgs struct {
	// The prefix to add to the secret name in GCP Secret Manager.
	SecretPrefix pulumi.StringPtrInput `pulumi:"secretPrefix"`
	// The suffix to add to the secret name in GCP Secret Manager.
	SecretSuffix pulumi.StringPtrInput `pulumi:"secretSuffix"`
}

func (IntegrationGcpSecretManagerOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationGcpSecretManagerOptions)(nil)).Elem()
}

func (i IntegrationGcpSecretManagerOptionsArgs) ToIntegrationGcpSecretManagerOptionsOutput() IntegrationGcpSecretManagerOptionsOutput {
	return i.ToIntegrationGcpSecretManagerOptionsOutputWithContext(context.Background())
}

func (i IntegrationGcpSecretManagerOptionsArgs) ToIntegrationGcpSecretManagerOptionsOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationGcpSecretManagerOptionsOutput)
}

func (i IntegrationGcpSecretManagerOptionsArgs) ToIntegrationGcpSecretManagerOptionsPtrOutput() IntegrationGcpSecretManagerOptionsPtrOutput {
	return i.ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(context.Background())
}

func (i IntegrationGcpSecretManagerOptionsArgs) ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationGcpSecretManagerOptionsOutput).ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(ctx)
}

// IntegrationGcpSecretManagerOptionsPtrInput is an input type that accepts IntegrationGcpSecretManagerOptionsArgs, IntegrationGcpSecretManagerOptionsPtr and IntegrationGcpSecretManagerOptionsPtrOutput values.
// You can construct a concrete instance of `IntegrationGcpSecretManagerOptionsPtrInput` via:
//
//	        IntegrationGcpSecretManagerOptionsArgs{...}
//
//	or:
//
//	        nil
type IntegrationGcpSecretManagerOptionsPtrInput interface {
	pulumi.Input

	ToIntegrationGcpSecretManagerOptionsPtrOutput() IntegrationGcpSecretManagerOptionsPtrOutput
	ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(context.Context) IntegrationGcpSecretManagerOptionsPtrOutput
}

type integrationGcpSecretManagerOptionsPtrType IntegrationGcpSecretManagerOptionsArgs

func IntegrationGcpSecretManagerOptionsPtr(v *IntegrationGcpSecretManagerOptionsArgs) IntegrationGcpSecretManagerOptionsPtrInput {
	return (*integrationGcpSecretManagerOptionsPtrType)(v)
}

func (*integrationGcpSecretManagerOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationGcpSecretManagerOptions)(nil)).Elem()
}

func (i *integrationGcpSecretManagerOptionsPtrType) ToIntegrationGcpSecretManagerOptionsPtrOutput() IntegrationGcpSecretManagerOptionsPtrOutput {
	return i.ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(context.Background())
}

func (i *integrationGcpSecretManagerOptionsPtrType) ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationGcpSecretManagerOptionsPtrOutput)
}

type IntegrationGcpSecretManagerOptionsOutput struct{ *pulumi.OutputState }

func (IntegrationGcpSecretManagerOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationGcpSecretManagerOptions)(nil)).Elem()
}

func (o IntegrationGcpSecretManagerOptionsOutput) ToIntegrationGcpSecretManagerOptionsOutput() IntegrationGcpSecretManagerOptionsOutput {
	return o
}

func (o IntegrationGcpSecretManagerOptionsOutput) ToIntegrationGcpSecretManagerOptionsOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOptionsOutput {
	return o
}

func (o IntegrationGcpSecretManagerOptionsOutput) ToIntegrationGcpSecretManagerOptionsPtrOutput() IntegrationGcpSecretManagerOptionsPtrOutput {
	return o.ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(context.Background())
}

func (o IntegrationGcpSecretManagerOptionsOutput) ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationGcpSecretManagerOptions) *IntegrationGcpSecretManagerOptions {
		return &v
	}).(IntegrationGcpSecretManagerOptionsPtrOutput)
}

// The prefix to add to the secret name in GCP Secret Manager.
func (o IntegrationGcpSecretManagerOptionsOutput) SecretPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationGcpSecretManagerOptions) *string { return v.SecretPrefix }).(pulumi.StringPtrOutput)
}

// The suffix to add to the secret name in GCP Secret Manager.
func (o IntegrationGcpSecretManagerOptionsOutput) SecretSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationGcpSecretManagerOptions) *string { return v.SecretSuffix }).(pulumi.StringPtrOutput)
}

type IntegrationGcpSecretManagerOptionsPtrOutput struct{ *pulumi.OutputState }

func (IntegrationGcpSecretManagerOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationGcpSecretManagerOptions)(nil)).Elem()
}

func (o IntegrationGcpSecretManagerOptionsPtrOutput) ToIntegrationGcpSecretManagerOptionsPtrOutput() IntegrationGcpSecretManagerOptionsPtrOutput {
	return o
}

func (o IntegrationGcpSecretManagerOptionsPtrOutput) ToIntegrationGcpSecretManagerOptionsPtrOutputWithContext(ctx context.Context) IntegrationGcpSecretManagerOptionsPtrOutput {
	return o
}

func (o IntegrationGcpSecretManagerOptionsPtrOutput) Elem() IntegrationGcpSecretManagerOptionsOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManagerOptions) IntegrationGcpSecretManagerOptions {
		if v != nil {
			return *v
		}
		var ret IntegrationGcpSecretManagerOptions
		return ret
	}).(IntegrationGcpSecretManagerOptionsOutput)
}

// The prefix to add to the secret name in GCP Secret Manager.
func (o IntegrationGcpSecretManagerOptionsPtrOutput) SecretPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManagerOptions) *string {
		if v == nil {
			return nil
		}
		return v.SecretPrefix
	}).(pulumi.StringPtrOutput)
}

// The suffix to add to the secret name in GCP Secret Manager.
func (o IntegrationGcpSecretManagerOptionsPtrOutput) SecretSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationGcpSecretManagerOptions) *string {
		if v == nil {
			return nil
		}
		return v.SecretSuffix
	}).(pulumi.StringPtrOutput)
}

type ProjectGroupRole struct {
	// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
	IsTemporary *bool `pulumi:"isTemporary"`
	// The slug of the role
	RoleSlug string `pulumi:"roleSlug"`
	// ISO time for which temporary access should begin. This is in the format YYYY-MM-DDTHH:MM:SSZ e.g. 2024-09-19T12:43:13Z
	TemporaryAccessStartTime *string `pulumi:"temporaryAccessStartTime"`
	// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
	TemporaryRange *string `pulumi:"temporaryRange"`
}

// ProjectGroupRoleInput is an input type that accepts ProjectGroupRoleArgs and ProjectGroupRoleOutput values.
// You can construct a concrete instance of `ProjectGroupRoleInput` via:
//
//	ProjectGroupRoleArgs{...}
type ProjectGroupRoleInput interface {
	pulumi.Input

	ToProjectGroupRoleOutput() ProjectGroupRoleOutput
	ToProjectGroupRoleOutputWithContext(context.Context) ProjectGroupRoleOutput
}

type ProjectGroupRoleArgs struct {
	// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
	IsTemporary pulumi.BoolPtrInput `pulumi:"isTemporary"`
	// The slug of the role
	RoleSlug pulumi.StringInput `pulumi:"roleSlug"`
	// ISO time for which temporary access should begin. This is in the format YYYY-MM-DDTHH:MM:SSZ e.g. 2024-09-19T12:43:13Z
	TemporaryAccessStartTime pulumi.StringPtrInput `pulumi:"temporaryAccessStartTime"`
	// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
	TemporaryRange pulumi.StringPtrInput `pulumi:"temporaryRange"`
}

func (ProjectGroupRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGroupRole)(nil)).Elem()
}

func (i ProjectGroupRoleArgs) ToProjectGroupRoleOutput() ProjectGroupRoleOutput {
	return i.ToProjectGroupRoleOutputWithContext(context.Background())
}

func (i ProjectGroupRoleArgs) ToProjectGroupRoleOutputWithContext(ctx context.Context) ProjectGroupRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGroupRoleOutput)
}

// ProjectGroupRoleArrayInput is an input type that accepts ProjectGroupRoleArray and ProjectGroupRoleArrayOutput values.
// You can construct a concrete instance of `ProjectGroupRoleArrayInput` via:
//
//	ProjectGroupRoleArray{ ProjectGroupRoleArgs{...} }
type ProjectGroupRoleArrayInput interface {
	pulumi.Input

	ToProjectGroupRoleArrayOutput() ProjectGroupRoleArrayOutput
	ToProjectGroupRoleArrayOutputWithContext(context.Context) ProjectGroupRoleArrayOutput
}

type ProjectGroupRoleArray []ProjectGroupRoleInput

func (ProjectGroupRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGroupRole)(nil)).Elem()
}

func (i ProjectGroupRoleArray) ToProjectGroupRoleArrayOutput() ProjectGroupRoleArrayOutput {
	return i.ToProjectGroupRoleArrayOutputWithContext(context.Background())
}

func (i ProjectGroupRoleArray) ToProjectGroupRoleArrayOutputWithContext(ctx context.Context) ProjectGroupRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectGroupRoleArrayOutput)
}

type ProjectGroupRoleOutput struct{ *pulumi.OutputState }

func (ProjectGroupRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectGroupRole)(nil)).Elem()
}

func (o ProjectGroupRoleOutput) ToProjectGroupRoleOutput() ProjectGroupRoleOutput {
	return o
}

func (o ProjectGroupRoleOutput) ToProjectGroupRoleOutputWithContext(ctx context.Context) ProjectGroupRoleOutput {
	return o
}

// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
func (o ProjectGroupRoleOutput) IsTemporary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectGroupRole) *bool { return v.IsTemporary }).(pulumi.BoolPtrOutput)
}

// The slug of the role
func (o ProjectGroupRoleOutput) RoleSlug() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectGroupRole) string { return v.RoleSlug }).(pulumi.StringOutput)
}

// ISO time for which temporary access should begin. This is in the format YYYY-MM-DDTHH:MM:SSZ e.g. 2024-09-19T12:43:13Z
func (o ProjectGroupRoleOutput) TemporaryAccessStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGroupRole) *string { return v.TemporaryAccessStartTime }).(pulumi.StringPtrOutput)
}

// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
func (o ProjectGroupRoleOutput) TemporaryRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectGroupRole) *string { return v.TemporaryRange }).(pulumi.StringPtrOutput)
}

type ProjectGroupRoleArrayOutput struct{ *pulumi.OutputState }

func (ProjectGroupRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectGroupRole)(nil)).Elem()
}

func (o ProjectGroupRoleArrayOutput) ToProjectGroupRoleArrayOutput() ProjectGroupRoleArrayOutput {
	return o
}

func (o ProjectGroupRoleArrayOutput) ToProjectGroupRoleArrayOutputWithContext(ctx context.Context) ProjectGroupRoleArrayOutput {
	return o
}

func (o ProjectGroupRoleArrayOutput) Index(i pulumi.IntInput) ProjectGroupRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectGroupRole {
		return vs[0].([]ProjectGroupRole)[vs[1].(int)]
	}).(ProjectGroupRoleOutput)
}

type ProjectIdentityIdentity struct {
	// The auth methods for the identity
	AuthMethods []string `pulumi:"authMethods"`
	// The ID of the identity
	Id *string `pulumi:"id"`
	// The name of the identity
	Name *string `pulumi:"name"`
}

// ProjectIdentityIdentityInput is an input type that accepts ProjectIdentityIdentityArgs and ProjectIdentityIdentityOutput values.
// You can construct a concrete instance of `ProjectIdentityIdentityInput` via:
//
//	ProjectIdentityIdentityArgs{...}
type ProjectIdentityIdentityInput interface {
	pulumi.Input

	ToProjectIdentityIdentityOutput() ProjectIdentityIdentityOutput
	ToProjectIdentityIdentityOutputWithContext(context.Context) ProjectIdentityIdentityOutput
}

type ProjectIdentityIdentityArgs struct {
	// The auth methods for the identity
	AuthMethods pulumi.StringArrayInput `pulumi:"authMethods"`
	// The ID of the identity
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the identity
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ProjectIdentityIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentityIdentity)(nil)).Elem()
}

func (i ProjectIdentityIdentityArgs) ToProjectIdentityIdentityOutput() ProjectIdentityIdentityOutput {
	return i.ToProjectIdentityIdentityOutputWithContext(context.Background())
}

func (i ProjectIdentityIdentityArgs) ToProjectIdentityIdentityOutputWithContext(ctx context.Context) ProjectIdentityIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentityIdentityOutput)
}

func (i ProjectIdentityIdentityArgs) ToProjectIdentityIdentityPtrOutput() ProjectIdentityIdentityPtrOutput {
	return i.ToProjectIdentityIdentityPtrOutputWithContext(context.Background())
}

func (i ProjectIdentityIdentityArgs) ToProjectIdentityIdentityPtrOutputWithContext(ctx context.Context) ProjectIdentityIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentityIdentityOutput).ToProjectIdentityIdentityPtrOutputWithContext(ctx)
}

// ProjectIdentityIdentityPtrInput is an input type that accepts ProjectIdentityIdentityArgs, ProjectIdentityIdentityPtr and ProjectIdentityIdentityPtrOutput values.
// You can construct a concrete instance of `ProjectIdentityIdentityPtrInput` via:
//
//	        ProjectIdentityIdentityArgs{...}
//
//	or:
//
//	        nil
type ProjectIdentityIdentityPtrInput interface {
	pulumi.Input

	ToProjectIdentityIdentityPtrOutput() ProjectIdentityIdentityPtrOutput
	ToProjectIdentityIdentityPtrOutputWithContext(context.Context) ProjectIdentityIdentityPtrOutput
}

type projectIdentityIdentityPtrType ProjectIdentityIdentityArgs

func ProjectIdentityIdentityPtr(v *ProjectIdentityIdentityArgs) ProjectIdentityIdentityPtrInput {
	return (*projectIdentityIdentityPtrType)(v)
}

func (*projectIdentityIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIdentityIdentity)(nil)).Elem()
}

func (i *projectIdentityIdentityPtrType) ToProjectIdentityIdentityPtrOutput() ProjectIdentityIdentityPtrOutput {
	return i.ToProjectIdentityIdentityPtrOutputWithContext(context.Background())
}

func (i *projectIdentityIdentityPtrType) ToProjectIdentityIdentityPtrOutputWithContext(ctx context.Context) ProjectIdentityIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentityIdentityPtrOutput)
}

type ProjectIdentityIdentityOutput struct{ *pulumi.OutputState }

func (ProjectIdentityIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentityIdentity)(nil)).Elem()
}

func (o ProjectIdentityIdentityOutput) ToProjectIdentityIdentityOutput() ProjectIdentityIdentityOutput {
	return o
}

func (o ProjectIdentityIdentityOutput) ToProjectIdentityIdentityOutputWithContext(ctx context.Context) ProjectIdentityIdentityOutput {
	return o
}

func (o ProjectIdentityIdentityOutput) ToProjectIdentityIdentityPtrOutput() ProjectIdentityIdentityPtrOutput {
	return o.ToProjectIdentityIdentityPtrOutputWithContext(context.Background())
}

func (o ProjectIdentityIdentityOutput) ToProjectIdentityIdentityPtrOutputWithContext(ctx context.Context) ProjectIdentityIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectIdentityIdentity) *ProjectIdentityIdentity {
		return &v
	}).(ProjectIdentityIdentityPtrOutput)
}

// The auth methods for the identity
func (o ProjectIdentityIdentityOutput) AuthMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectIdentityIdentity) []string { return v.AuthMethods }).(pulumi.StringArrayOutput)
}

// The ID of the identity
func (o ProjectIdentityIdentityOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityIdentity) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the identity
func (o ProjectIdentityIdentityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityIdentity) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ProjectIdentityIdentityPtrOutput struct{ *pulumi.OutputState }

func (ProjectIdentityIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIdentityIdentity)(nil)).Elem()
}

func (o ProjectIdentityIdentityPtrOutput) ToProjectIdentityIdentityPtrOutput() ProjectIdentityIdentityPtrOutput {
	return o
}

func (o ProjectIdentityIdentityPtrOutput) ToProjectIdentityIdentityPtrOutputWithContext(ctx context.Context) ProjectIdentityIdentityPtrOutput {
	return o
}

func (o ProjectIdentityIdentityPtrOutput) Elem() ProjectIdentityIdentityOutput {
	return o.ApplyT(func(v *ProjectIdentityIdentity) ProjectIdentityIdentity {
		if v != nil {
			return *v
		}
		var ret ProjectIdentityIdentity
		return ret
	}).(ProjectIdentityIdentityOutput)
}

// The auth methods for the identity
func (o ProjectIdentityIdentityPtrOutput) AuthMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectIdentityIdentity) []string {
		if v == nil {
			return nil
		}
		return v.AuthMethods
	}).(pulumi.StringArrayOutput)
}

// The ID of the identity
func (o ProjectIdentityIdentityPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectIdentityIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the identity
func (o ProjectIdentityIdentityPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectIdentityIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ProjectIdentityRole struct {
	// The id of the custom role slug
	CustomRoleId *string `pulumi:"customRoleId"`
	// The ID of the project identity role.
	Id *string `pulumi:"id"`
	// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
	IsTemporary *bool `pulumi:"isTemporary"`
	// The slug of the role
	RoleSlug string `pulumi:"roleSlug"`
	// ISO time for which temporary access will end. Computed based on temporaryRange and temporary_access_start_time
	TemporaryAccessEndTime *string `pulumi:"temporaryAccessEndTime"`
	// ISO time for which temporary access should begin. The current time is used by default.
	TemporaryAccessStartTime *string `pulumi:"temporaryAccessStartTime"`
	// Type of temporary access given. Types: relative. Default: relative
	TemporaryMode *string `pulumi:"temporaryMode"`
	// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
	TemporaryRange *string `pulumi:"temporaryRange"`
}

// ProjectIdentityRoleInput is an input type that accepts ProjectIdentityRoleArgs and ProjectIdentityRoleOutput values.
// You can construct a concrete instance of `ProjectIdentityRoleInput` via:
//
//	ProjectIdentityRoleArgs{...}
type ProjectIdentityRoleInput interface {
	pulumi.Input

	ToProjectIdentityRoleOutput() ProjectIdentityRoleOutput
	ToProjectIdentityRoleOutputWithContext(context.Context) ProjectIdentityRoleOutput
}

type ProjectIdentityRoleArgs struct {
	// The id of the custom role slug
	CustomRoleId pulumi.StringPtrInput `pulumi:"customRoleId"`
	// The ID of the project identity role.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
	IsTemporary pulumi.BoolPtrInput `pulumi:"isTemporary"`
	// The slug of the role
	RoleSlug pulumi.StringInput `pulumi:"roleSlug"`
	// ISO time for which temporary access will end. Computed based on temporaryRange and temporary_access_start_time
	TemporaryAccessEndTime pulumi.StringPtrInput `pulumi:"temporaryAccessEndTime"`
	// ISO time for which temporary access should begin. The current time is used by default.
	TemporaryAccessStartTime pulumi.StringPtrInput `pulumi:"temporaryAccessStartTime"`
	// Type of temporary access given. Types: relative. Default: relative
	TemporaryMode pulumi.StringPtrInput `pulumi:"temporaryMode"`
	// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
	TemporaryRange pulumi.StringPtrInput `pulumi:"temporaryRange"`
}

func (ProjectIdentityRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentityRole)(nil)).Elem()
}

func (i ProjectIdentityRoleArgs) ToProjectIdentityRoleOutput() ProjectIdentityRoleOutput {
	return i.ToProjectIdentityRoleOutputWithContext(context.Background())
}

func (i ProjectIdentityRoleArgs) ToProjectIdentityRoleOutputWithContext(ctx context.Context) ProjectIdentityRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentityRoleOutput)
}

// ProjectIdentityRoleArrayInput is an input type that accepts ProjectIdentityRoleArray and ProjectIdentityRoleArrayOutput values.
// You can construct a concrete instance of `ProjectIdentityRoleArrayInput` via:
//
//	ProjectIdentityRoleArray{ ProjectIdentityRoleArgs{...} }
type ProjectIdentityRoleArrayInput interface {
	pulumi.Input

	ToProjectIdentityRoleArrayOutput() ProjectIdentityRoleArrayOutput
	ToProjectIdentityRoleArrayOutputWithContext(context.Context) ProjectIdentityRoleArrayOutput
}

type ProjectIdentityRoleArray []ProjectIdentityRoleInput

func (ProjectIdentityRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectIdentityRole)(nil)).Elem()
}

func (i ProjectIdentityRoleArray) ToProjectIdentityRoleArrayOutput() ProjectIdentityRoleArrayOutput {
	return i.ToProjectIdentityRoleArrayOutputWithContext(context.Background())
}

func (i ProjectIdentityRoleArray) ToProjectIdentityRoleArrayOutputWithContext(ctx context.Context) ProjectIdentityRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentityRoleArrayOutput)
}

type ProjectIdentityRoleOutput struct{ *pulumi.OutputState }

func (ProjectIdentityRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentityRole)(nil)).Elem()
}

func (o ProjectIdentityRoleOutput) ToProjectIdentityRoleOutput() ProjectIdentityRoleOutput {
	return o
}

func (o ProjectIdentityRoleOutput) ToProjectIdentityRoleOutputWithContext(ctx context.Context) ProjectIdentityRoleOutput {
	return o
}

// The id of the custom role slug
func (o ProjectIdentityRoleOutput) CustomRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityRole) *string { return v.CustomRoleId }).(pulumi.StringPtrOutput)
}

// The ID of the project identity role.
func (o ProjectIdentityRoleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityRole) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
func (o ProjectIdentityRoleOutput) IsTemporary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectIdentityRole) *bool { return v.IsTemporary }).(pulumi.BoolPtrOutput)
}

// The slug of the role
func (o ProjectIdentityRoleOutput) RoleSlug() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectIdentityRole) string { return v.RoleSlug }).(pulumi.StringOutput)
}

// ISO time for which temporary access will end. Computed based on temporaryRange and temporary_access_start_time
func (o ProjectIdentityRoleOutput) TemporaryAccessEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityRole) *string { return v.TemporaryAccessEndTime }).(pulumi.StringPtrOutput)
}

// ISO time for which temporary access should begin. The current time is used by default.
func (o ProjectIdentityRoleOutput) TemporaryAccessStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityRole) *string { return v.TemporaryAccessStartTime }).(pulumi.StringPtrOutput)
}

// Type of temporary access given. Types: relative. Default: relative
func (o ProjectIdentityRoleOutput) TemporaryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityRole) *string { return v.TemporaryMode }).(pulumi.StringPtrOutput)
}

// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
func (o ProjectIdentityRoleOutput) TemporaryRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentityRole) *string { return v.TemporaryRange }).(pulumi.StringPtrOutput)
}

type ProjectIdentityRoleArrayOutput struct{ *pulumi.OutputState }

func (ProjectIdentityRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectIdentityRole)(nil)).Elem()
}

func (o ProjectIdentityRoleArrayOutput) ToProjectIdentityRoleArrayOutput() ProjectIdentityRoleArrayOutput {
	return o
}

func (o ProjectIdentityRoleArrayOutput) ToProjectIdentityRoleArrayOutputWithContext(ctx context.Context) ProjectIdentityRoleArrayOutput {
	return o
}

func (o ProjectIdentityRoleArrayOutput) Index(i pulumi.IntInput) ProjectIdentityRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectIdentityRole {
		return vs[0].([]ProjectIdentityRole)[vs[1].(int)]
	}).(ProjectIdentityRoleOutput)
}

type ProjectIdentitySpecificPrivilegePermission struct {
	// Describe what action an entity can take. Enum: create,edit,delete,read
	Actions []string `pulumi:"actions"`
	// The conditions to scope permissions
	Conditions ProjectIdentitySpecificPrivilegePermissionConditions `pulumi:"conditions"`
	// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
	Subject string `pulumi:"subject"`
}

// ProjectIdentitySpecificPrivilegePermissionInput is an input type that accepts ProjectIdentitySpecificPrivilegePermissionArgs and ProjectIdentitySpecificPrivilegePermissionOutput values.
// You can construct a concrete instance of `ProjectIdentitySpecificPrivilegePermissionInput` via:
//
//	ProjectIdentitySpecificPrivilegePermissionArgs{...}
type ProjectIdentitySpecificPrivilegePermissionInput interface {
	pulumi.Input

	ToProjectIdentitySpecificPrivilegePermissionOutput() ProjectIdentitySpecificPrivilegePermissionOutput
	ToProjectIdentitySpecificPrivilegePermissionOutputWithContext(context.Context) ProjectIdentitySpecificPrivilegePermissionOutput
}

type ProjectIdentitySpecificPrivilegePermissionArgs struct {
	// Describe what action an entity can take. Enum: create,edit,delete,read
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// The conditions to scope permissions
	Conditions ProjectIdentitySpecificPrivilegePermissionConditionsInput `pulumi:"conditions"`
	// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (ProjectIdentitySpecificPrivilegePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermission)(nil)).Elem()
}

func (i ProjectIdentitySpecificPrivilegePermissionArgs) ToProjectIdentitySpecificPrivilegePermissionOutput() ProjectIdentitySpecificPrivilegePermissionOutput {
	return i.ToProjectIdentitySpecificPrivilegePermissionOutputWithContext(context.Background())
}

func (i ProjectIdentitySpecificPrivilegePermissionArgs) ToProjectIdentitySpecificPrivilegePermissionOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionOutput)
}

func (i ProjectIdentitySpecificPrivilegePermissionArgs) ToProjectIdentitySpecificPrivilegePermissionPtrOutput() ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return i.ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(context.Background())
}

func (i ProjectIdentitySpecificPrivilegePermissionArgs) ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionOutput).ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(ctx)
}

// ProjectIdentitySpecificPrivilegePermissionPtrInput is an input type that accepts ProjectIdentitySpecificPrivilegePermissionArgs, ProjectIdentitySpecificPrivilegePermissionPtr and ProjectIdentitySpecificPrivilegePermissionPtrOutput values.
// You can construct a concrete instance of `ProjectIdentitySpecificPrivilegePermissionPtrInput` via:
//
//	        ProjectIdentitySpecificPrivilegePermissionArgs{...}
//
//	or:
//
//	        nil
type ProjectIdentitySpecificPrivilegePermissionPtrInput interface {
	pulumi.Input

	ToProjectIdentitySpecificPrivilegePermissionPtrOutput() ProjectIdentitySpecificPrivilegePermissionPtrOutput
	ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(context.Context) ProjectIdentitySpecificPrivilegePermissionPtrOutput
}

type projectIdentitySpecificPrivilegePermissionPtrType ProjectIdentitySpecificPrivilegePermissionArgs

func ProjectIdentitySpecificPrivilegePermissionPtr(v *ProjectIdentitySpecificPrivilegePermissionArgs) ProjectIdentitySpecificPrivilegePermissionPtrInput {
	return (*projectIdentitySpecificPrivilegePermissionPtrType)(v)
}

func (*projectIdentitySpecificPrivilegePermissionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIdentitySpecificPrivilegePermission)(nil)).Elem()
}

func (i *projectIdentitySpecificPrivilegePermissionPtrType) ToProjectIdentitySpecificPrivilegePermissionPtrOutput() ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return i.ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(context.Background())
}

func (i *projectIdentitySpecificPrivilegePermissionPtrType) ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionPtrOutput)
}

type ProjectIdentitySpecificPrivilegePermissionOutput struct{ *pulumi.OutputState }

func (ProjectIdentitySpecificPrivilegePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermission)(nil)).Elem()
}

func (o ProjectIdentitySpecificPrivilegePermissionOutput) ToProjectIdentitySpecificPrivilegePermissionOutput() ProjectIdentitySpecificPrivilegePermissionOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionOutput) ToProjectIdentitySpecificPrivilegePermissionOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionOutput) ToProjectIdentitySpecificPrivilegePermissionPtrOutput() ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return o.ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(context.Background())
}

func (o ProjectIdentitySpecificPrivilegePermissionOutput) ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectIdentitySpecificPrivilegePermission) *ProjectIdentitySpecificPrivilegePermission {
		return &v
	}).(ProjectIdentitySpecificPrivilegePermissionPtrOutput)
}

// Describe what action an entity can take. Enum: create,edit,delete,read
func (o ProjectIdentitySpecificPrivilegePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// The conditions to scope permissions
func (o ProjectIdentitySpecificPrivilegePermissionOutput) Conditions() ProjectIdentitySpecificPrivilegePermissionConditionsOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermission) ProjectIdentitySpecificPrivilegePermissionConditions {
		return v.Conditions
	}).(ProjectIdentitySpecificPrivilegePermissionConditionsOutput)
}

// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
func (o ProjectIdentitySpecificPrivilegePermissionOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermission) string { return v.Subject }).(pulumi.StringOutput)
}

type ProjectIdentitySpecificPrivilegePermissionPtrOutput struct{ *pulumi.OutputState }

func (ProjectIdentitySpecificPrivilegePermissionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIdentitySpecificPrivilegePermission)(nil)).Elem()
}

func (o ProjectIdentitySpecificPrivilegePermissionPtrOutput) ToProjectIdentitySpecificPrivilegePermissionPtrOutput() ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionPtrOutput) ToProjectIdentitySpecificPrivilegePermissionPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionPtrOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionPtrOutput) Elem() ProjectIdentitySpecificPrivilegePermissionOutput {
	return o.ApplyT(func(v *ProjectIdentitySpecificPrivilegePermission) ProjectIdentitySpecificPrivilegePermission {
		if v != nil {
			return *v
		}
		var ret ProjectIdentitySpecificPrivilegePermission
		return ret
	}).(ProjectIdentitySpecificPrivilegePermissionOutput)
}

// Describe what action an entity can take. Enum: create,edit,delete,read
func (o ProjectIdentitySpecificPrivilegePermissionPtrOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectIdentitySpecificPrivilegePermission) []string {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(pulumi.StringArrayOutput)
}

// The conditions to scope permissions
func (o ProjectIdentitySpecificPrivilegePermissionPtrOutput) Conditions() ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return o.ApplyT(func(v *ProjectIdentitySpecificPrivilegePermission) *ProjectIdentitySpecificPrivilegePermissionConditions {
		if v == nil {
			return nil
		}
		return &v.Conditions
	}).(ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput)
}

// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
func (o ProjectIdentitySpecificPrivilegePermissionPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectIdentitySpecificPrivilegePermission) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

type ProjectIdentitySpecificPrivilegePermissionConditions struct {
	// The environment slug this permission should allow.
	Environment string `pulumi:"environment"`
	// The secret path this permission should be scoped to
	SecretPath *string `pulumi:"secretPath"`
}

// ProjectIdentitySpecificPrivilegePermissionConditionsInput is an input type that accepts ProjectIdentitySpecificPrivilegePermissionConditionsArgs and ProjectIdentitySpecificPrivilegePermissionConditionsOutput values.
// You can construct a concrete instance of `ProjectIdentitySpecificPrivilegePermissionConditionsInput` via:
//
//	ProjectIdentitySpecificPrivilegePermissionConditionsArgs{...}
type ProjectIdentitySpecificPrivilegePermissionConditionsInput interface {
	pulumi.Input

	ToProjectIdentitySpecificPrivilegePermissionConditionsOutput() ProjectIdentitySpecificPrivilegePermissionConditionsOutput
	ToProjectIdentitySpecificPrivilegePermissionConditionsOutputWithContext(context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsOutput
}

type ProjectIdentitySpecificPrivilegePermissionConditionsArgs struct {
	// The environment slug this permission should allow.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The secret path this permission should be scoped to
	SecretPath pulumi.StringPtrInput `pulumi:"secretPath"`
}

func (ProjectIdentitySpecificPrivilegePermissionConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionConditions)(nil)).Elem()
}

func (i ProjectIdentitySpecificPrivilegePermissionConditionsArgs) ToProjectIdentitySpecificPrivilegePermissionConditionsOutput() ProjectIdentitySpecificPrivilegePermissionConditionsOutput {
	return i.ToProjectIdentitySpecificPrivilegePermissionConditionsOutputWithContext(context.Background())
}

func (i ProjectIdentitySpecificPrivilegePermissionConditionsArgs) ToProjectIdentitySpecificPrivilegePermissionConditionsOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionConditionsOutput)
}

func (i ProjectIdentitySpecificPrivilegePermissionConditionsArgs) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput() ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return i.ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(context.Background())
}

func (i ProjectIdentitySpecificPrivilegePermissionConditionsArgs) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionConditionsOutput).ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(ctx)
}

// ProjectIdentitySpecificPrivilegePermissionConditionsPtrInput is an input type that accepts ProjectIdentitySpecificPrivilegePermissionConditionsArgs, ProjectIdentitySpecificPrivilegePermissionConditionsPtr and ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput values.
// You can construct a concrete instance of `ProjectIdentitySpecificPrivilegePermissionConditionsPtrInput` via:
//
//	        ProjectIdentitySpecificPrivilegePermissionConditionsArgs{...}
//
//	or:
//
//	        nil
type ProjectIdentitySpecificPrivilegePermissionConditionsPtrInput interface {
	pulumi.Input

	ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput() ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput
	ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput
}

type projectIdentitySpecificPrivilegePermissionConditionsPtrType ProjectIdentitySpecificPrivilegePermissionConditionsArgs

func ProjectIdentitySpecificPrivilegePermissionConditionsPtr(v *ProjectIdentitySpecificPrivilegePermissionConditionsArgs) ProjectIdentitySpecificPrivilegePermissionConditionsPtrInput {
	return (*projectIdentitySpecificPrivilegePermissionConditionsPtrType)(v)
}

func (*projectIdentitySpecificPrivilegePermissionConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIdentitySpecificPrivilegePermissionConditions)(nil)).Elem()
}

func (i *projectIdentitySpecificPrivilegePermissionConditionsPtrType) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput() ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return i.ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(context.Background())
}

func (i *projectIdentitySpecificPrivilegePermissionConditionsPtrType) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput)
}

type ProjectIdentitySpecificPrivilegePermissionConditionsOutput struct{ *pulumi.OutputState }

func (ProjectIdentitySpecificPrivilegePermissionConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionConditions)(nil)).Elem()
}

func (o ProjectIdentitySpecificPrivilegePermissionConditionsOutput) ToProjectIdentitySpecificPrivilegePermissionConditionsOutput() ProjectIdentitySpecificPrivilegePermissionConditionsOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionConditionsOutput) ToProjectIdentitySpecificPrivilegePermissionConditionsOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionConditionsOutput) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput() ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return o.ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(context.Background())
}

func (o ProjectIdentitySpecificPrivilegePermissionConditionsOutput) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectIdentitySpecificPrivilegePermissionConditions) *ProjectIdentitySpecificPrivilegePermissionConditions {
		return &v
	}).(ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput)
}

// The environment slug this permission should allow.
func (o ProjectIdentitySpecificPrivilegePermissionConditionsOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermissionConditions) string { return v.Environment }).(pulumi.StringOutput)
}

// The secret path this permission should be scoped to
func (o ProjectIdentitySpecificPrivilegePermissionConditionsOutput) SecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermissionConditions) *string { return v.SecretPath }).(pulumi.StringPtrOutput)
}

type ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput struct{ *pulumi.OutputState }

func (ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectIdentitySpecificPrivilegePermissionConditions)(nil)).Elem()
}

func (o ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput() ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput) ToProjectIdentitySpecificPrivilegePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput) Elem() ProjectIdentitySpecificPrivilegePermissionConditionsOutput {
	return o.ApplyT(func(v *ProjectIdentitySpecificPrivilegePermissionConditions) ProjectIdentitySpecificPrivilegePermissionConditions {
		if v != nil {
			return *v
		}
		var ret ProjectIdentitySpecificPrivilegePermissionConditions
		return ret
	}).(ProjectIdentitySpecificPrivilegePermissionConditionsOutput)
}

// The environment slug this permission should allow.
func (o ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectIdentitySpecificPrivilegePermissionConditions) *string {
		if v == nil {
			return nil
		}
		return &v.Environment
	}).(pulumi.StringPtrOutput)
}

// The secret path this permission should be scoped to
func (o ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput) SecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectIdentitySpecificPrivilegePermissionConditions) *string {
		if v == nil {
			return nil
		}
		return v.SecretPath
	}).(pulumi.StringPtrOutput)
}

type ProjectIdentitySpecificPrivilegePermissionsV2 struct {
	// Describe what actions an entity can take.
	Actions []string `pulumi:"actions"`
	// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
	Conditions *string `pulumi:"conditions"`
	// Whether rule forbids. Set this to true if permission forbids.
	Inverted *bool `pulumi:"inverted"`
	// Describe the entity the permission pertains to.
	Subject string `pulumi:"subject"`
}

// ProjectIdentitySpecificPrivilegePermissionsV2Input is an input type that accepts ProjectIdentitySpecificPrivilegePermissionsV2Args and ProjectIdentitySpecificPrivilegePermissionsV2Output values.
// You can construct a concrete instance of `ProjectIdentitySpecificPrivilegePermissionsV2Input` via:
//
//	ProjectIdentitySpecificPrivilegePermissionsV2Args{...}
type ProjectIdentitySpecificPrivilegePermissionsV2Input interface {
	pulumi.Input

	ToProjectIdentitySpecificPrivilegePermissionsV2Output() ProjectIdentitySpecificPrivilegePermissionsV2Output
	ToProjectIdentitySpecificPrivilegePermissionsV2OutputWithContext(context.Context) ProjectIdentitySpecificPrivilegePermissionsV2Output
}

type ProjectIdentitySpecificPrivilegePermissionsV2Args struct {
	// Describe what actions an entity can take.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
	Conditions pulumi.StringPtrInput `pulumi:"conditions"`
	// Whether rule forbids. Set this to true if permission forbids.
	Inverted pulumi.BoolPtrInput `pulumi:"inverted"`
	// Describe the entity the permission pertains to.
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (ProjectIdentitySpecificPrivilegePermissionsV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionsV2)(nil)).Elem()
}

func (i ProjectIdentitySpecificPrivilegePermissionsV2Args) ToProjectIdentitySpecificPrivilegePermissionsV2Output() ProjectIdentitySpecificPrivilegePermissionsV2Output {
	return i.ToProjectIdentitySpecificPrivilegePermissionsV2OutputWithContext(context.Background())
}

func (i ProjectIdentitySpecificPrivilegePermissionsV2Args) ToProjectIdentitySpecificPrivilegePermissionsV2OutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionsV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionsV2Output)
}

// ProjectIdentitySpecificPrivilegePermissionsV2ArrayInput is an input type that accepts ProjectIdentitySpecificPrivilegePermissionsV2Array and ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput values.
// You can construct a concrete instance of `ProjectIdentitySpecificPrivilegePermissionsV2ArrayInput` via:
//
//	ProjectIdentitySpecificPrivilegePermissionsV2Array{ ProjectIdentitySpecificPrivilegePermissionsV2Args{...} }
type ProjectIdentitySpecificPrivilegePermissionsV2ArrayInput interface {
	pulumi.Input

	ToProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput() ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput
	ToProjectIdentitySpecificPrivilegePermissionsV2ArrayOutputWithContext(context.Context) ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput
}

type ProjectIdentitySpecificPrivilegePermissionsV2Array []ProjectIdentitySpecificPrivilegePermissionsV2Input

func (ProjectIdentitySpecificPrivilegePermissionsV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectIdentitySpecificPrivilegePermissionsV2)(nil)).Elem()
}

func (i ProjectIdentitySpecificPrivilegePermissionsV2Array) ToProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput() ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput {
	return i.ToProjectIdentitySpecificPrivilegePermissionsV2ArrayOutputWithContext(context.Background())
}

func (i ProjectIdentitySpecificPrivilegePermissionsV2Array) ToProjectIdentitySpecificPrivilegePermissionsV2ArrayOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput)
}

type ProjectIdentitySpecificPrivilegePermissionsV2Output struct{ *pulumi.OutputState }

func (ProjectIdentitySpecificPrivilegePermissionsV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionsV2)(nil)).Elem()
}

func (o ProjectIdentitySpecificPrivilegePermissionsV2Output) ToProjectIdentitySpecificPrivilegePermissionsV2Output() ProjectIdentitySpecificPrivilegePermissionsV2Output {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionsV2Output) ToProjectIdentitySpecificPrivilegePermissionsV2OutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionsV2Output {
	return o
}

// Describe what actions an entity can take.
func (o ProjectIdentitySpecificPrivilegePermissionsV2Output) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermissionsV2) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
func (o ProjectIdentitySpecificPrivilegePermissionsV2Output) Conditions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermissionsV2) *string { return v.Conditions }).(pulumi.StringPtrOutput)
}

// Whether rule forbids. Set this to true if permission forbids.
func (o ProjectIdentitySpecificPrivilegePermissionsV2Output) Inverted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermissionsV2) *bool { return v.Inverted }).(pulumi.BoolPtrOutput)
}

// Describe the entity the permission pertains to.
func (o ProjectIdentitySpecificPrivilegePermissionsV2Output) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectIdentitySpecificPrivilegePermissionsV2) string { return v.Subject }).(pulumi.StringOutput)
}

type ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput struct{ *pulumi.OutputState }

func (ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectIdentitySpecificPrivilegePermissionsV2)(nil)).Elem()
}

func (o ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput) ToProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput() ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput) ToProjectIdentitySpecificPrivilegePermissionsV2ArrayOutputWithContext(ctx context.Context) ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput {
	return o
}

func (o ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput) Index(i pulumi.IntInput) ProjectIdentitySpecificPrivilegePermissionsV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectIdentitySpecificPrivilegePermissionsV2 {
		return vs[0].([]ProjectIdentitySpecificPrivilegePermissionsV2)[vs[1].(int)]
	}).(ProjectIdentitySpecificPrivilegePermissionsV2Output)
}

type ProjectRolePermission struct {
	// Describe what action an entity can take. Enum: create,edit,delete,read
	Action string `pulumi:"action"`
	// The conditions to scope permissions
	Conditions *ProjectRolePermissionConditions `pulumi:"conditions"`
	// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
	Subject string `pulumi:"subject"`
}

// ProjectRolePermissionInput is an input type that accepts ProjectRolePermissionArgs and ProjectRolePermissionOutput values.
// You can construct a concrete instance of `ProjectRolePermissionInput` via:
//
//	ProjectRolePermissionArgs{...}
type ProjectRolePermissionInput interface {
	pulumi.Input

	ToProjectRolePermissionOutput() ProjectRolePermissionOutput
	ToProjectRolePermissionOutputWithContext(context.Context) ProjectRolePermissionOutput
}

type ProjectRolePermissionArgs struct {
	// Describe what action an entity can take. Enum: create,edit,delete,read
	Action pulumi.StringInput `pulumi:"action"`
	// The conditions to scope permissions
	Conditions ProjectRolePermissionConditionsPtrInput `pulumi:"conditions"`
	// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (ProjectRolePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectRolePermission)(nil)).Elem()
}

func (i ProjectRolePermissionArgs) ToProjectRolePermissionOutput() ProjectRolePermissionOutput {
	return i.ToProjectRolePermissionOutputWithContext(context.Background())
}

func (i ProjectRolePermissionArgs) ToProjectRolePermissionOutputWithContext(ctx context.Context) ProjectRolePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectRolePermissionOutput)
}

// ProjectRolePermissionArrayInput is an input type that accepts ProjectRolePermissionArray and ProjectRolePermissionArrayOutput values.
// You can construct a concrete instance of `ProjectRolePermissionArrayInput` via:
//
//	ProjectRolePermissionArray{ ProjectRolePermissionArgs{...} }
type ProjectRolePermissionArrayInput interface {
	pulumi.Input

	ToProjectRolePermissionArrayOutput() ProjectRolePermissionArrayOutput
	ToProjectRolePermissionArrayOutputWithContext(context.Context) ProjectRolePermissionArrayOutput
}

type ProjectRolePermissionArray []ProjectRolePermissionInput

func (ProjectRolePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectRolePermission)(nil)).Elem()
}

func (i ProjectRolePermissionArray) ToProjectRolePermissionArrayOutput() ProjectRolePermissionArrayOutput {
	return i.ToProjectRolePermissionArrayOutputWithContext(context.Background())
}

func (i ProjectRolePermissionArray) ToProjectRolePermissionArrayOutputWithContext(ctx context.Context) ProjectRolePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectRolePermissionArrayOutput)
}

type ProjectRolePermissionOutput struct{ *pulumi.OutputState }

func (ProjectRolePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectRolePermission)(nil)).Elem()
}

func (o ProjectRolePermissionOutput) ToProjectRolePermissionOutput() ProjectRolePermissionOutput {
	return o
}

func (o ProjectRolePermissionOutput) ToProjectRolePermissionOutputWithContext(ctx context.Context) ProjectRolePermissionOutput {
	return o
}

// Describe what action an entity can take. Enum: create,edit,delete,read
func (o ProjectRolePermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectRolePermission) string { return v.Action }).(pulumi.StringOutput)
}

// The conditions to scope permissions
func (o ProjectRolePermissionOutput) Conditions() ProjectRolePermissionConditionsPtrOutput {
	return o.ApplyT(func(v ProjectRolePermission) *ProjectRolePermissionConditions { return v.Conditions }).(ProjectRolePermissionConditionsPtrOutput)
}

// Describe what action an entity can take. Enum: role,member,groups,settings,integrations,webhooks,service-tokens,environments,tags,audit-logs,ip-allowlist,workspace,secrets,secret-rollback,secret-approval,secret-rotation,identity,certificate-authorities,certificates,certificate-templates,kms,pki-alerts,pki-collections
func (o ProjectRolePermissionOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectRolePermission) string { return v.Subject }).(pulumi.StringOutput)
}

type ProjectRolePermissionArrayOutput struct{ *pulumi.OutputState }

func (ProjectRolePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectRolePermission)(nil)).Elem()
}

func (o ProjectRolePermissionArrayOutput) ToProjectRolePermissionArrayOutput() ProjectRolePermissionArrayOutput {
	return o
}

func (o ProjectRolePermissionArrayOutput) ToProjectRolePermissionArrayOutputWithContext(ctx context.Context) ProjectRolePermissionArrayOutput {
	return o
}

func (o ProjectRolePermissionArrayOutput) Index(i pulumi.IntInput) ProjectRolePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectRolePermission {
		return vs[0].([]ProjectRolePermission)[vs[1].(int)]
	}).(ProjectRolePermissionOutput)
}

type ProjectRolePermissionConditions struct {
	// The environment slug this permission should allow.
	Environment *string `pulumi:"environment"`
	// The secret path this permission should be scoped to
	SecretPath *string `pulumi:"secretPath"`
}

// ProjectRolePermissionConditionsInput is an input type that accepts ProjectRolePermissionConditionsArgs and ProjectRolePermissionConditionsOutput values.
// You can construct a concrete instance of `ProjectRolePermissionConditionsInput` via:
//
//	ProjectRolePermissionConditionsArgs{...}
type ProjectRolePermissionConditionsInput interface {
	pulumi.Input

	ToProjectRolePermissionConditionsOutput() ProjectRolePermissionConditionsOutput
	ToProjectRolePermissionConditionsOutputWithContext(context.Context) ProjectRolePermissionConditionsOutput
}

type ProjectRolePermissionConditionsArgs struct {
	// The environment slug this permission should allow.
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// The secret path this permission should be scoped to
	SecretPath pulumi.StringPtrInput `pulumi:"secretPath"`
}

func (ProjectRolePermissionConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectRolePermissionConditions)(nil)).Elem()
}

func (i ProjectRolePermissionConditionsArgs) ToProjectRolePermissionConditionsOutput() ProjectRolePermissionConditionsOutput {
	return i.ToProjectRolePermissionConditionsOutputWithContext(context.Background())
}

func (i ProjectRolePermissionConditionsArgs) ToProjectRolePermissionConditionsOutputWithContext(ctx context.Context) ProjectRolePermissionConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectRolePermissionConditionsOutput)
}

func (i ProjectRolePermissionConditionsArgs) ToProjectRolePermissionConditionsPtrOutput() ProjectRolePermissionConditionsPtrOutput {
	return i.ToProjectRolePermissionConditionsPtrOutputWithContext(context.Background())
}

func (i ProjectRolePermissionConditionsArgs) ToProjectRolePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectRolePermissionConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectRolePermissionConditionsOutput).ToProjectRolePermissionConditionsPtrOutputWithContext(ctx)
}

// ProjectRolePermissionConditionsPtrInput is an input type that accepts ProjectRolePermissionConditionsArgs, ProjectRolePermissionConditionsPtr and ProjectRolePermissionConditionsPtrOutput values.
// You can construct a concrete instance of `ProjectRolePermissionConditionsPtrInput` via:
//
//	        ProjectRolePermissionConditionsArgs{...}
//
//	or:
//
//	        nil
type ProjectRolePermissionConditionsPtrInput interface {
	pulumi.Input

	ToProjectRolePermissionConditionsPtrOutput() ProjectRolePermissionConditionsPtrOutput
	ToProjectRolePermissionConditionsPtrOutputWithContext(context.Context) ProjectRolePermissionConditionsPtrOutput
}

type projectRolePermissionConditionsPtrType ProjectRolePermissionConditionsArgs

func ProjectRolePermissionConditionsPtr(v *ProjectRolePermissionConditionsArgs) ProjectRolePermissionConditionsPtrInput {
	return (*projectRolePermissionConditionsPtrType)(v)
}

func (*projectRolePermissionConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectRolePermissionConditions)(nil)).Elem()
}

func (i *projectRolePermissionConditionsPtrType) ToProjectRolePermissionConditionsPtrOutput() ProjectRolePermissionConditionsPtrOutput {
	return i.ToProjectRolePermissionConditionsPtrOutputWithContext(context.Background())
}

func (i *projectRolePermissionConditionsPtrType) ToProjectRolePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectRolePermissionConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectRolePermissionConditionsPtrOutput)
}

type ProjectRolePermissionConditionsOutput struct{ *pulumi.OutputState }

func (ProjectRolePermissionConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectRolePermissionConditions)(nil)).Elem()
}

func (o ProjectRolePermissionConditionsOutput) ToProjectRolePermissionConditionsOutput() ProjectRolePermissionConditionsOutput {
	return o
}

func (o ProjectRolePermissionConditionsOutput) ToProjectRolePermissionConditionsOutputWithContext(ctx context.Context) ProjectRolePermissionConditionsOutput {
	return o
}

func (o ProjectRolePermissionConditionsOutput) ToProjectRolePermissionConditionsPtrOutput() ProjectRolePermissionConditionsPtrOutput {
	return o.ToProjectRolePermissionConditionsPtrOutputWithContext(context.Background())
}

func (o ProjectRolePermissionConditionsOutput) ToProjectRolePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectRolePermissionConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectRolePermissionConditions) *ProjectRolePermissionConditions {
		return &v
	}).(ProjectRolePermissionConditionsPtrOutput)
}

// The environment slug this permission should allow.
func (o ProjectRolePermissionConditionsOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectRolePermissionConditions) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// The secret path this permission should be scoped to
func (o ProjectRolePermissionConditionsOutput) SecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectRolePermissionConditions) *string { return v.SecretPath }).(pulumi.StringPtrOutput)
}

type ProjectRolePermissionConditionsPtrOutput struct{ *pulumi.OutputState }

func (ProjectRolePermissionConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectRolePermissionConditions)(nil)).Elem()
}

func (o ProjectRolePermissionConditionsPtrOutput) ToProjectRolePermissionConditionsPtrOutput() ProjectRolePermissionConditionsPtrOutput {
	return o
}

func (o ProjectRolePermissionConditionsPtrOutput) ToProjectRolePermissionConditionsPtrOutputWithContext(ctx context.Context) ProjectRolePermissionConditionsPtrOutput {
	return o
}

func (o ProjectRolePermissionConditionsPtrOutput) Elem() ProjectRolePermissionConditionsOutput {
	return o.ApplyT(func(v *ProjectRolePermissionConditions) ProjectRolePermissionConditions {
		if v != nil {
			return *v
		}
		var ret ProjectRolePermissionConditions
		return ret
	}).(ProjectRolePermissionConditionsOutput)
}

// The environment slug this permission should allow.
func (o ProjectRolePermissionConditionsPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectRolePermissionConditions) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// The secret path this permission should be scoped to
func (o ProjectRolePermissionConditionsPtrOutput) SecretPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectRolePermissionConditions) *string {
		if v == nil {
			return nil
		}
		return v.SecretPath
	}).(pulumi.StringPtrOutput)
}

type ProjectRolePermissionsV2 struct {
	// Describe what actions an entity can take.
	Actions []string `pulumi:"actions"`
	// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
	Conditions *string `pulumi:"conditions"`
	// Whether rule forbids. Set this to true if permission forbids.
	Inverted *bool `pulumi:"inverted"`
	// Describe the entity the permission pertains to.
	Subject string `pulumi:"subject"`
}

// ProjectRolePermissionsV2Input is an input type that accepts ProjectRolePermissionsV2Args and ProjectRolePermissionsV2Output values.
// You can construct a concrete instance of `ProjectRolePermissionsV2Input` via:
//
//	ProjectRolePermissionsV2Args{...}
type ProjectRolePermissionsV2Input interface {
	pulumi.Input

	ToProjectRolePermissionsV2Output() ProjectRolePermissionsV2Output
	ToProjectRolePermissionsV2OutputWithContext(context.Context) ProjectRolePermissionsV2Output
}

type ProjectRolePermissionsV2Args struct {
	// Describe what actions an entity can take.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
	Conditions pulumi.StringPtrInput `pulumi:"conditions"`
	// Whether rule forbids. Set this to true if permission forbids.
	Inverted pulumi.BoolPtrInput `pulumi:"inverted"`
	// Describe the entity the permission pertains to.
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (ProjectRolePermissionsV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectRolePermissionsV2)(nil)).Elem()
}

func (i ProjectRolePermissionsV2Args) ToProjectRolePermissionsV2Output() ProjectRolePermissionsV2Output {
	return i.ToProjectRolePermissionsV2OutputWithContext(context.Background())
}

func (i ProjectRolePermissionsV2Args) ToProjectRolePermissionsV2OutputWithContext(ctx context.Context) ProjectRolePermissionsV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectRolePermissionsV2Output)
}

// ProjectRolePermissionsV2ArrayInput is an input type that accepts ProjectRolePermissionsV2Array and ProjectRolePermissionsV2ArrayOutput values.
// You can construct a concrete instance of `ProjectRolePermissionsV2ArrayInput` via:
//
//	ProjectRolePermissionsV2Array{ ProjectRolePermissionsV2Args{...} }
type ProjectRolePermissionsV2ArrayInput interface {
	pulumi.Input

	ToProjectRolePermissionsV2ArrayOutput() ProjectRolePermissionsV2ArrayOutput
	ToProjectRolePermissionsV2ArrayOutputWithContext(context.Context) ProjectRolePermissionsV2ArrayOutput
}

type ProjectRolePermissionsV2Array []ProjectRolePermissionsV2Input

func (ProjectRolePermissionsV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectRolePermissionsV2)(nil)).Elem()
}

func (i ProjectRolePermissionsV2Array) ToProjectRolePermissionsV2ArrayOutput() ProjectRolePermissionsV2ArrayOutput {
	return i.ToProjectRolePermissionsV2ArrayOutputWithContext(context.Background())
}

func (i ProjectRolePermissionsV2Array) ToProjectRolePermissionsV2ArrayOutputWithContext(ctx context.Context) ProjectRolePermissionsV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectRolePermissionsV2ArrayOutput)
}

type ProjectRolePermissionsV2Output struct{ *pulumi.OutputState }

func (ProjectRolePermissionsV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectRolePermissionsV2)(nil)).Elem()
}

func (o ProjectRolePermissionsV2Output) ToProjectRolePermissionsV2Output() ProjectRolePermissionsV2Output {
	return o
}

func (o ProjectRolePermissionsV2Output) ToProjectRolePermissionsV2OutputWithContext(ctx context.Context) ProjectRolePermissionsV2Output {
	return o
}

// Describe what actions an entity can take.
func (o ProjectRolePermissionsV2Output) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectRolePermissionsV2) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
func (o ProjectRolePermissionsV2Output) Conditions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectRolePermissionsV2) *string { return v.Conditions }).(pulumi.StringPtrOutput)
}

// Whether rule forbids. Set this to true if permission forbids.
func (o ProjectRolePermissionsV2Output) Inverted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectRolePermissionsV2) *bool { return v.Inverted }).(pulumi.BoolPtrOutput)
}

// Describe the entity the permission pertains to.
func (o ProjectRolePermissionsV2Output) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectRolePermissionsV2) string { return v.Subject }).(pulumi.StringOutput)
}

type ProjectRolePermissionsV2ArrayOutput struct{ *pulumi.OutputState }

func (ProjectRolePermissionsV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectRolePermissionsV2)(nil)).Elem()
}

func (o ProjectRolePermissionsV2ArrayOutput) ToProjectRolePermissionsV2ArrayOutput() ProjectRolePermissionsV2ArrayOutput {
	return o
}

func (o ProjectRolePermissionsV2ArrayOutput) ToProjectRolePermissionsV2ArrayOutputWithContext(ctx context.Context) ProjectRolePermissionsV2ArrayOutput {
	return o
}

func (o ProjectRolePermissionsV2ArrayOutput) Index(i pulumi.IntInput) ProjectRolePermissionsV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectRolePermissionsV2 {
		return vs[0].([]ProjectRolePermissionsV2)[vs[1].(int)]
	}).(ProjectRolePermissionsV2Output)
}

type ProjectTemplateEnvironment struct {
	// The name of the environment
	Name string `pulumi:"name"`
	// The position of the environment
	Position int `pulumi:"position"`
	// The slug of the environment
	Slug string `pulumi:"slug"`
}

// ProjectTemplateEnvironmentInput is an input type that accepts ProjectTemplateEnvironmentArgs and ProjectTemplateEnvironmentOutput values.
// You can construct a concrete instance of `ProjectTemplateEnvironmentInput` via:
//
//	ProjectTemplateEnvironmentArgs{...}
type ProjectTemplateEnvironmentInput interface {
	pulumi.Input

	ToProjectTemplateEnvironmentOutput() ProjectTemplateEnvironmentOutput
	ToProjectTemplateEnvironmentOutputWithContext(context.Context) ProjectTemplateEnvironmentOutput
}

type ProjectTemplateEnvironmentArgs struct {
	// The name of the environment
	Name pulumi.StringInput `pulumi:"name"`
	// The position of the environment
	Position pulumi.IntInput `pulumi:"position"`
	// The slug of the environment
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (ProjectTemplateEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplateEnvironment)(nil)).Elem()
}

func (i ProjectTemplateEnvironmentArgs) ToProjectTemplateEnvironmentOutput() ProjectTemplateEnvironmentOutput {
	return i.ToProjectTemplateEnvironmentOutputWithContext(context.Background())
}

func (i ProjectTemplateEnvironmentArgs) ToProjectTemplateEnvironmentOutputWithContext(ctx context.Context) ProjectTemplateEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateEnvironmentOutput)
}

// ProjectTemplateEnvironmentArrayInput is an input type that accepts ProjectTemplateEnvironmentArray and ProjectTemplateEnvironmentArrayOutput values.
// You can construct a concrete instance of `ProjectTemplateEnvironmentArrayInput` via:
//
//	ProjectTemplateEnvironmentArray{ ProjectTemplateEnvironmentArgs{...} }
type ProjectTemplateEnvironmentArrayInput interface {
	pulumi.Input

	ToProjectTemplateEnvironmentArrayOutput() ProjectTemplateEnvironmentArrayOutput
	ToProjectTemplateEnvironmentArrayOutputWithContext(context.Context) ProjectTemplateEnvironmentArrayOutput
}

type ProjectTemplateEnvironmentArray []ProjectTemplateEnvironmentInput

func (ProjectTemplateEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplateEnvironment)(nil)).Elem()
}

func (i ProjectTemplateEnvironmentArray) ToProjectTemplateEnvironmentArrayOutput() ProjectTemplateEnvironmentArrayOutput {
	return i.ToProjectTemplateEnvironmentArrayOutputWithContext(context.Background())
}

func (i ProjectTemplateEnvironmentArray) ToProjectTemplateEnvironmentArrayOutputWithContext(ctx context.Context) ProjectTemplateEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateEnvironmentArrayOutput)
}

type ProjectTemplateEnvironmentOutput struct{ *pulumi.OutputState }

func (ProjectTemplateEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplateEnvironment)(nil)).Elem()
}

func (o ProjectTemplateEnvironmentOutput) ToProjectTemplateEnvironmentOutput() ProjectTemplateEnvironmentOutput {
	return o
}

func (o ProjectTemplateEnvironmentOutput) ToProjectTemplateEnvironmentOutputWithContext(ctx context.Context) ProjectTemplateEnvironmentOutput {
	return o
}

// The name of the environment
func (o ProjectTemplateEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTemplateEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

// The position of the environment
func (o ProjectTemplateEnvironmentOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ProjectTemplateEnvironment) int { return v.Position }).(pulumi.IntOutput)
}

// The slug of the environment
func (o ProjectTemplateEnvironmentOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTemplateEnvironment) string { return v.Slug }).(pulumi.StringOutput)
}

type ProjectTemplateEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ProjectTemplateEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplateEnvironment)(nil)).Elem()
}

func (o ProjectTemplateEnvironmentArrayOutput) ToProjectTemplateEnvironmentArrayOutput() ProjectTemplateEnvironmentArrayOutput {
	return o
}

func (o ProjectTemplateEnvironmentArrayOutput) ToProjectTemplateEnvironmentArrayOutputWithContext(ctx context.Context) ProjectTemplateEnvironmentArrayOutput {
	return o
}

func (o ProjectTemplateEnvironmentArrayOutput) Index(i pulumi.IntInput) ProjectTemplateEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTemplateEnvironment {
		return vs[0].([]ProjectTemplateEnvironment)[vs[1].(int)]
	}).(ProjectTemplateEnvironmentOutput)
}

type ProjectTemplateRole struct {
	// The name of the role
	Name string `pulumi:"name"`
	// The permissions assigned to the role. Refer to the documentation here https://infisical.com/docs/api-reference/endpoints/project-templates/create#body-roles-permissions for its usage.
	Permissions []ProjectTemplateRolePermission `pulumi:"permissions"`
	// The slug of the role
	Slug string `pulumi:"slug"`
}

// ProjectTemplateRoleInput is an input type that accepts ProjectTemplateRoleArgs and ProjectTemplateRoleOutput values.
// You can construct a concrete instance of `ProjectTemplateRoleInput` via:
//
//	ProjectTemplateRoleArgs{...}
type ProjectTemplateRoleInput interface {
	pulumi.Input

	ToProjectTemplateRoleOutput() ProjectTemplateRoleOutput
	ToProjectTemplateRoleOutputWithContext(context.Context) ProjectTemplateRoleOutput
}

type ProjectTemplateRoleArgs struct {
	// The name of the role
	Name pulumi.StringInput `pulumi:"name"`
	// The permissions assigned to the role. Refer to the documentation here https://infisical.com/docs/api-reference/endpoints/project-templates/create#body-roles-permissions for its usage.
	Permissions ProjectTemplateRolePermissionArrayInput `pulumi:"permissions"`
	// The slug of the role
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (ProjectTemplateRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplateRole)(nil)).Elem()
}

func (i ProjectTemplateRoleArgs) ToProjectTemplateRoleOutput() ProjectTemplateRoleOutput {
	return i.ToProjectTemplateRoleOutputWithContext(context.Background())
}

func (i ProjectTemplateRoleArgs) ToProjectTemplateRoleOutputWithContext(ctx context.Context) ProjectTemplateRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateRoleOutput)
}

// ProjectTemplateRoleArrayInput is an input type that accepts ProjectTemplateRoleArray and ProjectTemplateRoleArrayOutput values.
// You can construct a concrete instance of `ProjectTemplateRoleArrayInput` via:
//
//	ProjectTemplateRoleArray{ ProjectTemplateRoleArgs{...} }
type ProjectTemplateRoleArrayInput interface {
	pulumi.Input

	ToProjectTemplateRoleArrayOutput() ProjectTemplateRoleArrayOutput
	ToProjectTemplateRoleArrayOutputWithContext(context.Context) ProjectTemplateRoleArrayOutput
}

type ProjectTemplateRoleArray []ProjectTemplateRoleInput

func (ProjectTemplateRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplateRole)(nil)).Elem()
}

func (i ProjectTemplateRoleArray) ToProjectTemplateRoleArrayOutput() ProjectTemplateRoleArrayOutput {
	return i.ToProjectTemplateRoleArrayOutputWithContext(context.Background())
}

func (i ProjectTemplateRoleArray) ToProjectTemplateRoleArrayOutputWithContext(ctx context.Context) ProjectTemplateRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateRoleArrayOutput)
}

type ProjectTemplateRoleOutput struct{ *pulumi.OutputState }

func (ProjectTemplateRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplateRole)(nil)).Elem()
}

func (o ProjectTemplateRoleOutput) ToProjectTemplateRoleOutput() ProjectTemplateRoleOutput {
	return o
}

func (o ProjectTemplateRoleOutput) ToProjectTemplateRoleOutputWithContext(ctx context.Context) ProjectTemplateRoleOutput {
	return o
}

// The name of the role
func (o ProjectTemplateRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTemplateRole) string { return v.Name }).(pulumi.StringOutput)
}

// The permissions assigned to the role. Refer to the documentation here https://infisical.com/docs/api-reference/endpoints/project-templates/create#body-roles-permissions for its usage.
func (o ProjectTemplateRoleOutput) Permissions() ProjectTemplateRolePermissionArrayOutput {
	return o.ApplyT(func(v ProjectTemplateRole) []ProjectTemplateRolePermission { return v.Permissions }).(ProjectTemplateRolePermissionArrayOutput)
}

// The slug of the role
func (o ProjectTemplateRoleOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTemplateRole) string { return v.Slug }).(pulumi.StringOutput)
}

type ProjectTemplateRoleArrayOutput struct{ *pulumi.OutputState }

func (ProjectTemplateRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplateRole)(nil)).Elem()
}

func (o ProjectTemplateRoleArrayOutput) ToProjectTemplateRoleArrayOutput() ProjectTemplateRoleArrayOutput {
	return o
}

func (o ProjectTemplateRoleArrayOutput) ToProjectTemplateRoleArrayOutputWithContext(ctx context.Context) ProjectTemplateRoleArrayOutput {
	return o
}

func (o ProjectTemplateRoleArrayOutput) Index(i pulumi.IntInput) ProjectTemplateRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTemplateRole {
		return vs[0].([]ProjectTemplateRole)[vs[1].(int)]
	}).(ProjectTemplateRoleOutput)
}

type ProjectTemplateRolePermission struct {
	// Describe what actions an entity can take.
	Actions []string `pulumi:"actions"`
	// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
	Conditions *string `pulumi:"conditions"`
	// Whether rule forbids. Set this to true if permission forbids.
	Inverted *bool `pulumi:"inverted"`
	// Describe the entity the permission pertains to.
	Subject string `pulumi:"subject"`
}

// ProjectTemplateRolePermissionInput is an input type that accepts ProjectTemplateRolePermissionArgs and ProjectTemplateRolePermissionOutput values.
// You can construct a concrete instance of `ProjectTemplateRolePermissionInput` via:
//
//	ProjectTemplateRolePermissionArgs{...}
type ProjectTemplateRolePermissionInput interface {
	pulumi.Input

	ToProjectTemplateRolePermissionOutput() ProjectTemplateRolePermissionOutput
	ToProjectTemplateRolePermissionOutputWithContext(context.Context) ProjectTemplateRolePermissionOutput
}

type ProjectTemplateRolePermissionArgs struct {
	// Describe what actions an entity can take.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
	Conditions pulumi.StringPtrInput `pulumi:"conditions"`
	// Whether rule forbids. Set this to true if permission forbids.
	Inverted pulumi.BoolPtrInput `pulumi:"inverted"`
	// Describe the entity the permission pertains to.
	Subject pulumi.StringInput `pulumi:"subject"`
}

func (ProjectTemplateRolePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplateRolePermission)(nil)).Elem()
}

func (i ProjectTemplateRolePermissionArgs) ToProjectTemplateRolePermissionOutput() ProjectTemplateRolePermissionOutput {
	return i.ToProjectTemplateRolePermissionOutputWithContext(context.Background())
}

func (i ProjectTemplateRolePermissionArgs) ToProjectTemplateRolePermissionOutputWithContext(ctx context.Context) ProjectTemplateRolePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateRolePermissionOutput)
}

// ProjectTemplateRolePermissionArrayInput is an input type that accepts ProjectTemplateRolePermissionArray and ProjectTemplateRolePermissionArrayOutput values.
// You can construct a concrete instance of `ProjectTemplateRolePermissionArrayInput` via:
//
//	ProjectTemplateRolePermissionArray{ ProjectTemplateRolePermissionArgs{...} }
type ProjectTemplateRolePermissionArrayInput interface {
	pulumi.Input

	ToProjectTemplateRolePermissionArrayOutput() ProjectTemplateRolePermissionArrayOutput
	ToProjectTemplateRolePermissionArrayOutputWithContext(context.Context) ProjectTemplateRolePermissionArrayOutput
}

type ProjectTemplateRolePermissionArray []ProjectTemplateRolePermissionInput

func (ProjectTemplateRolePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplateRolePermission)(nil)).Elem()
}

func (i ProjectTemplateRolePermissionArray) ToProjectTemplateRolePermissionArrayOutput() ProjectTemplateRolePermissionArrayOutput {
	return i.ToProjectTemplateRolePermissionArrayOutputWithContext(context.Background())
}

func (i ProjectTemplateRolePermissionArray) ToProjectTemplateRolePermissionArrayOutputWithContext(ctx context.Context) ProjectTemplateRolePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTemplateRolePermissionArrayOutput)
}

type ProjectTemplateRolePermissionOutput struct{ *pulumi.OutputState }

func (ProjectTemplateRolePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTemplateRolePermission)(nil)).Elem()
}

func (o ProjectTemplateRolePermissionOutput) ToProjectTemplateRolePermissionOutput() ProjectTemplateRolePermissionOutput {
	return o
}

func (o ProjectTemplateRolePermissionOutput) ToProjectTemplateRolePermissionOutputWithContext(ctx context.Context) ProjectTemplateRolePermissionOutput {
	return o
}

// Describe what actions an entity can take.
func (o ProjectTemplateRolePermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectTemplateRolePermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// When specified, only matching conditions will be allowed to access given resource. Refer to the documentation in https://infisical.com/docs/internals/permissions#conditions for the complete list of supported properties and operators.
func (o ProjectTemplateRolePermissionOutput) Conditions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTemplateRolePermission) *string { return v.Conditions }).(pulumi.StringPtrOutput)
}

// Whether rule forbids. Set this to true if permission forbids.
func (o ProjectTemplateRolePermissionOutput) Inverted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectTemplateRolePermission) *bool { return v.Inverted }).(pulumi.BoolPtrOutput)
}

// Describe the entity the permission pertains to.
func (o ProjectTemplateRolePermissionOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectTemplateRolePermission) string { return v.Subject }).(pulumi.StringOutput)
}

type ProjectTemplateRolePermissionArrayOutput struct{ *pulumi.OutputState }

func (ProjectTemplateRolePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTemplateRolePermission)(nil)).Elem()
}

func (o ProjectTemplateRolePermissionArrayOutput) ToProjectTemplateRolePermissionArrayOutput() ProjectTemplateRolePermissionArrayOutput {
	return o
}

func (o ProjectTemplateRolePermissionArrayOutput) ToProjectTemplateRolePermissionArrayOutputWithContext(ctx context.Context) ProjectTemplateRolePermissionArrayOutput {
	return o
}

func (o ProjectTemplateRolePermissionArrayOutput) Index(i pulumi.IntInput) ProjectTemplateRolePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTemplateRolePermission {
		return vs[0].([]ProjectTemplateRolePermission)[vs[1].(int)]
	}).(ProjectTemplateRolePermissionOutput)
}

type ProjectUserRole struct {
	// The id of the custom role slug
	CustomRoleId *string `pulumi:"customRoleId"`
	// The ID of the project user role.
	Id *string `pulumi:"id"`
	// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
	IsTemporary *bool `pulumi:"isTemporary"`
	// The slug of the role
	RoleSlug string `pulumi:"roleSlug"`
	// ISO time for which temporary access will end. Computed based on temporaryRange and temporary_access_start_time
	TemporaryAccessEndTime *string `pulumi:"temporaryAccessEndTime"`
	// ISO time for which temporary access should begin. The current time is used by default.
	TemporaryAccessStartTime *string `pulumi:"temporaryAccessStartTime"`
	// Type of temporary access given. Types: relative. Default: relative
	TemporaryMode *string `pulumi:"temporaryMode"`
	// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
	TemporaryRange *string `pulumi:"temporaryRange"`
}

// ProjectUserRoleInput is an input type that accepts ProjectUserRoleArgs and ProjectUserRoleOutput values.
// You can construct a concrete instance of `ProjectUserRoleInput` via:
//
//	ProjectUserRoleArgs{...}
type ProjectUserRoleInput interface {
	pulumi.Input

	ToProjectUserRoleOutput() ProjectUserRoleOutput
	ToProjectUserRoleOutputWithContext(context.Context) ProjectUserRoleOutput
}

type ProjectUserRoleArgs struct {
	// The id of the custom role slug
	CustomRoleId pulumi.StringPtrInput `pulumi:"customRoleId"`
	// The ID of the project user role.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
	IsTemporary pulumi.BoolPtrInput `pulumi:"isTemporary"`
	// The slug of the role
	RoleSlug pulumi.StringInput `pulumi:"roleSlug"`
	// ISO time for which temporary access will end. Computed based on temporaryRange and temporary_access_start_time
	TemporaryAccessEndTime pulumi.StringPtrInput `pulumi:"temporaryAccessEndTime"`
	// ISO time for which temporary access should begin. The current time is used by default.
	TemporaryAccessStartTime pulumi.StringPtrInput `pulumi:"temporaryAccessStartTime"`
	// Type of temporary access given. Types: relative. Default: relative
	TemporaryMode pulumi.StringPtrInput `pulumi:"temporaryMode"`
	// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
	TemporaryRange pulumi.StringPtrInput `pulumi:"temporaryRange"`
}

func (ProjectUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserRole)(nil)).Elem()
}

func (i ProjectUserRoleArgs) ToProjectUserRoleOutput() ProjectUserRoleOutput {
	return i.ToProjectUserRoleOutputWithContext(context.Background())
}

func (i ProjectUserRoleArgs) ToProjectUserRoleOutputWithContext(ctx context.Context) ProjectUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserRoleOutput)
}

// ProjectUserRoleArrayInput is an input type that accepts ProjectUserRoleArray and ProjectUserRoleArrayOutput values.
// You can construct a concrete instance of `ProjectUserRoleArrayInput` via:
//
//	ProjectUserRoleArray{ ProjectUserRoleArgs{...} }
type ProjectUserRoleArrayInput interface {
	pulumi.Input

	ToProjectUserRoleArrayOutput() ProjectUserRoleArrayOutput
	ToProjectUserRoleArrayOutputWithContext(context.Context) ProjectUserRoleArrayOutput
}

type ProjectUserRoleArray []ProjectUserRoleInput

func (ProjectUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserRole)(nil)).Elem()
}

func (i ProjectUserRoleArray) ToProjectUserRoleArrayOutput() ProjectUserRoleArrayOutput {
	return i.ToProjectUserRoleArrayOutputWithContext(context.Background())
}

func (i ProjectUserRoleArray) ToProjectUserRoleArrayOutputWithContext(ctx context.Context) ProjectUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserRoleArrayOutput)
}

type ProjectUserRoleOutput struct{ *pulumi.OutputState }

func (ProjectUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserRole)(nil)).Elem()
}

func (o ProjectUserRoleOutput) ToProjectUserRoleOutput() ProjectUserRoleOutput {
	return o
}

func (o ProjectUserRoleOutput) ToProjectUserRoleOutputWithContext(ctx context.Context) ProjectUserRoleOutput {
	return o
}

// The id of the custom role slug
func (o ProjectUserRoleOutput) CustomRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserRole) *string { return v.CustomRoleId }).(pulumi.StringPtrOutput)
}

// The ID of the project user role.
func (o ProjectUserRoleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserRole) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Flag to indicate the assigned role is temporary or not. When isTemporary is true fields temporary_mode, temporaryRange and temporaryAccessStartTime is required.
func (o ProjectUserRoleOutput) IsTemporary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectUserRole) *bool { return v.IsTemporary }).(pulumi.BoolPtrOutput)
}

// The slug of the role
func (o ProjectUserRoleOutput) RoleSlug() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectUserRole) string { return v.RoleSlug }).(pulumi.StringOutput)
}

// ISO time for which temporary access will end. Computed based on temporaryRange and temporary_access_start_time
func (o ProjectUserRoleOutput) TemporaryAccessEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserRole) *string { return v.TemporaryAccessEndTime }).(pulumi.StringPtrOutput)
}

// ISO time for which temporary access should begin. The current time is used by default.
func (o ProjectUserRoleOutput) TemporaryAccessStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserRole) *string { return v.TemporaryAccessStartTime }).(pulumi.StringPtrOutput)
}

// Type of temporary access given. Types: relative. Default: relative
func (o ProjectUserRoleOutput) TemporaryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserRole) *string { return v.TemporaryMode }).(pulumi.StringPtrOutput)
}

// TTL for the temporary time. Eg: 1m, 1h, 1d. Default: 1h
func (o ProjectUserRoleOutput) TemporaryRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserRole) *string { return v.TemporaryRange }).(pulumi.StringPtrOutput)
}

type ProjectUserRoleArrayOutput struct{ *pulumi.OutputState }

func (ProjectUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectUserRole)(nil)).Elem()
}

func (o ProjectUserRoleArrayOutput) ToProjectUserRoleArrayOutput() ProjectUserRoleArrayOutput {
	return o
}

func (o ProjectUserRoleArrayOutput) ToProjectUserRoleArrayOutputWithContext(ctx context.Context) ProjectUserRoleArrayOutput {
	return o
}

func (o ProjectUserRoleArrayOutput) Index(i pulumi.IntInput) ProjectUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectUserRole {
		return vs[0].([]ProjectUserRole)[vs[1].(int)]
	}).(ProjectUserRoleOutput)
}

type ProjectUserUser struct {
	// The email of the user
	Email *string `pulumi:"email"`
	// The first name of the user
	FirstName *string `pulumi:"firstName"`
	// The id of the user
	Id *string `pulumi:"id"`
	// The last name of the user
	LastName *string `pulumi:"lastName"`
}

// ProjectUserUserInput is an input type that accepts ProjectUserUserArgs and ProjectUserUserOutput values.
// You can construct a concrete instance of `ProjectUserUserInput` via:
//
//	ProjectUserUserArgs{...}
type ProjectUserUserInput interface {
	pulumi.Input

	ToProjectUserUserOutput() ProjectUserUserOutput
	ToProjectUserUserOutputWithContext(context.Context) ProjectUserUserOutput
}

type ProjectUserUserArgs struct {
	// The email of the user
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The first name of the user
	FirstName pulumi.StringPtrInput `pulumi:"firstName"`
	// The id of the user
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The last name of the user
	LastName pulumi.StringPtrInput `pulumi:"lastName"`
}

func (ProjectUserUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserUser)(nil)).Elem()
}

func (i ProjectUserUserArgs) ToProjectUserUserOutput() ProjectUserUserOutput {
	return i.ToProjectUserUserOutputWithContext(context.Background())
}

func (i ProjectUserUserArgs) ToProjectUserUserOutputWithContext(ctx context.Context) ProjectUserUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserUserOutput)
}

func (i ProjectUserUserArgs) ToProjectUserUserPtrOutput() ProjectUserUserPtrOutput {
	return i.ToProjectUserUserPtrOutputWithContext(context.Background())
}

func (i ProjectUserUserArgs) ToProjectUserUserPtrOutputWithContext(ctx context.Context) ProjectUserUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserUserOutput).ToProjectUserUserPtrOutputWithContext(ctx)
}

// ProjectUserUserPtrInput is an input type that accepts ProjectUserUserArgs, ProjectUserUserPtr and ProjectUserUserPtrOutput values.
// You can construct a concrete instance of `ProjectUserUserPtrInput` via:
//
//	        ProjectUserUserArgs{...}
//
//	or:
//
//	        nil
type ProjectUserUserPtrInput interface {
	pulumi.Input

	ToProjectUserUserPtrOutput() ProjectUserUserPtrOutput
	ToProjectUserUserPtrOutputWithContext(context.Context) ProjectUserUserPtrOutput
}

type projectUserUserPtrType ProjectUserUserArgs

func ProjectUserUserPtr(v *ProjectUserUserArgs) ProjectUserUserPtrInput {
	return (*projectUserUserPtrType)(v)
}

func (*projectUserUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserUser)(nil)).Elem()
}

func (i *projectUserUserPtrType) ToProjectUserUserPtrOutput() ProjectUserUserPtrOutput {
	return i.ToProjectUserUserPtrOutputWithContext(context.Background())
}

func (i *projectUserUserPtrType) ToProjectUserUserPtrOutputWithContext(ctx context.Context) ProjectUserUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectUserUserPtrOutput)
}

type ProjectUserUserOutput struct{ *pulumi.OutputState }

func (ProjectUserUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectUserUser)(nil)).Elem()
}

func (o ProjectUserUserOutput) ToProjectUserUserOutput() ProjectUserUserOutput {
	return o
}

func (o ProjectUserUserOutput) ToProjectUserUserOutputWithContext(ctx context.Context) ProjectUserUserOutput {
	return o
}

func (o ProjectUserUserOutput) ToProjectUserUserPtrOutput() ProjectUserUserPtrOutput {
	return o.ToProjectUserUserPtrOutputWithContext(context.Background())
}

func (o ProjectUserUserOutput) ToProjectUserUserPtrOutputWithContext(ctx context.Context) ProjectUserUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectUserUser) *ProjectUserUser {
		return &v
	}).(ProjectUserUserPtrOutput)
}

// The email of the user
func (o ProjectUserUserOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserUser) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The first name of the user
func (o ProjectUserUserOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserUser) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

// The id of the user
func (o ProjectUserUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The last name of the user
func (o ProjectUserUserOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectUserUser) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

type ProjectUserUserPtrOutput struct{ *pulumi.OutputState }

func (ProjectUserUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectUserUser)(nil)).Elem()
}

func (o ProjectUserUserPtrOutput) ToProjectUserUserPtrOutput() ProjectUserUserPtrOutput {
	return o
}

func (o ProjectUserUserPtrOutput) ToProjectUserUserPtrOutputWithContext(ctx context.Context) ProjectUserUserPtrOutput {
	return o
}

func (o ProjectUserUserPtrOutput) Elem() ProjectUserUserOutput {
	return o.ApplyT(func(v *ProjectUserUser) ProjectUserUser {
		if v != nil {
			return *v
		}
		var ret ProjectUserUser
		return ret
	}).(ProjectUserUserOutput)
}

// The email of the user
func (o ProjectUserUserPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserUser) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The first name of the user
func (o ProjectUserUserPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserUser) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

// The id of the user
func (o ProjectUserUserPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserUser) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The last name of the user
func (o ProjectUserUserPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectUserUser) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

type ProviderAuth struct {
	// The configuration values for AWS IAM Auth
	AwsIam *ProviderAuthAwsIam `pulumi:"awsIam"`
	// The configuration values for Kubernetes Auth
	Kubernetes *ProviderAuthKubernetes `pulumi:"kubernetes"`
	// The configuration values for OIDC Auth
	Oidc *ProviderAuthOidc `pulumi:"oidc"`
	// The authentication token for Machine Identity Token Auth. This attribute can also be set using the `INFISICAL_TOKEN` environment variable
	Token *string `pulumi:"token"`
	// The configuration values for Universal Auth
	Universal *ProviderAuthUniversal `pulumi:"universal"`
}

// ProviderAuthInput is an input type that accepts ProviderAuthArgs and ProviderAuthOutput values.
// You can construct a concrete instance of `ProviderAuthInput` via:
//
//	ProviderAuthArgs{...}
type ProviderAuthInput interface {
	pulumi.Input

	ToProviderAuthOutput() ProviderAuthOutput
	ToProviderAuthOutputWithContext(context.Context) ProviderAuthOutput
}

type ProviderAuthArgs struct {
	// The configuration values for AWS IAM Auth
	AwsIam ProviderAuthAwsIamPtrInput `pulumi:"awsIam"`
	// The configuration values for Kubernetes Auth
	Kubernetes ProviderAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// The configuration values for OIDC Auth
	Oidc ProviderAuthOidcPtrInput `pulumi:"oidc"`
	// The authentication token for Machine Identity Token Auth. This attribute can also be set using the `INFISICAL_TOKEN` environment variable
	Token pulumi.StringPtrInput `pulumi:"token"`
	// The configuration values for Universal Auth
	Universal ProviderAuthUniversalPtrInput `pulumi:"universal"`
}

func (ProviderAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuth)(nil)).Elem()
}

func (i ProviderAuthArgs) ToProviderAuthOutput() ProviderAuthOutput {
	return i.ToProviderAuthOutputWithContext(context.Background())
}

func (i ProviderAuthArgs) ToProviderAuthOutputWithContext(ctx context.Context) ProviderAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthOutput)
}

func (i ProviderAuthArgs) ToProviderAuthPtrOutput() ProviderAuthPtrOutput {
	return i.ToProviderAuthPtrOutputWithContext(context.Background())
}

func (i ProviderAuthArgs) ToProviderAuthPtrOutputWithContext(ctx context.Context) ProviderAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthOutput).ToProviderAuthPtrOutputWithContext(ctx)
}

// ProviderAuthPtrInput is an input type that accepts ProviderAuthArgs, ProviderAuthPtr and ProviderAuthPtrOutput values.
// You can construct a concrete instance of `ProviderAuthPtrInput` via:
//
//	        ProviderAuthArgs{...}
//
//	or:
//
//	        nil
type ProviderAuthPtrInput interface {
	pulumi.Input

	ToProviderAuthPtrOutput() ProviderAuthPtrOutput
	ToProviderAuthPtrOutputWithContext(context.Context) ProviderAuthPtrOutput
}

type providerAuthPtrType ProviderAuthArgs

func ProviderAuthPtr(v *ProviderAuthArgs) ProviderAuthPtrInput {
	return (*providerAuthPtrType)(v)
}

func (*providerAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuth)(nil)).Elem()
}

func (i *providerAuthPtrType) ToProviderAuthPtrOutput() ProviderAuthPtrOutput {
	return i.ToProviderAuthPtrOutputWithContext(context.Background())
}

func (i *providerAuthPtrType) ToProviderAuthPtrOutputWithContext(ctx context.Context) ProviderAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthPtrOutput)
}

type ProviderAuthOutput struct{ *pulumi.OutputState }

func (ProviderAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuth)(nil)).Elem()
}

func (o ProviderAuthOutput) ToProviderAuthOutput() ProviderAuthOutput {
	return o
}

func (o ProviderAuthOutput) ToProviderAuthOutputWithContext(ctx context.Context) ProviderAuthOutput {
	return o
}

func (o ProviderAuthOutput) ToProviderAuthPtrOutput() ProviderAuthPtrOutput {
	return o.ToProviderAuthPtrOutputWithContext(context.Background())
}

func (o ProviderAuthOutput) ToProviderAuthPtrOutputWithContext(ctx context.Context) ProviderAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAuth) *ProviderAuth {
		return &v
	}).(ProviderAuthPtrOutput)
}

// The configuration values for AWS IAM Auth
func (o ProviderAuthOutput) AwsIam() ProviderAuthAwsIamPtrOutput {
	return o.ApplyT(func(v ProviderAuth) *ProviderAuthAwsIam { return v.AwsIam }).(ProviderAuthAwsIamPtrOutput)
}

// The configuration values for Kubernetes Auth
func (o ProviderAuthOutput) Kubernetes() ProviderAuthKubernetesPtrOutput {
	return o.ApplyT(func(v ProviderAuth) *ProviderAuthKubernetes { return v.Kubernetes }).(ProviderAuthKubernetesPtrOutput)
}

// The configuration values for OIDC Auth
func (o ProviderAuthOutput) Oidc() ProviderAuthOidcPtrOutput {
	return o.ApplyT(func(v ProviderAuth) *ProviderAuthOidc { return v.Oidc }).(ProviderAuthOidcPtrOutput)
}

// The authentication token for Machine Identity Token Auth. This attribute can also be set using the `INFISICAL_TOKEN` environment variable
func (o ProviderAuthOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuth) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// The configuration values for Universal Auth
func (o ProviderAuthOutput) Universal() ProviderAuthUniversalPtrOutput {
	return o.ApplyT(func(v ProviderAuth) *ProviderAuthUniversal { return v.Universal }).(ProviderAuthUniversalPtrOutput)
}

type ProviderAuthPtrOutput struct{ *pulumi.OutputState }

func (ProviderAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuth)(nil)).Elem()
}

func (o ProviderAuthPtrOutput) ToProviderAuthPtrOutput() ProviderAuthPtrOutput {
	return o
}

func (o ProviderAuthPtrOutput) ToProviderAuthPtrOutputWithContext(ctx context.Context) ProviderAuthPtrOutput {
	return o
}

func (o ProviderAuthPtrOutput) Elem() ProviderAuthOutput {
	return o.ApplyT(func(v *ProviderAuth) ProviderAuth {
		if v != nil {
			return *v
		}
		var ret ProviderAuth
		return ret
	}).(ProviderAuthOutput)
}

// The configuration values for AWS IAM Auth
func (o ProviderAuthPtrOutput) AwsIam() ProviderAuthAwsIamPtrOutput {
	return o.ApplyT(func(v *ProviderAuth) *ProviderAuthAwsIam {
		if v == nil {
			return nil
		}
		return v.AwsIam
	}).(ProviderAuthAwsIamPtrOutput)
}

// The configuration values for Kubernetes Auth
func (o ProviderAuthPtrOutput) Kubernetes() ProviderAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *ProviderAuth) *ProviderAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(ProviderAuthKubernetesPtrOutput)
}

// The configuration values for OIDC Auth
func (o ProviderAuthPtrOutput) Oidc() ProviderAuthOidcPtrOutput {
	return o.ApplyT(func(v *ProviderAuth) *ProviderAuthOidc {
		if v == nil {
			return nil
		}
		return v.Oidc
	}).(ProviderAuthOidcPtrOutput)
}

// The authentication token for Machine Identity Token Auth. This attribute can also be set using the `INFISICAL_TOKEN` environment variable
func (o ProviderAuthPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuth) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

// The configuration values for Universal Auth
func (o ProviderAuthPtrOutput) Universal() ProviderAuthUniversalPtrOutput {
	return o.ApplyT(func(v *ProviderAuth) *ProviderAuthUniversal {
		if v == nil {
			return nil
		}
		return v.Universal
	}).(ProviderAuthUniversalPtrOutput)
}

type ProviderAuthAwsIam struct {
	// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
	IdentityId *string `pulumi:"identityId"`
}

// ProviderAuthAwsIamInput is an input type that accepts ProviderAuthAwsIamArgs and ProviderAuthAwsIamOutput values.
// You can construct a concrete instance of `ProviderAuthAwsIamInput` via:
//
//	ProviderAuthAwsIamArgs{...}
type ProviderAuthAwsIamInput interface {
	pulumi.Input

	ToProviderAuthAwsIamOutput() ProviderAuthAwsIamOutput
	ToProviderAuthAwsIamOutputWithContext(context.Context) ProviderAuthAwsIamOutput
}

type ProviderAuthAwsIamArgs struct {
	// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
}

func (ProviderAuthAwsIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthAwsIam)(nil)).Elem()
}

func (i ProviderAuthAwsIamArgs) ToProviderAuthAwsIamOutput() ProviderAuthAwsIamOutput {
	return i.ToProviderAuthAwsIamOutputWithContext(context.Background())
}

func (i ProviderAuthAwsIamArgs) ToProviderAuthAwsIamOutputWithContext(ctx context.Context) ProviderAuthAwsIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthAwsIamOutput)
}

func (i ProviderAuthAwsIamArgs) ToProviderAuthAwsIamPtrOutput() ProviderAuthAwsIamPtrOutput {
	return i.ToProviderAuthAwsIamPtrOutputWithContext(context.Background())
}

func (i ProviderAuthAwsIamArgs) ToProviderAuthAwsIamPtrOutputWithContext(ctx context.Context) ProviderAuthAwsIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthAwsIamOutput).ToProviderAuthAwsIamPtrOutputWithContext(ctx)
}

// ProviderAuthAwsIamPtrInput is an input type that accepts ProviderAuthAwsIamArgs, ProviderAuthAwsIamPtr and ProviderAuthAwsIamPtrOutput values.
// You can construct a concrete instance of `ProviderAuthAwsIamPtrInput` via:
//
//	        ProviderAuthAwsIamArgs{...}
//
//	or:
//
//	        nil
type ProviderAuthAwsIamPtrInput interface {
	pulumi.Input

	ToProviderAuthAwsIamPtrOutput() ProviderAuthAwsIamPtrOutput
	ToProviderAuthAwsIamPtrOutputWithContext(context.Context) ProviderAuthAwsIamPtrOutput
}

type providerAuthAwsIamPtrType ProviderAuthAwsIamArgs

func ProviderAuthAwsIamPtr(v *ProviderAuthAwsIamArgs) ProviderAuthAwsIamPtrInput {
	return (*providerAuthAwsIamPtrType)(v)
}

func (*providerAuthAwsIamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthAwsIam)(nil)).Elem()
}

func (i *providerAuthAwsIamPtrType) ToProviderAuthAwsIamPtrOutput() ProviderAuthAwsIamPtrOutput {
	return i.ToProviderAuthAwsIamPtrOutputWithContext(context.Background())
}

func (i *providerAuthAwsIamPtrType) ToProviderAuthAwsIamPtrOutputWithContext(ctx context.Context) ProviderAuthAwsIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthAwsIamPtrOutput)
}

type ProviderAuthAwsIamOutput struct{ *pulumi.OutputState }

func (ProviderAuthAwsIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthAwsIam)(nil)).Elem()
}

func (o ProviderAuthAwsIamOutput) ToProviderAuthAwsIamOutput() ProviderAuthAwsIamOutput {
	return o
}

func (o ProviderAuthAwsIamOutput) ToProviderAuthAwsIamOutputWithContext(ctx context.Context) ProviderAuthAwsIamOutput {
	return o
}

func (o ProviderAuthAwsIamOutput) ToProviderAuthAwsIamPtrOutput() ProviderAuthAwsIamPtrOutput {
	return o.ToProviderAuthAwsIamPtrOutputWithContext(context.Background())
}

func (o ProviderAuthAwsIamOutput) ToProviderAuthAwsIamPtrOutputWithContext(ctx context.Context) ProviderAuthAwsIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAuthAwsIam) *ProviderAuthAwsIam {
		return &v
	}).(ProviderAuthAwsIamPtrOutput)
}

// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
func (o ProviderAuthAwsIamOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthAwsIam) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

type ProviderAuthAwsIamPtrOutput struct{ *pulumi.OutputState }

func (ProviderAuthAwsIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthAwsIam)(nil)).Elem()
}

func (o ProviderAuthAwsIamPtrOutput) ToProviderAuthAwsIamPtrOutput() ProviderAuthAwsIamPtrOutput {
	return o
}

func (o ProviderAuthAwsIamPtrOutput) ToProviderAuthAwsIamPtrOutputWithContext(ctx context.Context) ProviderAuthAwsIamPtrOutput {
	return o
}

func (o ProviderAuthAwsIamPtrOutput) Elem() ProviderAuthAwsIamOutput {
	return o.ApplyT(func(v *ProviderAuthAwsIam) ProviderAuthAwsIam {
		if v != nil {
			return *v
		}
		var ret ProviderAuthAwsIam
		return ret
	}).(ProviderAuthAwsIamOutput)
}

// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
func (o ProviderAuthAwsIamPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthAwsIam) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

type ProviderAuthKubernetes struct {
	// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
	IdentityId *string `pulumi:"identityId"`
	// The service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN` environment variable
	ServiceAccountToken *string `pulumi:"serviceAccountToken"`
	// The path to the service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN_PATH` environment variable. Default is `/var/run/secrets/kubernetes.io/serviceaccount/token`.
	ServiceAccountTokenPath *string `pulumi:"serviceAccountTokenPath"`
}

// ProviderAuthKubernetesInput is an input type that accepts ProviderAuthKubernetesArgs and ProviderAuthKubernetesOutput values.
// You can construct a concrete instance of `ProviderAuthKubernetesInput` via:
//
//	ProviderAuthKubernetesArgs{...}
type ProviderAuthKubernetesInput interface {
	pulumi.Input

	ToProviderAuthKubernetesOutput() ProviderAuthKubernetesOutput
	ToProviderAuthKubernetesOutputWithContext(context.Context) ProviderAuthKubernetesOutput
}

type ProviderAuthKubernetesArgs struct {
	// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
	// The service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN` environment variable
	ServiceAccountToken pulumi.StringPtrInput `pulumi:"serviceAccountToken"`
	// The path to the service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN_PATH` environment variable. Default is `/var/run/secrets/kubernetes.io/serviceaccount/token`.
	ServiceAccountTokenPath pulumi.StringPtrInput `pulumi:"serviceAccountTokenPath"`
}

func (ProviderAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthKubernetes)(nil)).Elem()
}

func (i ProviderAuthKubernetesArgs) ToProviderAuthKubernetesOutput() ProviderAuthKubernetesOutput {
	return i.ToProviderAuthKubernetesOutputWithContext(context.Background())
}

func (i ProviderAuthKubernetesArgs) ToProviderAuthKubernetesOutputWithContext(ctx context.Context) ProviderAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthKubernetesOutput)
}

func (i ProviderAuthKubernetesArgs) ToProviderAuthKubernetesPtrOutput() ProviderAuthKubernetesPtrOutput {
	return i.ToProviderAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i ProviderAuthKubernetesArgs) ToProviderAuthKubernetesPtrOutputWithContext(ctx context.Context) ProviderAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthKubernetesOutput).ToProviderAuthKubernetesPtrOutputWithContext(ctx)
}

// ProviderAuthKubernetesPtrInput is an input type that accepts ProviderAuthKubernetesArgs, ProviderAuthKubernetesPtr and ProviderAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `ProviderAuthKubernetesPtrInput` via:
//
//	        ProviderAuthKubernetesArgs{...}
//
//	or:
//
//	        nil
type ProviderAuthKubernetesPtrInput interface {
	pulumi.Input

	ToProviderAuthKubernetesPtrOutput() ProviderAuthKubernetesPtrOutput
	ToProviderAuthKubernetesPtrOutputWithContext(context.Context) ProviderAuthKubernetesPtrOutput
}

type providerAuthKubernetesPtrType ProviderAuthKubernetesArgs

func ProviderAuthKubernetesPtr(v *ProviderAuthKubernetesArgs) ProviderAuthKubernetesPtrInput {
	return (*providerAuthKubernetesPtrType)(v)
}

func (*providerAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthKubernetes)(nil)).Elem()
}

func (i *providerAuthKubernetesPtrType) ToProviderAuthKubernetesPtrOutput() ProviderAuthKubernetesPtrOutput {
	return i.ToProviderAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *providerAuthKubernetesPtrType) ToProviderAuthKubernetesPtrOutputWithContext(ctx context.Context) ProviderAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthKubernetesPtrOutput)
}

type ProviderAuthKubernetesOutput struct{ *pulumi.OutputState }

func (ProviderAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthKubernetes)(nil)).Elem()
}

func (o ProviderAuthKubernetesOutput) ToProviderAuthKubernetesOutput() ProviderAuthKubernetesOutput {
	return o
}

func (o ProviderAuthKubernetesOutput) ToProviderAuthKubernetesOutputWithContext(ctx context.Context) ProviderAuthKubernetesOutput {
	return o
}

func (o ProviderAuthKubernetesOutput) ToProviderAuthKubernetesPtrOutput() ProviderAuthKubernetesPtrOutput {
	return o.ToProviderAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o ProviderAuthKubernetesOutput) ToProviderAuthKubernetesPtrOutputWithContext(ctx context.Context) ProviderAuthKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAuthKubernetes) *ProviderAuthKubernetes {
		return &v
	}).(ProviderAuthKubernetesPtrOutput)
}

// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
func (o ProviderAuthKubernetesOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthKubernetes) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// The service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN` environment variable
func (o ProviderAuthKubernetesOutput) ServiceAccountToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthKubernetes) *string { return v.ServiceAccountToken }).(pulumi.StringPtrOutput)
}

// The path to the service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN_PATH` environment variable. Default is `/var/run/secrets/kubernetes.io/serviceaccount/token`.
func (o ProviderAuthKubernetesOutput) ServiceAccountTokenPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthKubernetes) *string { return v.ServiceAccountTokenPath }).(pulumi.StringPtrOutput)
}

type ProviderAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ProviderAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthKubernetes)(nil)).Elem()
}

func (o ProviderAuthKubernetesPtrOutput) ToProviderAuthKubernetesPtrOutput() ProviderAuthKubernetesPtrOutput {
	return o
}

func (o ProviderAuthKubernetesPtrOutput) ToProviderAuthKubernetesPtrOutputWithContext(ctx context.Context) ProviderAuthKubernetesPtrOutput {
	return o
}

func (o ProviderAuthKubernetesPtrOutput) Elem() ProviderAuthKubernetesOutput {
	return o.ApplyT(func(v *ProviderAuthKubernetes) ProviderAuthKubernetes {
		if v != nil {
			return *v
		}
		var ret ProviderAuthKubernetes
		return ret
	}).(ProviderAuthKubernetesOutput)
}

// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
func (o ProviderAuthKubernetesPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

// The service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN` environment variable
func (o ProviderAuthKubernetesPtrOutput) ServiceAccountToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountToken
	}).(pulumi.StringPtrOutput)
}

// The path to the service account token. This attribute can also be set using the `INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN_PATH` environment variable. Default is `/var/run/secrets/kubernetes.io/serviceaccount/token`.
func (o ProviderAuthKubernetesPtrOutput) ServiceAccountTokenPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountTokenPath
	}).(pulumi.StringPtrOutput)
}

type ProviderAuthOidc struct {
	// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
	IdentityId *string `pulumi:"identityId"`
	// The environment variable name for the OIDC JWT token. This attribute can also be set using the `INFISICAL_OIDC_AUTH_TOKEN_KEY_NAME` environment variable. Default is `INFISICAL_AUTH_JWT`.
	TokenEnvironmentVariableName *string `pulumi:"tokenEnvironmentVariableName"`
}

// ProviderAuthOidcInput is an input type that accepts ProviderAuthOidcArgs and ProviderAuthOidcOutput values.
// You can construct a concrete instance of `ProviderAuthOidcInput` via:
//
//	ProviderAuthOidcArgs{...}
type ProviderAuthOidcInput interface {
	pulumi.Input

	ToProviderAuthOidcOutput() ProviderAuthOidcOutput
	ToProviderAuthOidcOutputWithContext(context.Context) ProviderAuthOidcOutput
}

type ProviderAuthOidcArgs struct {
	// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
	// The environment variable name for the OIDC JWT token. This attribute can also be set using the `INFISICAL_OIDC_AUTH_TOKEN_KEY_NAME` environment variable. Default is `INFISICAL_AUTH_JWT`.
	TokenEnvironmentVariableName pulumi.StringPtrInput `pulumi:"tokenEnvironmentVariableName"`
}

func (ProviderAuthOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthOidc)(nil)).Elem()
}

func (i ProviderAuthOidcArgs) ToProviderAuthOidcOutput() ProviderAuthOidcOutput {
	return i.ToProviderAuthOidcOutputWithContext(context.Background())
}

func (i ProviderAuthOidcArgs) ToProviderAuthOidcOutputWithContext(ctx context.Context) ProviderAuthOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthOidcOutput)
}

func (i ProviderAuthOidcArgs) ToProviderAuthOidcPtrOutput() ProviderAuthOidcPtrOutput {
	return i.ToProviderAuthOidcPtrOutputWithContext(context.Background())
}

func (i ProviderAuthOidcArgs) ToProviderAuthOidcPtrOutputWithContext(ctx context.Context) ProviderAuthOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthOidcOutput).ToProviderAuthOidcPtrOutputWithContext(ctx)
}

// ProviderAuthOidcPtrInput is an input type that accepts ProviderAuthOidcArgs, ProviderAuthOidcPtr and ProviderAuthOidcPtrOutput values.
// You can construct a concrete instance of `ProviderAuthOidcPtrInput` via:
//
//	        ProviderAuthOidcArgs{...}
//
//	or:
//
//	        nil
type ProviderAuthOidcPtrInput interface {
	pulumi.Input

	ToProviderAuthOidcPtrOutput() ProviderAuthOidcPtrOutput
	ToProviderAuthOidcPtrOutputWithContext(context.Context) ProviderAuthOidcPtrOutput
}

type providerAuthOidcPtrType ProviderAuthOidcArgs

func ProviderAuthOidcPtr(v *ProviderAuthOidcArgs) ProviderAuthOidcPtrInput {
	return (*providerAuthOidcPtrType)(v)
}

func (*providerAuthOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthOidc)(nil)).Elem()
}

func (i *providerAuthOidcPtrType) ToProviderAuthOidcPtrOutput() ProviderAuthOidcPtrOutput {
	return i.ToProviderAuthOidcPtrOutputWithContext(context.Background())
}

func (i *providerAuthOidcPtrType) ToProviderAuthOidcPtrOutputWithContext(ctx context.Context) ProviderAuthOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthOidcPtrOutput)
}

type ProviderAuthOidcOutput struct{ *pulumi.OutputState }

func (ProviderAuthOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthOidc)(nil)).Elem()
}

func (o ProviderAuthOidcOutput) ToProviderAuthOidcOutput() ProviderAuthOidcOutput {
	return o
}

func (o ProviderAuthOidcOutput) ToProviderAuthOidcOutputWithContext(ctx context.Context) ProviderAuthOidcOutput {
	return o
}

func (o ProviderAuthOidcOutput) ToProviderAuthOidcPtrOutput() ProviderAuthOidcPtrOutput {
	return o.ToProviderAuthOidcPtrOutputWithContext(context.Background())
}

func (o ProviderAuthOidcOutput) ToProviderAuthOidcPtrOutputWithContext(ctx context.Context) ProviderAuthOidcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAuthOidc) *ProviderAuthOidc {
		return &v
	}).(ProviderAuthOidcPtrOutput)
}

// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
func (o ProviderAuthOidcOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthOidc) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// The environment variable name for the OIDC JWT token. This attribute can also be set using the `INFISICAL_OIDC_AUTH_TOKEN_KEY_NAME` environment variable. Default is `INFISICAL_AUTH_JWT`.
func (o ProviderAuthOidcOutput) TokenEnvironmentVariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthOidc) *string { return v.TokenEnvironmentVariableName }).(pulumi.StringPtrOutput)
}

type ProviderAuthOidcPtrOutput struct{ *pulumi.OutputState }

func (ProviderAuthOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthOidc)(nil)).Elem()
}

func (o ProviderAuthOidcPtrOutput) ToProviderAuthOidcPtrOutput() ProviderAuthOidcPtrOutput {
	return o
}

func (o ProviderAuthOidcPtrOutput) ToProviderAuthOidcPtrOutputWithContext(ctx context.Context) ProviderAuthOidcPtrOutput {
	return o
}

func (o ProviderAuthOidcPtrOutput) Elem() ProviderAuthOidcOutput {
	return o.ApplyT(func(v *ProviderAuthOidc) ProviderAuthOidc {
		if v != nil {
			return *v
		}
		var ret ProviderAuthOidc
		return ret
	}).(ProviderAuthOidcOutput)
}

// Machine identity ID. This attribute can also be set using the `INFISICAL_MACHINE_IDENTITY_ID` environment variable
func (o ProviderAuthOidcPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthOidc) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

// The environment variable name for the OIDC JWT token. This attribute can also be set using the `INFISICAL_OIDC_AUTH_TOKEN_KEY_NAME` environment variable. Default is `INFISICAL_AUTH_JWT`.
func (o ProviderAuthOidcPtrOutput) TokenEnvironmentVariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthOidc) *string {
		if v == nil {
			return nil
		}
		return v.TokenEnvironmentVariableName
	}).(pulumi.StringPtrOutput)
}

type ProviderAuthUniversal struct {
	// Machine identity client ID. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_ID` environment variable
	ClientId *string `pulumi:"clientId"`
	// Machine identity client secret. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET` environment variable
	ClientSecret *string `pulumi:"clientSecret"`
}

// ProviderAuthUniversalInput is an input type that accepts ProviderAuthUniversalArgs and ProviderAuthUniversalOutput values.
// You can construct a concrete instance of `ProviderAuthUniversalInput` via:
//
//	ProviderAuthUniversalArgs{...}
type ProviderAuthUniversalInput interface {
	pulumi.Input

	ToProviderAuthUniversalOutput() ProviderAuthUniversalOutput
	ToProviderAuthUniversalOutputWithContext(context.Context) ProviderAuthUniversalOutput
}

type ProviderAuthUniversalArgs struct {
	// Machine identity client ID. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_ID` environment variable
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Machine identity client secret. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET` environment variable
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
}

func (ProviderAuthUniversalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthUniversal)(nil)).Elem()
}

func (i ProviderAuthUniversalArgs) ToProviderAuthUniversalOutput() ProviderAuthUniversalOutput {
	return i.ToProviderAuthUniversalOutputWithContext(context.Background())
}

func (i ProviderAuthUniversalArgs) ToProviderAuthUniversalOutputWithContext(ctx context.Context) ProviderAuthUniversalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthUniversalOutput)
}

func (i ProviderAuthUniversalArgs) ToProviderAuthUniversalPtrOutput() ProviderAuthUniversalPtrOutput {
	return i.ToProviderAuthUniversalPtrOutputWithContext(context.Background())
}

func (i ProviderAuthUniversalArgs) ToProviderAuthUniversalPtrOutputWithContext(ctx context.Context) ProviderAuthUniversalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthUniversalOutput).ToProviderAuthUniversalPtrOutputWithContext(ctx)
}

// ProviderAuthUniversalPtrInput is an input type that accepts ProviderAuthUniversalArgs, ProviderAuthUniversalPtr and ProviderAuthUniversalPtrOutput values.
// You can construct a concrete instance of `ProviderAuthUniversalPtrInput` via:
//
//	        ProviderAuthUniversalArgs{...}
//
//	or:
//
//	        nil
type ProviderAuthUniversalPtrInput interface {
	pulumi.Input

	ToProviderAuthUniversalPtrOutput() ProviderAuthUniversalPtrOutput
	ToProviderAuthUniversalPtrOutputWithContext(context.Context) ProviderAuthUniversalPtrOutput
}

type providerAuthUniversalPtrType ProviderAuthUniversalArgs

func ProviderAuthUniversalPtr(v *ProviderAuthUniversalArgs) ProviderAuthUniversalPtrInput {
	return (*providerAuthUniversalPtrType)(v)
}

func (*providerAuthUniversalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthUniversal)(nil)).Elem()
}

func (i *providerAuthUniversalPtrType) ToProviderAuthUniversalPtrOutput() ProviderAuthUniversalPtrOutput {
	return i.ToProviderAuthUniversalPtrOutputWithContext(context.Background())
}

func (i *providerAuthUniversalPtrType) ToProviderAuthUniversalPtrOutputWithContext(ctx context.Context) ProviderAuthUniversalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAuthUniversalPtrOutput)
}

type ProviderAuthUniversalOutput struct{ *pulumi.OutputState }

func (ProviderAuthUniversalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAuthUniversal)(nil)).Elem()
}

func (o ProviderAuthUniversalOutput) ToProviderAuthUniversalOutput() ProviderAuthUniversalOutput {
	return o
}

func (o ProviderAuthUniversalOutput) ToProviderAuthUniversalOutputWithContext(ctx context.Context) ProviderAuthUniversalOutput {
	return o
}

func (o ProviderAuthUniversalOutput) ToProviderAuthUniversalPtrOutput() ProviderAuthUniversalPtrOutput {
	return o.ToProviderAuthUniversalPtrOutputWithContext(context.Background())
}

func (o ProviderAuthUniversalOutput) ToProviderAuthUniversalPtrOutputWithContext(ctx context.Context) ProviderAuthUniversalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAuthUniversal) *ProviderAuthUniversal {
		return &v
	}).(ProviderAuthUniversalPtrOutput)
}

// Machine identity client ID. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_ID` environment variable
func (o ProviderAuthUniversalOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthUniversal) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Machine identity client secret. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET` environment variable
func (o ProviderAuthUniversalOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAuthUniversal) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

type ProviderAuthUniversalPtrOutput struct{ *pulumi.OutputState }

func (ProviderAuthUniversalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAuthUniversal)(nil)).Elem()
}

func (o ProviderAuthUniversalPtrOutput) ToProviderAuthUniversalPtrOutput() ProviderAuthUniversalPtrOutput {
	return o
}

func (o ProviderAuthUniversalPtrOutput) ToProviderAuthUniversalPtrOutputWithContext(ctx context.Context) ProviderAuthUniversalPtrOutput {
	return o
}

func (o ProviderAuthUniversalPtrOutput) Elem() ProviderAuthUniversalOutput {
	return o.ApplyT(func(v *ProviderAuthUniversal) ProviderAuthUniversal {
		if v != nil {
			return *v
		}
		var ret ProviderAuthUniversal
		return ret
	}).(ProviderAuthUniversalOutput)
}

// Machine identity client ID. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_ID` environment variable
func (o ProviderAuthUniversalPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthUniversal) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Machine identity client secret. This attribute can also be set using the `INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET` environment variable
func (o ProviderAuthUniversalPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAuthUniversal) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type SecretApprovalPolicyApprover struct {
	// The ID of the approver
	Id *string `pulumi:"id"`
	// The type of approver. Either group or user
	Type string `pulumi:"type"`
	// The username of the approver. By default, this is the email
	Username *string `pulumi:"username"`
}

// SecretApprovalPolicyApproverInput is an input type that accepts SecretApprovalPolicyApproverArgs and SecretApprovalPolicyApproverOutput values.
// You can construct a concrete instance of `SecretApprovalPolicyApproverInput` via:
//
//	SecretApprovalPolicyApproverArgs{...}
type SecretApprovalPolicyApproverInput interface {
	pulumi.Input

	ToSecretApprovalPolicyApproverOutput() SecretApprovalPolicyApproverOutput
	ToSecretApprovalPolicyApproverOutputWithContext(context.Context) SecretApprovalPolicyApproverOutput
}

type SecretApprovalPolicyApproverArgs struct {
	// The ID of the approver
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The type of approver. Either group or user
	Type pulumi.StringInput `pulumi:"type"`
	// The username of the approver. By default, this is the email
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecretApprovalPolicyApproverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretApprovalPolicyApprover)(nil)).Elem()
}

func (i SecretApprovalPolicyApproverArgs) ToSecretApprovalPolicyApproverOutput() SecretApprovalPolicyApproverOutput {
	return i.ToSecretApprovalPolicyApproverOutputWithContext(context.Background())
}

func (i SecretApprovalPolicyApproverArgs) ToSecretApprovalPolicyApproverOutputWithContext(ctx context.Context) SecretApprovalPolicyApproverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretApprovalPolicyApproverOutput)
}

// SecretApprovalPolicyApproverArrayInput is an input type that accepts SecretApprovalPolicyApproverArray and SecretApprovalPolicyApproverArrayOutput values.
// You can construct a concrete instance of `SecretApprovalPolicyApproverArrayInput` via:
//
//	SecretApprovalPolicyApproverArray{ SecretApprovalPolicyApproverArgs{...} }
type SecretApprovalPolicyApproverArrayInput interface {
	pulumi.Input

	ToSecretApprovalPolicyApproverArrayOutput() SecretApprovalPolicyApproverArrayOutput
	ToSecretApprovalPolicyApproverArrayOutputWithContext(context.Context) SecretApprovalPolicyApproverArrayOutput
}

type SecretApprovalPolicyApproverArray []SecretApprovalPolicyApproverInput

func (SecretApprovalPolicyApproverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretApprovalPolicyApprover)(nil)).Elem()
}

func (i SecretApprovalPolicyApproverArray) ToSecretApprovalPolicyApproverArrayOutput() SecretApprovalPolicyApproverArrayOutput {
	return i.ToSecretApprovalPolicyApproverArrayOutputWithContext(context.Background())
}

func (i SecretApprovalPolicyApproverArray) ToSecretApprovalPolicyApproverArrayOutputWithContext(ctx context.Context) SecretApprovalPolicyApproverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretApprovalPolicyApproverArrayOutput)
}

type SecretApprovalPolicyApproverOutput struct{ *pulumi.OutputState }

func (SecretApprovalPolicyApproverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretApprovalPolicyApprover)(nil)).Elem()
}

func (o SecretApprovalPolicyApproverOutput) ToSecretApprovalPolicyApproverOutput() SecretApprovalPolicyApproverOutput {
	return o
}

func (o SecretApprovalPolicyApproverOutput) ToSecretApprovalPolicyApproverOutputWithContext(ctx context.Context) SecretApprovalPolicyApproverOutput {
	return o
}

// The ID of the approver
func (o SecretApprovalPolicyApproverOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretApprovalPolicyApprover) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The type of approver. Either group or user
func (o SecretApprovalPolicyApproverOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecretApprovalPolicyApprover) string { return v.Type }).(pulumi.StringOutput)
}

// The username of the approver. By default, this is the email
func (o SecretApprovalPolicyApproverOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretApprovalPolicyApprover) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecretApprovalPolicyApproverArrayOutput struct{ *pulumi.OutputState }

func (SecretApprovalPolicyApproverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretApprovalPolicyApprover)(nil)).Elem()
}

func (o SecretApprovalPolicyApproverArrayOutput) ToSecretApprovalPolicyApproverArrayOutput() SecretApprovalPolicyApproverArrayOutput {
	return o
}

func (o SecretApprovalPolicyApproverArrayOutput) ToSecretApprovalPolicyApproverArrayOutputWithContext(ctx context.Context) SecretApprovalPolicyApproverArrayOutput {
	return o
}

func (o SecretApprovalPolicyApproverArrayOutput) Index(i pulumi.IntInput) SecretApprovalPolicyApproverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretApprovalPolicyApprover {
		return vs[0].([]SecretApprovalPolicyApprover)[vs[1].(int)]
	}).(SecretApprovalPolicyApproverOutput)
}

type SecretRotationAwsIamUserSecretParameters struct {
	// The AWS region the client is present in.
	Region string `pulumi:"region"`
	// The name of the client to rotate credentials for.
	UserName string `pulumi:"userName"`
}

// SecretRotationAwsIamUserSecretParametersInput is an input type that accepts SecretRotationAwsIamUserSecretParametersArgs and SecretRotationAwsIamUserSecretParametersOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretParametersInput` via:
//
//	SecretRotationAwsIamUserSecretParametersArgs{...}
type SecretRotationAwsIamUserSecretParametersInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretParametersOutput() SecretRotationAwsIamUserSecretParametersOutput
	ToSecretRotationAwsIamUserSecretParametersOutputWithContext(context.Context) SecretRotationAwsIamUserSecretParametersOutput
}

type SecretRotationAwsIamUserSecretParametersArgs struct {
	// The AWS region the client is present in.
	Region pulumi.StringInput `pulumi:"region"`
	// The name of the client to rotate credentials for.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (SecretRotationAwsIamUserSecretParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretParameters)(nil)).Elem()
}

func (i SecretRotationAwsIamUserSecretParametersArgs) ToSecretRotationAwsIamUserSecretParametersOutput() SecretRotationAwsIamUserSecretParametersOutput {
	return i.ToSecretRotationAwsIamUserSecretParametersOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretParametersArgs) ToSecretRotationAwsIamUserSecretParametersOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretParametersOutput)
}

func (i SecretRotationAwsIamUserSecretParametersArgs) ToSecretRotationAwsIamUserSecretParametersPtrOutput() SecretRotationAwsIamUserSecretParametersPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretParametersArgs) ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretParametersOutput).ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(ctx)
}

// SecretRotationAwsIamUserSecretParametersPtrInput is an input type that accepts SecretRotationAwsIamUserSecretParametersArgs, SecretRotationAwsIamUserSecretParametersPtr and SecretRotationAwsIamUserSecretParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretParametersPtrInput` via:
//
//	        SecretRotationAwsIamUserSecretParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAwsIamUserSecretParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretParametersPtrOutput() SecretRotationAwsIamUserSecretParametersPtrOutput
	ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(context.Context) SecretRotationAwsIamUserSecretParametersPtrOutput
}

type secretRotationAwsIamUserSecretParametersPtrType SecretRotationAwsIamUserSecretParametersArgs

func SecretRotationAwsIamUserSecretParametersPtr(v *SecretRotationAwsIamUserSecretParametersArgs) SecretRotationAwsIamUserSecretParametersPtrInput {
	return (*secretRotationAwsIamUserSecretParametersPtrType)(v)
}

func (*secretRotationAwsIamUserSecretParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretParameters)(nil)).Elem()
}

func (i *secretRotationAwsIamUserSecretParametersPtrType) ToSecretRotationAwsIamUserSecretParametersPtrOutput() SecretRotationAwsIamUserSecretParametersPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationAwsIamUserSecretParametersPtrType) ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretParametersPtrOutput)
}

type SecretRotationAwsIamUserSecretParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretParameters)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretParametersOutput) ToSecretRotationAwsIamUserSecretParametersOutput() SecretRotationAwsIamUserSecretParametersOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretParametersOutput) ToSecretRotationAwsIamUserSecretParametersOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretParametersOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretParametersOutput) ToSecretRotationAwsIamUserSecretParametersPtrOutput() SecretRotationAwsIamUserSecretParametersPtrOutput {
	return o.ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationAwsIamUserSecretParametersOutput) ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAwsIamUserSecretParameters) *SecretRotationAwsIamUserSecretParameters {
		return &v
	}).(SecretRotationAwsIamUserSecretParametersPtrOutput)
}

// The AWS region the client is present in.
func (o SecretRotationAwsIamUserSecretParametersOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAwsIamUserSecretParameters) string { return v.Region }).(pulumi.StringOutput)
}

// The name of the client to rotate credentials for.
func (o SecretRotationAwsIamUserSecretParametersOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAwsIamUserSecretParameters) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretRotationAwsIamUserSecretParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretParameters)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretParametersPtrOutput) ToSecretRotationAwsIamUserSecretParametersPtrOutput() SecretRotationAwsIamUserSecretParametersPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretParametersPtrOutput) ToSecretRotationAwsIamUserSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretParametersPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretParametersPtrOutput) Elem() SecretRotationAwsIamUserSecretParametersOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretParameters) SecretRotationAwsIamUserSecretParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationAwsIamUserSecretParameters
		return ret
	}).(SecretRotationAwsIamUserSecretParametersOutput)
}

// The AWS region the client is present in.
func (o SecretRotationAwsIamUserSecretParametersPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// The name of the client to rotate credentials for.
func (o SecretRotationAwsIamUserSecretParametersPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretParameters) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretRotationAwsIamUserSecretRotateAtUtc struct {
	// The hour at which the rotation should occur (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes *int `pulumi:"minutes"`
}

// SecretRotationAwsIamUserSecretRotateAtUtcInput is an input type that accepts SecretRotationAwsIamUserSecretRotateAtUtcArgs and SecretRotationAwsIamUserSecretRotateAtUtcOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretRotateAtUtcInput` via:
//
//	SecretRotationAwsIamUserSecretRotateAtUtcArgs{...}
type SecretRotationAwsIamUserSecretRotateAtUtcInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretRotateAtUtcOutput() SecretRotationAwsIamUserSecretRotateAtUtcOutput
	ToSecretRotationAwsIamUserSecretRotateAtUtcOutputWithContext(context.Context) SecretRotationAwsIamUserSecretRotateAtUtcOutput
}

type SecretRotationAwsIamUserSecretRotateAtUtcArgs struct {
	// The hour at which the rotation should occur (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (SecretRotationAwsIamUserSecretRotateAtUtcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretRotateAtUtc)(nil)).Elem()
}

func (i SecretRotationAwsIamUserSecretRotateAtUtcArgs) ToSecretRotationAwsIamUserSecretRotateAtUtcOutput() SecretRotationAwsIamUserSecretRotateAtUtcOutput {
	return i.ToSecretRotationAwsIamUserSecretRotateAtUtcOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretRotateAtUtcArgs) ToSecretRotationAwsIamUserSecretRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretRotateAtUtcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretRotateAtUtcOutput)
}

func (i SecretRotationAwsIamUserSecretRotateAtUtcArgs) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutput() SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretRotateAtUtcArgs) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretRotateAtUtcOutput).ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(ctx)
}

// SecretRotationAwsIamUserSecretRotateAtUtcPtrInput is an input type that accepts SecretRotationAwsIamUserSecretRotateAtUtcArgs, SecretRotationAwsIamUserSecretRotateAtUtcPtr and SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretRotateAtUtcPtrInput` via:
//
//	        SecretRotationAwsIamUserSecretRotateAtUtcArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAwsIamUserSecretRotateAtUtcPtrInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutput() SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput
	ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(context.Context) SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput
}

type secretRotationAwsIamUserSecretRotateAtUtcPtrType SecretRotationAwsIamUserSecretRotateAtUtcArgs

func SecretRotationAwsIamUserSecretRotateAtUtcPtr(v *SecretRotationAwsIamUserSecretRotateAtUtcArgs) SecretRotationAwsIamUserSecretRotateAtUtcPtrInput {
	return (*secretRotationAwsIamUserSecretRotateAtUtcPtrType)(v)
}

func (*secretRotationAwsIamUserSecretRotateAtUtcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretRotateAtUtc)(nil)).Elem()
}

func (i *secretRotationAwsIamUserSecretRotateAtUtcPtrType) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutput() SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i *secretRotationAwsIamUserSecretRotateAtUtcPtrType) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput)
}

type SecretRotationAwsIamUserSecretRotateAtUtcOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretRotateAtUtcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretRotateAtUtcOutput) ToSecretRotationAwsIamUserSecretRotateAtUtcOutput() SecretRotationAwsIamUserSecretRotateAtUtcOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretRotateAtUtcOutput) ToSecretRotationAwsIamUserSecretRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretRotateAtUtcOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretRotateAtUtcOutput) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutput() SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return o.ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(context.Background())
}

func (o SecretRotationAwsIamUserSecretRotateAtUtcOutput) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAwsIamUserSecretRotateAtUtc) *SecretRotationAwsIamUserSecretRotateAtUtc {
		return &v
	}).(SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationAwsIamUserSecretRotateAtUtcOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationAwsIamUserSecretRotateAtUtc) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationAwsIamUserSecretRotateAtUtcOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationAwsIamUserSecretRotateAtUtc) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutput() SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput) ToSecretRotationAwsIamUserSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput) Elem() SecretRotationAwsIamUserSecretRotateAtUtcOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretRotateAtUtc) SecretRotationAwsIamUserSecretRotateAtUtc {
		if v != nil {
			return *v
		}
		var ret SecretRotationAwsIamUserSecretRotateAtUtc
		return ret
	}).(SecretRotationAwsIamUserSecretRotateAtUtcOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type SecretRotationAwsIamUserSecretSecretsMapping struct {
	// The name of the secret that the access key ID will be mapped to.
	AccessKeyId string `pulumi:"accessKeyId"`
	// The name of the secret that the rotated secret access key will be mapped to.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// SecretRotationAwsIamUserSecretSecretsMappingInput is an input type that accepts SecretRotationAwsIamUserSecretSecretsMappingArgs and SecretRotationAwsIamUserSecretSecretsMappingOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretSecretsMappingInput` via:
//
//	SecretRotationAwsIamUserSecretSecretsMappingArgs{...}
type SecretRotationAwsIamUserSecretSecretsMappingInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretSecretsMappingOutput() SecretRotationAwsIamUserSecretSecretsMappingOutput
	ToSecretRotationAwsIamUserSecretSecretsMappingOutputWithContext(context.Context) SecretRotationAwsIamUserSecretSecretsMappingOutput
}

type SecretRotationAwsIamUserSecretSecretsMappingArgs struct {
	// The name of the secret that the access key ID will be mapped to.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// The name of the secret that the rotated secret access key will be mapped to.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (SecretRotationAwsIamUserSecretSecretsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretSecretsMapping)(nil)).Elem()
}

func (i SecretRotationAwsIamUserSecretSecretsMappingArgs) ToSecretRotationAwsIamUserSecretSecretsMappingOutput() SecretRotationAwsIamUserSecretSecretsMappingOutput {
	return i.ToSecretRotationAwsIamUserSecretSecretsMappingOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretSecretsMappingArgs) ToSecretRotationAwsIamUserSecretSecretsMappingOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretSecretsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretSecretsMappingOutput)
}

func (i SecretRotationAwsIamUserSecretSecretsMappingArgs) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutput() SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretSecretsMappingArgs) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretSecretsMappingOutput).ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(ctx)
}

// SecretRotationAwsIamUserSecretSecretsMappingPtrInput is an input type that accepts SecretRotationAwsIamUserSecretSecretsMappingArgs, SecretRotationAwsIamUserSecretSecretsMappingPtr and SecretRotationAwsIamUserSecretSecretsMappingPtrOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretSecretsMappingPtrInput` via:
//
//	        SecretRotationAwsIamUserSecretSecretsMappingArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAwsIamUserSecretSecretsMappingPtrInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutput() SecretRotationAwsIamUserSecretSecretsMappingPtrOutput
	ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(context.Context) SecretRotationAwsIamUserSecretSecretsMappingPtrOutput
}

type secretRotationAwsIamUserSecretSecretsMappingPtrType SecretRotationAwsIamUserSecretSecretsMappingArgs

func SecretRotationAwsIamUserSecretSecretsMappingPtr(v *SecretRotationAwsIamUserSecretSecretsMappingArgs) SecretRotationAwsIamUserSecretSecretsMappingPtrInput {
	return (*secretRotationAwsIamUserSecretSecretsMappingPtrType)(v)
}

func (*secretRotationAwsIamUserSecretSecretsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretSecretsMapping)(nil)).Elem()
}

func (i *secretRotationAwsIamUserSecretSecretsMappingPtrType) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutput() SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(context.Background())
}

func (i *secretRotationAwsIamUserSecretSecretsMappingPtrType) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretSecretsMappingPtrOutput)
}

type SecretRotationAwsIamUserSecretSecretsMappingOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretSecretsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretSecretsMapping)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretSecretsMappingOutput) ToSecretRotationAwsIamUserSecretSecretsMappingOutput() SecretRotationAwsIamUserSecretSecretsMappingOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretSecretsMappingOutput) ToSecretRotationAwsIamUserSecretSecretsMappingOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretSecretsMappingOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretSecretsMappingOutput) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutput() SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return o.ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(context.Background())
}

func (o SecretRotationAwsIamUserSecretSecretsMappingOutput) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAwsIamUserSecretSecretsMapping) *SecretRotationAwsIamUserSecretSecretsMapping {
		return &v
	}).(SecretRotationAwsIamUserSecretSecretsMappingPtrOutput)
}

// The name of the secret that the access key ID will be mapped to.
func (o SecretRotationAwsIamUserSecretSecretsMappingOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAwsIamUserSecretSecretsMapping) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// The name of the secret that the rotated secret access key will be mapped to.
func (o SecretRotationAwsIamUserSecretSecretsMappingOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAwsIamUserSecretSecretsMapping) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type SecretRotationAwsIamUserSecretSecretsMappingPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretSecretsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretSecretsMapping)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretSecretsMappingPtrOutput) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutput() SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretSecretsMappingPtrOutput) ToSecretRotationAwsIamUserSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretSecretsMappingPtrOutput) Elem() SecretRotationAwsIamUserSecretSecretsMappingOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretSecretsMapping) SecretRotationAwsIamUserSecretSecretsMapping {
		if v != nil {
			return *v
		}
		var ret SecretRotationAwsIamUserSecretSecretsMapping
		return ret
	}).(SecretRotationAwsIamUserSecretSecretsMappingOutput)
}

// The name of the secret that the access key ID will be mapped to.
func (o SecretRotationAwsIamUserSecretSecretsMappingPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that the rotated secret access key will be mapped to.
func (o SecretRotationAwsIamUserSecretSecretsMappingPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type SecretRotationAwsIamUserSecretTemporaryParameters struct {
}

// SecretRotationAwsIamUserSecretTemporaryParametersInput is an input type that accepts SecretRotationAwsIamUserSecretTemporaryParametersArgs and SecretRotationAwsIamUserSecretTemporaryParametersOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretTemporaryParametersInput` via:
//
//	SecretRotationAwsIamUserSecretTemporaryParametersArgs{...}
type SecretRotationAwsIamUserSecretTemporaryParametersInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretTemporaryParametersOutput() SecretRotationAwsIamUserSecretTemporaryParametersOutput
	ToSecretRotationAwsIamUserSecretTemporaryParametersOutputWithContext(context.Context) SecretRotationAwsIamUserSecretTemporaryParametersOutput
}

type SecretRotationAwsIamUserSecretTemporaryParametersArgs struct {
}

func (SecretRotationAwsIamUserSecretTemporaryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretTemporaryParameters)(nil)).Elem()
}

func (i SecretRotationAwsIamUserSecretTemporaryParametersArgs) ToSecretRotationAwsIamUserSecretTemporaryParametersOutput() SecretRotationAwsIamUserSecretTemporaryParametersOutput {
	return i.ToSecretRotationAwsIamUserSecretTemporaryParametersOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretTemporaryParametersArgs) ToSecretRotationAwsIamUserSecretTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretTemporaryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretTemporaryParametersOutput)
}

func (i SecretRotationAwsIamUserSecretTemporaryParametersArgs) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutput() SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationAwsIamUserSecretTemporaryParametersArgs) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretTemporaryParametersOutput).ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(ctx)
}

// SecretRotationAwsIamUserSecretTemporaryParametersPtrInput is an input type that accepts SecretRotationAwsIamUserSecretTemporaryParametersArgs, SecretRotationAwsIamUserSecretTemporaryParametersPtr and SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationAwsIamUserSecretTemporaryParametersPtrInput` via:
//
//	        SecretRotationAwsIamUserSecretTemporaryParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAwsIamUserSecretTemporaryParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutput() SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput
	ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(context.Context) SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput
}

type secretRotationAwsIamUserSecretTemporaryParametersPtrType SecretRotationAwsIamUserSecretTemporaryParametersArgs

func SecretRotationAwsIamUserSecretTemporaryParametersPtr(v *SecretRotationAwsIamUserSecretTemporaryParametersArgs) SecretRotationAwsIamUserSecretTemporaryParametersPtrInput {
	return (*secretRotationAwsIamUserSecretTemporaryParametersPtrType)(v)
}

func (*secretRotationAwsIamUserSecretTemporaryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretTemporaryParameters)(nil)).Elem()
}

func (i *secretRotationAwsIamUserSecretTemporaryParametersPtrType) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutput() SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return i.ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationAwsIamUserSecretTemporaryParametersPtrType) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput)
}

type SecretRotationAwsIamUserSecretTemporaryParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretTemporaryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAwsIamUserSecretTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretTemporaryParametersOutput) ToSecretRotationAwsIamUserSecretTemporaryParametersOutput() SecretRotationAwsIamUserSecretTemporaryParametersOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretTemporaryParametersOutput) ToSecretRotationAwsIamUserSecretTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretTemporaryParametersOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretTemporaryParametersOutput) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutput() SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return o.ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationAwsIamUserSecretTemporaryParametersOutput) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAwsIamUserSecretTemporaryParameters) *SecretRotationAwsIamUserSecretTemporaryParameters {
		return &v
	}).(SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput)
}

type SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAwsIamUserSecretTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutput() SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput) ToSecretRotationAwsIamUserSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput) Elem() SecretRotationAwsIamUserSecretTemporaryParametersOutput {
	return o.ApplyT(func(v *SecretRotationAwsIamUserSecretTemporaryParameters) SecretRotationAwsIamUserSecretTemporaryParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationAwsIamUserSecretTemporaryParameters
		return ret
	}).(SecretRotationAwsIamUserSecretTemporaryParametersOutput)
}

type SecretRotationAzureClientSecretParameters struct {
	// The client ID of the Azure Application to rotate the client secret for.
	ClientId string `pulumi:"clientId"`
	// The ID of the Azure Application to rotate the client secret for.
	ObjectId string `pulumi:"objectId"`
}

// SecretRotationAzureClientSecretParametersInput is an input type that accepts SecretRotationAzureClientSecretParametersArgs and SecretRotationAzureClientSecretParametersOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretParametersInput` via:
//
//	SecretRotationAzureClientSecretParametersArgs{...}
type SecretRotationAzureClientSecretParametersInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretParametersOutput() SecretRotationAzureClientSecretParametersOutput
	ToSecretRotationAzureClientSecretParametersOutputWithContext(context.Context) SecretRotationAzureClientSecretParametersOutput
}

type SecretRotationAzureClientSecretParametersArgs struct {
	// The client ID of the Azure Application to rotate the client secret for.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The ID of the Azure Application to rotate the client secret for.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
}

func (SecretRotationAzureClientSecretParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretParameters)(nil)).Elem()
}

func (i SecretRotationAzureClientSecretParametersArgs) ToSecretRotationAzureClientSecretParametersOutput() SecretRotationAzureClientSecretParametersOutput {
	return i.ToSecretRotationAzureClientSecretParametersOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretParametersArgs) ToSecretRotationAzureClientSecretParametersOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretParametersOutput)
}

func (i SecretRotationAzureClientSecretParametersArgs) ToSecretRotationAzureClientSecretParametersPtrOutput() SecretRotationAzureClientSecretParametersPtrOutput {
	return i.ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretParametersArgs) ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretParametersOutput).ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(ctx)
}

// SecretRotationAzureClientSecretParametersPtrInput is an input type that accepts SecretRotationAzureClientSecretParametersArgs, SecretRotationAzureClientSecretParametersPtr and SecretRotationAzureClientSecretParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretParametersPtrInput` via:
//
//	        SecretRotationAzureClientSecretParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAzureClientSecretParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretParametersPtrOutput() SecretRotationAzureClientSecretParametersPtrOutput
	ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(context.Context) SecretRotationAzureClientSecretParametersPtrOutput
}

type secretRotationAzureClientSecretParametersPtrType SecretRotationAzureClientSecretParametersArgs

func SecretRotationAzureClientSecretParametersPtr(v *SecretRotationAzureClientSecretParametersArgs) SecretRotationAzureClientSecretParametersPtrInput {
	return (*secretRotationAzureClientSecretParametersPtrType)(v)
}

func (*secretRotationAzureClientSecretParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretParameters)(nil)).Elem()
}

func (i *secretRotationAzureClientSecretParametersPtrType) ToSecretRotationAzureClientSecretParametersPtrOutput() SecretRotationAzureClientSecretParametersPtrOutput {
	return i.ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationAzureClientSecretParametersPtrType) ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretParametersPtrOutput)
}

type SecretRotationAzureClientSecretParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretParameters)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretParametersOutput) ToSecretRotationAzureClientSecretParametersOutput() SecretRotationAzureClientSecretParametersOutput {
	return o
}

func (o SecretRotationAzureClientSecretParametersOutput) ToSecretRotationAzureClientSecretParametersOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretParametersOutput {
	return o
}

func (o SecretRotationAzureClientSecretParametersOutput) ToSecretRotationAzureClientSecretParametersPtrOutput() SecretRotationAzureClientSecretParametersPtrOutput {
	return o.ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationAzureClientSecretParametersOutput) ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAzureClientSecretParameters) *SecretRotationAzureClientSecretParameters {
		return &v
	}).(SecretRotationAzureClientSecretParametersPtrOutput)
}

// The client ID of the Azure Application to rotate the client secret for.
func (o SecretRotationAzureClientSecretParametersOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAzureClientSecretParameters) string { return v.ClientId }).(pulumi.StringOutput)
}

// The ID of the Azure Application to rotate the client secret for.
func (o SecretRotationAzureClientSecretParametersOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAzureClientSecretParameters) string { return v.ObjectId }).(pulumi.StringOutput)
}

type SecretRotationAzureClientSecretParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretParameters)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretParametersPtrOutput) ToSecretRotationAzureClientSecretParametersPtrOutput() SecretRotationAzureClientSecretParametersPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretParametersPtrOutput) ToSecretRotationAzureClientSecretParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretParametersPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretParametersPtrOutput) Elem() SecretRotationAzureClientSecretParametersOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretParameters) SecretRotationAzureClientSecretParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationAzureClientSecretParameters
		return ret
	}).(SecretRotationAzureClientSecretParametersOutput)
}

// The client ID of the Azure Application to rotate the client secret for.
func (o SecretRotationAzureClientSecretParametersPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Azure Application to rotate the client secret for.
func (o SecretRotationAzureClientSecretParametersPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ObjectId
	}).(pulumi.StringPtrOutput)
}

type SecretRotationAzureClientSecretRotateAtUtc struct {
	// The hour at which the rotation should occur (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes *int `pulumi:"minutes"`
}

// SecretRotationAzureClientSecretRotateAtUtcInput is an input type that accepts SecretRotationAzureClientSecretRotateAtUtcArgs and SecretRotationAzureClientSecretRotateAtUtcOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretRotateAtUtcInput` via:
//
//	SecretRotationAzureClientSecretRotateAtUtcArgs{...}
type SecretRotationAzureClientSecretRotateAtUtcInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretRotateAtUtcOutput() SecretRotationAzureClientSecretRotateAtUtcOutput
	ToSecretRotationAzureClientSecretRotateAtUtcOutputWithContext(context.Context) SecretRotationAzureClientSecretRotateAtUtcOutput
}

type SecretRotationAzureClientSecretRotateAtUtcArgs struct {
	// The hour at which the rotation should occur (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (SecretRotationAzureClientSecretRotateAtUtcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretRotateAtUtc)(nil)).Elem()
}

func (i SecretRotationAzureClientSecretRotateAtUtcArgs) ToSecretRotationAzureClientSecretRotateAtUtcOutput() SecretRotationAzureClientSecretRotateAtUtcOutput {
	return i.ToSecretRotationAzureClientSecretRotateAtUtcOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretRotateAtUtcArgs) ToSecretRotationAzureClientSecretRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretRotateAtUtcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretRotateAtUtcOutput)
}

func (i SecretRotationAzureClientSecretRotateAtUtcArgs) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutput() SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return i.ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretRotateAtUtcArgs) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretRotateAtUtcOutput).ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(ctx)
}

// SecretRotationAzureClientSecretRotateAtUtcPtrInput is an input type that accepts SecretRotationAzureClientSecretRotateAtUtcArgs, SecretRotationAzureClientSecretRotateAtUtcPtr and SecretRotationAzureClientSecretRotateAtUtcPtrOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretRotateAtUtcPtrInput` via:
//
//	        SecretRotationAzureClientSecretRotateAtUtcArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAzureClientSecretRotateAtUtcPtrInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretRotateAtUtcPtrOutput() SecretRotationAzureClientSecretRotateAtUtcPtrOutput
	ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(context.Context) SecretRotationAzureClientSecretRotateAtUtcPtrOutput
}

type secretRotationAzureClientSecretRotateAtUtcPtrType SecretRotationAzureClientSecretRotateAtUtcArgs

func SecretRotationAzureClientSecretRotateAtUtcPtr(v *SecretRotationAzureClientSecretRotateAtUtcArgs) SecretRotationAzureClientSecretRotateAtUtcPtrInput {
	return (*secretRotationAzureClientSecretRotateAtUtcPtrType)(v)
}

func (*secretRotationAzureClientSecretRotateAtUtcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretRotateAtUtc)(nil)).Elem()
}

func (i *secretRotationAzureClientSecretRotateAtUtcPtrType) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutput() SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return i.ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i *secretRotationAzureClientSecretRotateAtUtcPtrType) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretRotateAtUtcPtrOutput)
}

type SecretRotationAzureClientSecretRotateAtUtcOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretRotateAtUtcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretRotateAtUtcOutput) ToSecretRotationAzureClientSecretRotateAtUtcOutput() SecretRotationAzureClientSecretRotateAtUtcOutput {
	return o
}

func (o SecretRotationAzureClientSecretRotateAtUtcOutput) ToSecretRotationAzureClientSecretRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretRotateAtUtcOutput {
	return o
}

func (o SecretRotationAzureClientSecretRotateAtUtcOutput) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutput() SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return o.ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(context.Background())
}

func (o SecretRotationAzureClientSecretRotateAtUtcOutput) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAzureClientSecretRotateAtUtc) *SecretRotationAzureClientSecretRotateAtUtc {
		return &v
	}).(SecretRotationAzureClientSecretRotateAtUtcPtrOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationAzureClientSecretRotateAtUtcOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationAzureClientSecretRotateAtUtc) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationAzureClientSecretRotateAtUtcOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationAzureClientSecretRotateAtUtc) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type SecretRotationAzureClientSecretRotateAtUtcPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretRotateAtUtcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretRotateAtUtcPtrOutput) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutput() SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretRotateAtUtcPtrOutput) ToSecretRotationAzureClientSecretRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretRotateAtUtcPtrOutput) Elem() SecretRotationAzureClientSecretRotateAtUtcOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretRotateAtUtc) SecretRotationAzureClientSecretRotateAtUtc {
		if v != nil {
			return *v
		}
		var ret SecretRotationAzureClientSecretRotateAtUtc
		return ret
	}).(SecretRotationAzureClientSecretRotateAtUtcOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationAzureClientSecretRotateAtUtcPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationAzureClientSecretRotateAtUtcPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type SecretRotationAzureClientSecretSecretsMapping struct {
	// The name of the secret that the client ID will be mapped to.
	ClientId string `pulumi:"clientId"`
	// The name of the secret that the rotated client secret will be mapped to.
	ClientSecret string `pulumi:"clientSecret"`
}

// SecretRotationAzureClientSecretSecretsMappingInput is an input type that accepts SecretRotationAzureClientSecretSecretsMappingArgs and SecretRotationAzureClientSecretSecretsMappingOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretSecretsMappingInput` via:
//
//	SecretRotationAzureClientSecretSecretsMappingArgs{...}
type SecretRotationAzureClientSecretSecretsMappingInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretSecretsMappingOutput() SecretRotationAzureClientSecretSecretsMappingOutput
	ToSecretRotationAzureClientSecretSecretsMappingOutputWithContext(context.Context) SecretRotationAzureClientSecretSecretsMappingOutput
}

type SecretRotationAzureClientSecretSecretsMappingArgs struct {
	// The name of the secret that the client ID will be mapped to.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The name of the secret that the rotated client secret will be mapped to.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (SecretRotationAzureClientSecretSecretsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretSecretsMapping)(nil)).Elem()
}

func (i SecretRotationAzureClientSecretSecretsMappingArgs) ToSecretRotationAzureClientSecretSecretsMappingOutput() SecretRotationAzureClientSecretSecretsMappingOutput {
	return i.ToSecretRotationAzureClientSecretSecretsMappingOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretSecretsMappingArgs) ToSecretRotationAzureClientSecretSecretsMappingOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretSecretsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretSecretsMappingOutput)
}

func (i SecretRotationAzureClientSecretSecretsMappingArgs) ToSecretRotationAzureClientSecretSecretsMappingPtrOutput() SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return i.ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretSecretsMappingArgs) ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretSecretsMappingOutput).ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(ctx)
}

// SecretRotationAzureClientSecretSecretsMappingPtrInput is an input type that accepts SecretRotationAzureClientSecretSecretsMappingArgs, SecretRotationAzureClientSecretSecretsMappingPtr and SecretRotationAzureClientSecretSecretsMappingPtrOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretSecretsMappingPtrInput` via:
//
//	        SecretRotationAzureClientSecretSecretsMappingArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAzureClientSecretSecretsMappingPtrInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretSecretsMappingPtrOutput() SecretRotationAzureClientSecretSecretsMappingPtrOutput
	ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(context.Context) SecretRotationAzureClientSecretSecretsMappingPtrOutput
}

type secretRotationAzureClientSecretSecretsMappingPtrType SecretRotationAzureClientSecretSecretsMappingArgs

func SecretRotationAzureClientSecretSecretsMappingPtr(v *SecretRotationAzureClientSecretSecretsMappingArgs) SecretRotationAzureClientSecretSecretsMappingPtrInput {
	return (*secretRotationAzureClientSecretSecretsMappingPtrType)(v)
}

func (*secretRotationAzureClientSecretSecretsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretSecretsMapping)(nil)).Elem()
}

func (i *secretRotationAzureClientSecretSecretsMappingPtrType) ToSecretRotationAzureClientSecretSecretsMappingPtrOutput() SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return i.ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(context.Background())
}

func (i *secretRotationAzureClientSecretSecretsMappingPtrType) ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretSecretsMappingPtrOutput)
}

type SecretRotationAzureClientSecretSecretsMappingOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretSecretsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretSecretsMapping)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretSecretsMappingOutput) ToSecretRotationAzureClientSecretSecretsMappingOutput() SecretRotationAzureClientSecretSecretsMappingOutput {
	return o
}

func (o SecretRotationAzureClientSecretSecretsMappingOutput) ToSecretRotationAzureClientSecretSecretsMappingOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretSecretsMappingOutput {
	return o
}

func (o SecretRotationAzureClientSecretSecretsMappingOutput) ToSecretRotationAzureClientSecretSecretsMappingPtrOutput() SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return o.ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(context.Background())
}

func (o SecretRotationAzureClientSecretSecretsMappingOutput) ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAzureClientSecretSecretsMapping) *SecretRotationAzureClientSecretSecretsMapping {
		return &v
	}).(SecretRotationAzureClientSecretSecretsMappingPtrOutput)
}

// The name of the secret that the client ID will be mapped to.
func (o SecretRotationAzureClientSecretSecretsMappingOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAzureClientSecretSecretsMapping) string { return v.ClientId }).(pulumi.StringOutput)
}

// The name of the secret that the rotated client secret will be mapped to.
func (o SecretRotationAzureClientSecretSecretsMappingOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationAzureClientSecretSecretsMapping) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type SecretRotationAzureClientSecretSecretsMappingPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretSecretsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretSecretsMapping)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretSecretsMappingPtrOutput) ToSecretRotationAzureClientSecretSecretsMappingPtrOutput() SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretSecretsMappingPtrOutput) ToSecretRotationAzureClientSecretSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretSecretsMappingPtrOutput) Elem() SecretRotationAzureClientSecretSecretsMappingOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretSecretsMapping) SecretRotationAzureClientSecretSecretsMapping {
		if v != nil {
			return *v
		}
		var ret SecretRotationAzureClientSecretSecretsMapping
		return ret
	}).(SecretRotationAzureClientSecretSecretsMappingOutput)
}

// The name of the secret that the client ID will be mapped to.
func (o SecretRotationAzureClientSecretSecretsMappingPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that the rotated client secret will be mapped to.
func (o SecretRotationAzureClientSecretSecretsMappingPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type SecretRotationAzureClientSecretTemporaryParameters struct {
}

// SecretRotationAzureClientSecretTemporaryParametersInput is an input type that accepts SecretRotationAzureClientSecretTemporaryParametersArgs and SecretRotationAzureClientSecretTemporaryParametersOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretTemporaryParametersInput` via:
//
//	SecretRotationAzureClientSecretTemporaryParametersArgs{...}
type SecretRotationAzureClientSecretTemporaryParametersInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretTemporaryParametersOutput() SecretRotationAzureClientSecretTemporaryParametersOutput
	ToSecretRotationAzureClientSecretTemporaryParametersOutputWithContext(context.Context) SecretRotationAzureClientSecretTemporaryParametersOutput
}

type SecretRotationAzureClientSecretTemporaryParametersArgs struct {
}

func (SecretRotationAzureClientSecretTemporaryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretTemporaryParameters)(nil)).Elem()
}

func (i SecretRotationAzureClientSecretTemporaryParametersArgs) ToSecretRotationAzureClientSecretTemporaryParametersOutput() SecretRotationAzureClientSecretTemporaryParametersOutput {
	return i.ToSecretRotationAzureClientSecretTemporaryParametersOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretTemporaryParametersArgs) ToSecretRotationAzureClientSecretTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretTemporaryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretTemporaryParametersOutput)
}

func (i SecretRotationAzureClientSecretTemporaryParametersArgs) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutput() SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return i.ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationAzureClientSecretTemporaryParametersArgs) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretTemporaryParametersOutput).ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(ctx)
}

// SecretRotationAzureClientSecretTemporaryParametersPtrInput is an input type that accepts SecretRotationAzureClientSecretTemporaryParametersArgs, SecretRotationAzureClientSecretTemporaryParametersPtr and SecretRotationAzureClientSecretTemporaryParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationAzureClientSecretTemporaryParametersPtrInput` via:
//
//	        SecretRotationAzureClientSecretTemporaryParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationAzureClientSecretTemporaryParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationAzureClientSecretTemporaryParametersPtrOutput() SecretRotationAzureClientSecretTemporaryParametersPtrOutput
	ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(context.Context) SecretRotationAzureClientSecretTemporaryParametersPtrOutput
}

type secretRotationAzureClientSecretTemporaryParametersPtrType SecretRotationAzureClientSecretTemporaryParametersArgs

func SecretRotationAzureClientSecretTemporaryParametersPtr(v *SecretRotationAzureClientSecretTemporaryParametersArgs) SecretRotationAzureClientSecretTemporaryParametersPtrInput {
	return (*secretRotationAzureClientSecretTemporaryParametersPtrType)(v)
}

func (*secretRotationAzureClientSecretTemporaryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretTemporaryParameters)(nil)).Elem()
}

func (i *secretRotationAzureClientSecretTemporaryParametersPtrType) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutput() SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return i.ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationAzureClientSecretTemporaryParametersPtrType) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationAzureClientSecretTemporaryParametersPtrOutput)
}

type SecretRotationAzureClientSecretTemporaryParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretTemporaryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationAzureClientSecretTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretTemporaryParametersOutput) ToSecretRotationAzureClientSecretTemporaryParametersOutput() SecretRotationAzureClientSecretTemporaryParametersOutput {
	return o
}

func (o SecretRotationAzureClientSecretTemporaryParametersOutput) ToSecretRotationAzureClientSecretTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretTemporaryParametersOutput {
	return o
}

func (o SecretRotationAzureClientSecretTemporaryParametersOutput) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutput() SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return o.ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationAzureClientSecretTemporaryParametersOutput) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationAzureClientSecretTemporaryParameters) *SecretRotationAzureClientSecretTemporaryParameters {
		return &v
	}).(SecretRotationAzureClientSecretTemporaryParametersPtrOutput)
}

type SecretRotationAzureClientSecretTemporaryParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationAzureClientSecretTemporaryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationAzureClientSecretTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationAzureClientSecretTemporaryParametersPtrOutput) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutput() SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretTemporaryParametersPtrOutput) ToSecretRotationAzureClientSecretTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationAzureClientSecretTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationAzureClientSecretTemporaryParametersPtrOutput) Elem() SecretRotationAzureClientSecretTemporaryParametersOutput {
	return o.ApplyT(func(v *SecretRotationAzureClientSecretTemporaryParameters) SecretRotationAzureClientSecretTemporaryParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationAzureClientSecretTemporaryParameters
		return ret
	}).(SecretRotationAzureClientSecretTemporaryParametersOutput)
}

type SecretRotationLdapPasswordParameters struct {
	// The Distinguished Name (DN) of the LDAP entry to rotate the password for.
	Dn string `pulumi:"dn"`
	// Password generation requirements.
	PasswordRequirements SecretRotationLdapPasswordParametersPasswordRequirements `pulumi:"passwordRequirements"`
	// The method to use for rotating the password. Supported options: connection-principal and target-principal (default: connection-principal)
	RotationMethod *string `pulumi:"rotationMethod"`
}

// SecretRotationLdapPasswordParametersInput is an input type that accepts SecretRotationLdapPasswordParametersArgs and SecretRotationLdapPasswordParametersOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordParametersInput` via:
//
//	SecretRotationLdapPasswordParametersArgs{...}
type SecretRotationLdapPasswordParametersInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordParametersOutput() SecretRotationLdapPasswordParametersOutput
	ToSecretRotationLdapPasswordParametersOutputWithContext(context.Context) SecretRotationLdapPasswordParametersOutput
}

type SecretRotationLdapPasswordParametersArgs struct {
	// The Distinguished Name (DN) of the LDAP entry to rotate the password for.
	Dn pulumi.StringInput `pulumi:"dn"`
	// Password generation requirements.
	PasswordRequirements SecretRotationLdapPasswordParametersPasswordRequirementsInput `pulumi:"passwordRequirements"`
	// The method to use for rotating the password. Supported options: connection-principal and target-principal (default: connection-principal)
	RotationMethod pulumi.StringPtrInput `pulumi:"rotationMethod"`
}

func (SecretRotationLdapPasswordParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordParameters)(nil)).Elem()
}

func (i SecretRotationLdapPasswordParametersArgs) ToSecretRotationLdapPasswordParametersOutput() SecretRotationLdapPasswordParametersOutput {
	return i.ToSecretRotationLdapPasswordParametersOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordParametersArgs) ToSecretRotationLdapPasswordParametersOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersOutput)
}

func (i SecretRotationLdapPasswordParametersArgs) ToSecretRotationLdapPasswordParametersPtrOutput() SecretRotationLdapPasswordParametersPtrOutput {
	return i.ToSecretRotationLdapPasswordParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordParametersArgs) ToSecretRotationLdapPasswordParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersOutput).ToSecretRotationLdapPasswordParametersPtrOutputWithContext(ctx)
}

// SecretRotationLdapPasswordParametersPtrInput is an input type that accepts SecretRotationLdapPasswordParametersArgs, SecretRotationLdapPasswordParametersPtr and SecretRotationLdapPasswordParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordParametersPtrInput` via:
//
//	        SecretRotationLdapPasswordParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationLdapPasswordParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordParametersPtrOutput() SecretRotationLdapPasswordParametersPtrOutput
	ToSecretRotationLdapPasswordParametersPtrOutputWithContext(context.Context) SecretRotationLdapPasswordParametersPtrOutput
}

type secretRotationLdapPasswordParametersPtrType SecretRotationLdapPasswordParametersArgs

func SecretRotationLdapPasswordParametersPtr(v *SecretRotationLdapPasswordParametersArgs) SecretRotationLdapPasswordParametersPtrInput {
	return (*secretRotationLdapPasswordParametersPtrType)(v)
}

func (*secretRotationLdapPasswordParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordParameters)(nil)).Elem()
}

func (i *secretRotationLdapPasswordParametersPtrType) ToSecretRotationLdapPasswordParametersPtrOutput() SecretRotationLdapPasswordParametersPtrOutput {
	return i.ToSecretRotationLdapPasswordParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationLdapPasswordParametersPtrType) ToSecretRotationLdapPasswordParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersPtrOutput)
}

type SecretRotationLdapPasswordParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordParameters)(nil)).Elem()
}

func (o SecretRotationLdapPasswordParametersOutput) ToSecretRotationLdapPasswordParametersOutput() SecretRotationLdapPasswordParametersOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersOutput) ToSecretRotationLdapPasswordParametersOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersOutput) ToSecretRotationLdapPasswordParametersPtrOutput() SecretRotationLdapPasswordParametersPtrOutput {
	return o.ToSecretRotationLdapPasswordParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationLdapPasswordParametersOutput) ToSecretRotationLdapPasswordParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationLdapPasswordParameters) *SecretRotationLdapPasswordParameters {
		return &v
	}).(SecretRotationLdapPasswordParametersPtrOutput)
}

// The Distinguished Name (DN) of the LDAP entry to rotate the password for.
func (o SecretRotationLdapPasswordParametersOutput) Dn() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParameters) string { return v.Dn }).(pulumi.StringOutput)
}

// Password generation requirements.
func (o SecretRotationLdapPasswordParametersOutput) PasswordRequirements() SecretRotationLdapPasswordParametersPasswordRequirementsOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParameters) SecretRotationLdapPasswordParametersPasswordRequirements {
		return v.PasswordRequirements
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsOutput)
}

// The method to use for rotating the password. Supported options: connection-principal and target-principal (default: connection-principal)
func (o SecretRotationLdapPasswordParametersOutput) RotationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParameters) *string { return v.RotationMethod }).(pulumi.StringPtrOutput)
}

type SecretRotationLdapPasswordParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordParameters)(nil)).Elem()
}

func (o SecretRotationLdapPasswordParametersPtrOutput) ToSecretRotationLdapPasswordParametersPtrOutput() SecretRotationLdapPasswordParametersPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPtrOutput) ToSecretRotationLdapPasswordParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPtrOutput) Elem() SecretRotationLdapPasswordParametersOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParameters) SecretRotationLdapPasswordParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationLdapPasswordParameters
		return ret
	}).(SecretRotationLdapPasswordParametersOutput)
}

// The Distinguished Name (DN) of the LDAP entry to rotate the password for.
func (o SecretRotationLdapPasswordParametersPtrOutput) Dn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Dn
	}).(pulumi.StringPtrOutput)
}

// Password generation requirements.
func (o SecretRotationLdapPasswordParametersPtrOutput) PasswordRequirements() SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParameters) *SecretRotationLdapPasswordParametersPasswordRequirements {
		if v == nil {
			return nil
		}
		return &v.PasswordRequirements
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput)
}

// The method to use for rotating the password. Supported options: connection-principal and target-principal (default: connection-principal)
func (o SecretRotationLdapPasswordParametersPtrOutput) RotationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParameters) *string {
		if v == nil {
			return nil
		}
		return v.RotationMethod
	}).(pulumi.StringPtrOutput)
}

type SecretRotationLdapPasswordParametersPasswordRequirements struct {
	// String of allowed symbols for password generation.
	AllowedSymbols *string `pulumi:"allowedSymbols"`
	// The length of the generated password.
	Length int `pulumi:"length"`
	// Required character types in the generated password.
	Required SecretRotationLdapPasswordParametersPasswordRequirementsRequired `pulumi:"required"`
}

// SecretRotationLdapPasswordParametersPasswordRequirementsInput is an input type that accepts SecretRotationLdapPasswordParametersPasswordRequirementsArgs and SecretRotationLdapPasswordParametersPasswordRequirementsOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordParametersPasswordRequirementsInput` via:
//
//	SecretRotationLdapPasswordParametersPasswordRequirementsArgs{...}
type SecretRotationLdapPasswordParametersPasswordRequirementsInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordParametersPasswordRequirementsOutput() SecretRotationLdapPasswordParametersPasswordRequirementsOutput
	ToSecretRotationLdapPasswordParametersPasswordRequirementsOutputWithContext(context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsOutput
}

type SecretRotationLdapPasswordParametersPasswordRequirementsArgs struct {
	// String of allowed symbols for password generation.
	AllowedSymbols pulumi.StringPtrInput `pulumi:"allowedSymbols"`
	// The length of the generated password.
	Length pulumi.IntInput `pulumi:"length"`
	// Required character types in the generated password.
	Required SecretRotationLdapPasswordParametersPasswordRequirementsRequiredInput `pulumi:"required"`
}

func (SecretRotationLdapPasswordParametersPasswordRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirements)(nil)).Elem()
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsOutput() SecretRotationLdapPasswordParametersPasswordRequirementsOutput {
	return i.ToSecretRotationLdapPasswordParametersPasswordRequirementsOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersPasswordRequirementsOutput)
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return i.ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersPasswordRequirementsOutput).ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(ctx)
}

// SecretRotationLdapPasswordParametersPasswordRequirementsPtrInput is an input type that accepts SecretRotationLdapPasswordParametersPasswordRequirementsArgs, SecretRotationLdapPasswordParametersPasswordRequirementsPtr and SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordParametersPasswordRequirementsPtrInput` via:
//
//	        SecretRotationLdapPasswordParametersPasswordRequirementsArgs{...}
//
//	or:
//
//	        nil
type SecretRotationLdapPasswordParametersPasswordRequirementsPtrInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput
	ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput
}

type secretRotationLdapPasswordParametersPasswordRequirementsPtrType SecretRotationLdapPasswordParametersPasswordRequirementsArgs

func SecretRotationLdapPasswordParametersPasswordRequirementsPtr(v *SecretRotationLdapPasswordParametersPasswordRequirementsArgs) SecretRotationLdapPasswordParametersPasswordRequirementsPtrInput {
	return (*secretRotationLdapPasswordParametersPasswordRequirementsPtrType)(v)
}

func (*secretRotationLdapPasswordParametersPasswordRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordParametersPasswordRequirements)(nil)).Elem()
}

func (i *secretRotationLdapPasswordParametersPasswordRequirementsPtrType) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return i.ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(context.Background())
}

func (i *secretRotationLdapPasswordParametersPasswordRequirementsPtrType) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput)
}

type SecretRotationLdapPasswordParametersPasswordRequirementsOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordParametersPasswordRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirements)(nil)).Elem()
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsOutput() SecretRotationLdapPasswordParametersPasswordRequirementsOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return o.ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(context.Background())
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationLdapPasswordParametersPasswordRequirements) *SecretRotationLdapPasswordParametersPasswordRequirements {
		return &v
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput)
}

// String of allowed symbols for password generation.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsOutput) AllowedSymbols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParametersPasswordRequirements) *string { return v.AllowedSymbols }).(pulumi.StringPtrOutput)
}

// The length of the generated password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParametersPasswordRequirements) int { return v.Length }).(pulumi.IntOutput)
}

// Required character types in the generated password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsOutput) Required() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParametersPasswordRequirements) SecretRotationLdapPasswordParametersPasswordRequirementsRequired {
		return v.Required
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput)
}

type SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordParametersPasswordRequirements)(nil)).Elem()
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput) Elem() SecretRotationLdapPasswordParametersPasswordRequirementsOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirements) SecretRotationLdapPasswordParametersPasswordRequirements {
		if v != nil {
			return *v
		}
		var ret SecretRotationLdapPasswordParametersPasswordRequirements
		return ret
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsOutput)
}

// String of allowed symbols for password generation.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput) AllowedSymbols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirements) *string {
		if v == nil {
			return nil
		}
		return v.AllowedSymbols
	}).(pulumi.StringPtrOutput)
}

// The length of the generated password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirements) *int {
		if v == nil {
			return nil
		}
		return &v.Length
	}).(pulumi.IntPtrOutput)
}

// Required character types in the generated password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput) Required() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirements) *SecretRotationLdapPasswordParametersPasswordRequirementsRequired {
		if v == nil {
			return nil
		}
		return &v.Required
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput)
}

type SecretRotationLdapPasswordParametersPasswordRequirementsRequired struct {
	// Minimum number of digits required in the password.
	Digits int `pulumi:"digits"`
	// Minimum number of lowercase letters required in the password.
	Lowercase int `pulumi:"lowercase"`
	// Minimum number of symbols required in the password.
	Symbols int `pulumi:"symbols"`
	// Minimum number of uppercase letters required in the password.
	Uppercase int `pulumi:"uppercase"`
}

// SecretRotationLdapPasswordParametersPasswordRequirementsRequiredInput is an input type that accepts SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs and SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordParametersPasswordRequirementsRequiredInput` via:
//
//	SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs{...}
type SecretRotationLdapPasswordParametersPasswordRequirementsRequiredInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput
	ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutputWithContext(context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput
}

type SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs struct {
	// Minimum number of digits required in the password.
	Digits pulumi.IntInput `pulumi:"digits"`
	// Minimum number of lowercase letters required in the password.
	Lowercase pulumi.IntInput `pulumi:"lowercase"`
	// Minimum number of symbols required in the password.
	Symbols pulumi.IntInput `pulumi:"symbols"`
	// Minimum number of uppercase letters required in the password.
	Uppercase pulumi.IntInput `pulumi:"uppercase"`
}

func (SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirementsRequired)(nil)).Elem()
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput {
	return i.ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput)
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return i.ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput).ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(ctx)
}

// SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrInput is an input type that accepts SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs, SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtr and SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrInput` via:
//
//	        SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs{...}
//
//	or:
//
//	        nil
type SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput
	ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput
}

type secretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrType SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs

func SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtr(v *SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrInput {
	return (*secretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrType)(v)
}

func (*secretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordParametersPasswordRequirementsRequired)(nil)).Elem()
}

func (i *secretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrType) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return i.ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(context.Background())
}

func (i *secretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrType) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput)
}

type SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirementsRequired)(nil)).Elem()
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return o.ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(context.Background())
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationLdapPasswordParametersPasswordRequirementsRequired) *SecretRotationLdapPasswordParametersPasswordRequirementsRequired {
		return &v
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput)
}

// Minimum number of digits required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) Digits() pulumi.IntOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParametersPasswordRequirementsRequired) int { return v.Digits }).(pulumi.IntOutput)
}

// Minimum number of lowercase letters required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) Lowercase() pulumi.IntOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParametersPasswordRequirementsRequired) int { return v.Lowercase }).(pulumi.IntOutput)
}

// Minimum number of symbols required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) Symbols() pulumi.IntOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParametersPasswordRequirementsRequired) int { return v.Symbols }).(pulumi.IntOutput)
}

// Minimum number of uppercase letters required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput) Uppercase() pulumi.IntOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordParametersPasswordRequirementsRequired) int { return v.Uppercase }).(pulumi.IntOutput)
}

type SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordParametersPasswordRequirementsRequired)(nil)).Elem()
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) ToSecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) Elem() SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirementsRequired) SecretRotationLdapPasswordParametersPasswordRequirementsRequired {
		if v != nil {
			return *v
		}
		var ret SecretRotationLdapPasswordParametersPasswordRequirementsRequired
		return ret
	}).(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput)
}

// Minimum number of digits required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) Digits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Digits
	}).(pulumi.IntPtrOutput)
}

// Minimum number of lowercase letters required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) Lowercase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Lowercase
	}).(pulumi.IntPtrOutput)
}

// Minimum number of symbols required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) Symbols() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Symbols
	}).(pulumi.IntPtrOutput)
}

// Minimum number of uppercase letters required in the password.
func (o SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput) Uppercase() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordParametersPasswordRequirementsRequired) *int {
		if v == nil {
			return nil
		}
		return &v.Uppercase
	}).(pulumi.IntPtrOutput)
}

type SecretRotationLdapPasswordRotateAtUtc struct {
	// The hour at which the rotation should occur (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes *int `pulumi:"minutes"`
}

// SecretRotationLdapPasswordRotateAtUtcInput is an input type that accepts SecretRotationLdapPasswordRotateAtUtcArgs and SecretRotationLdapPasswordRotateAtUtcOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordRotateAtUtcInput` via:
//
//	SecretRotationLdapPasswordRotateAtUtcArgs{...}
type SecretRotationLdapPasswordRotateAtUtcInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordRotateAtUtcOutput() SecretRotationLdapPasswordRotateAtUtcOutput
	ToSecretRotationLdapPasswordRotateAtUtcOutputWithContext(context.Context) SecretRotationLdapPasswordRotateAtUtcOutput
}

type SecretRotationLdapPasswordRotateAtUtcArgs struct {
	// The hour at which the rotation should occur (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (SecretRotationLdapPasswordRotateAtUtcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordRotateAtUtc)(nil)).Elem()
}

func (i SecretRotationLdapPasswordRotateAtUtcArgs) ToSecretRotationLdapPasswordRotateAtUtcOutput() SecretRotationLdapPasswordRotateAtUtcOutput {
	return i.ToSecretRotationLdapPasswordRotateAtUtcOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordRotateAtUtcArgs) ToSecretRotationLdapPasswordRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationLdapPasswordRotateAtUtcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordRotateAtUtcOutput)
}

func (i SecretRotationLdapPasswordRotateAtUtcArgs) ToSecretRotationLdapPasswordRotateAtUtcPtrOutput() SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return i.ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordRotateAtUtcArgs) ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordRotateAtUtcOutput).ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(ctx)
}

// SecretRotationLdapPasswordRotateAtUtcPtrInput is an input type that accepts SecretRotationLdapPasswordRotateAtUtcArgs, SecretRotationLdapPasswordRotateAtUtcPtr and SecretRotationLdapPasswordRotateAtUtcPtrOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordRotateAtUtcPtrInput` via:
//
//	        SecretRotationLdapPasswordRotateAtUtcArgs{...}
//
//	or:
//
//	        nil
type SecretRotationLdapPasswordRotateAtUtcPtrInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordRotateAtUtcPtrOutput() SecretRotationLdapPasswordRotateAtUtcPtrOutput
	ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(context.Context) SecretRotationLdapPasswordRotateAtUtcPtrOutput
}

type secretRotationLdapPasswordRotateAtUtcPtrType SecretRotationLdapPasswordRotateAtUtcArgs

func SecretRotationLdapPasswordRotateAtUtcPtr(v *SecretRotationLdapPasswordRotateAtUtcArgs) SecretRotationLdapPasswordRotateAtUtcPtrInput {
	return (*secretRotationLdapPasswordRotateAtUtcPtrType)(v)
}

func (*secretRotationLdapPasswordRotateAtUtcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordRotateAtUtc)(nil)).Elem()
}

func (i *secretRotationLdapPasswordRotateAtUtcPtrType) ToSecretRotationLdapPasswordRotateAtUtcPtrOutput() SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return i.ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i *secretRotationLdapPasswordRotateAtUtcPtrType) ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordRotateAtUtcPtrOutput)
}

type SecretRotationLdapPasswordRotateAtUtcOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordRotateAtUtcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationLdapPasswordRotateAtUtcOutput) ToSecretRotationLdapPasswordRotateAtUtcOutput() SecretRotationLdapPasswordRotateAtUtcOutput {
	return o
}

func (o SecretRotationLdapPasswordRotateAtUtcOutput) ToSecretRotationLdapPasswordRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationLdapPasswordRotateAtUtcOutput {
	return o
}

func (o SecretRotationLdapPasswordRotateAtUtcOutput) ToSecretRotationLdapPasswordRotateAtUtcPtrOutput() SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return o.ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(context.Background())
}

func (o SecretRotationLdapPasswordRotateAtUtcOutput) ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationLdapPasswordRotateAtUtc) *SecretRotationLdapPasswordRotateAtUtc {
		return &v
	}).(SecretRotationLdapPasswordRotateAtUtcPtrOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationLdapPasswordRotateAtUtcOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordRotateAtUtc) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationLdapPasswordRotateAtUtcOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordRotateAtUtc) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type SecretRotationLdapPasswordRotateAtUtcPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordRotateAtUtcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationLdapPasswordRotateAtUtcPtrOutput) ToSecretRotationLdapPasswordRotateAtUtcPtrOutput() SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordRotateAtUtcPtrOutput) ToSecretRotationLdapPasswordRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordRotateAtUtcPtrOutput) Elem() SecretRotationLdapPasswordRotateAtUtcOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordRotateAtUtc) SecretRotationLdapPasswordRotateAtUtc {
		if v != nil {
			return *v
		}
		var ret SecretRotationLdapPasswordRotateAtUtc
		return ret
	}).(SecretRotationLdapPasswordRotateAtUtcOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationLdapPasswordRotateAtUtcPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationLdapPasswordRotateAtUtcPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type SecretRotationLdapPasswordSecretsMapping struct {
	// The name of the secret that the Distinguished Name will be mapped to.
	Dn string `pulumi:"dn"`
	// The name of the secret that the generated password will be mapped to.
	Password string `pulumi:"password"`
}

// SecretRotationLdapPasswordSecretsMappingInput is an input type that accepts SecretRotationLdapPasswordSecretsMappingArgs and SecretRotationLdapPasswordSecretsMappingOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordSecretsMappingInput` via:
//
//	SecretRotationLdapPasswordSecretsMappingArgs{...}
type SecretRotationLdapPasswordSecretsMappingInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordSecretsMappingOutput() SecretRotationLdapPasswordSecretsMappingOutput
	ToSecretRotationLdapPasswordSecretsMappingOutputWithContext(context.Context) SecretRotationLdapPasswordSecretsMappingOutput
}

type SecretRotationLdapPasswordSecretsMappingArgs struct {
	// The name of the secret that the Distinguished Name will be mapped to.
	Dn pulumi.StringInput `pulumi:"dn"`
	// The name of the secret that the generated password will be mapped to.
	Password pulumi.StringInput `pulumi:"password"`
}

func (SecretRotationLdapPasswordSecretsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordSecretsMapping)(nil)).Elem()
}

func (i SecretRotationLdapPasswordSecretsMappingArgs) ToSecretRotationLdapPasswordSecretsMappingOutput() SecretRotationLdapPasswordSecretsMappingOutput {
	return i.ToSecretRotationLdapPasswordSecretsMappingOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordSecretsMappingArgs) ToSecretRotationLdapPasswordSecretsMappingOutputWithContext(ctx context.Context) SecretRotationLdapPasswordSecretsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordSecretsMappingOutput)
}

func (i SecretRotationLdapPasswordSecretsMappingArgs) ToSecretRotationLdapPasswordSecretsMappingPtrOutput() SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return i.ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordSecretsMappingArgs) ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordSecretsMappingOutput).ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(ctx)
}

// SecretRotationLdapPasswordSecretsMappingPtrInput is an input type that accepts SecretRotationLdapPasswordSecretsMappingArgs, SecretRotationLdapPasswordSecretsMappingPtr and SecretRotationLdapPasswordSecretsMappingPtrOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordSecretsMappingPtrInput` via:
//
//	        SecretRotationLdapPasswordSecretsMappingArgs{...}
//
//	or:
//
//	        nil
type SecretRotationLdapPasswordSecretsMappingPtrInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordSecretsMappingPtrOutput() SecretRotationLdapPasswordSecretsMappingPtrOutput
	ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(context.Context) SecretRotationLdapPasswordSecretsMappingPtrOutput
}

type secretRotationLdapPasswordSecretsMappingPtrType SecretRotationLdapPasswordSecretsMappingArgs

func SecretRotationLdapPasswordSecretsMappingPtr(v *SecretRotationLdapPasswordSecretsMappingArgs) SecretRotationLdapPasswordSecretsMappingPtrInput {
	return (*secretRotationLdapPasswordSecretsMappingPtrType)(v)
}

func (*secretRotationLdapPasswordSecretsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordSecretsMapping)(nil)).Elem()
}

func (i *secretRotationLdapPasswordSecretsMappingPtrType) ToSecretRotationLdapPasswordSecretsMappingPtrOutput() SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return i.ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(context.Background())
}

func (i *secretRotationLdapPasswordSecretsMappingPtrType) ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordSecretsMappingPtrOutput)
}

type SecretRotationLdapPasswordSecretsMappingOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordSecretsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordSecretsMapping)(nil)).Elem()
}

func (o SecretRotationLdapPasswordSecretsMappingOutput) ToSecretRotationLdapPasswordSecretsMappingOutput() SecretRotationLdapPasswordSecretsMappingOutput {
	return o
}

func (o SecretRotationLdapPasswordSecretsMappingOutput) ToSecretRotationLdapPasswordSecretsMappingOutputWithContext(ctx context.Context) SecretRotationLdapPasswordSecretsMappingOutput {
	return o
}

func (o SecretRotationLdapPasswordSecretsMappingOutput) ToSecretRotationLdapPasswordSecretsMappingPtrOutput() SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return o.ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(context.Background())
}

func (o SecretRotationLdapPasswordSecretsMappingOutput) ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationLdapPasswordSecretsMapping) *SecretRotationLdapPasswordSecretsMapping {
		return &v
	}).(SecretRotationLdapPasswordSecretsMappingPtrOutput)
}

// The name of the secret that the Distinguished Name will be mapped to.
func (o SecretRotationLdapPasswordSecretsMappingOutput) Dn() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordSecretsMapping) string { return v.Dn }).(pulumi.StringOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationLdapPasswordSecretsMappingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordSecretsMapping) string { return v.Password }).(pulumi.StringOutput)
}

type SecretRotationLdapPasswordSecretsMappingPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordSecretsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordSecretsMapping)(nil)).Elem()
}

func (o SecretRotationLdapPasswordSecretsMappingPtrOutput) ToSecretRotationLdapPasswordSecretsMappingPtrOutput() SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordSecretsMappingPtrOutput) ToSecretRotationLdapPasswordSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordSecretsMappingPtrOutput) Elem() SecretRotationLdapPasswordSecretsMappingOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordSecretsMapping) SecretRotationLdapPasswordSecretsMapping {
		if v != nil {
			return *v
		}
		var ret SecretRotationLdapPasswordSecretsMapping
		return ret
	}).(SecretRotationLdapPasswordSecretsMappingOutput)
}

// The name of the secret that the Distinguished Name will be mapped to.
func (o SecretRotationLdapPasswordSecretsMappingPtrOutput) Dn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Dn
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationLdapPasswordSecretsMappingPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

type SecretRotationLdapPasswordTemporaryParameters struct {
	// The password of the provided principal if 'parameters.rotation_method' is set to 'target-principal'.
	Password *string `pulumi:"password"`
}

// SecretRotationLdapPasswordTemporaryParametersInput is an input type that accepts SecretRotationLdapPasswordTemporaryParametersArgs and SecretRotationLdapPasswordTemporaryParametersOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordTemporaryParametersInput` via:
//
//	SecretRotationLdapPasswordTemporaryParametersArgs{...}
type SecretRotationLdapPasswordTemporaryParametersInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordTemporaryParametersOutput() SecretRotationLdapPasswordTemporaryParametersOutput
	ToSecretRotationLdapPasswordTemporaryParametersOutputWithContext(context.Context) SecretRotationLdapPasswordTemporaryParametersOutput
}

type SecretRotationLdapPasswordTemporaryParametersArgs struct {
	// The password of the provided principal if 'parameters.rotation_method' is set to 'target-principal'.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (SecretRotationLdapPasswordTemporaryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordTemporaryParameters)(nil)).Elem()
}

func (i SecretRotationLdapPasswordTemporaryParametersArgs) ToSecretRotationLdapPasswordTemporaryParametersOutput() SecretRotationLdapPasswordTemporaryParametersOutput {
	return i.ToSecretRotationLdapPasswordTemporaryParametersOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordTemporaryParametersArgs) ToSecretRotationLdapPasswordTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationLdapPasswordTemporaryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordTemporaryParametersOutput)
}

func (i SecretRotationLdapPasswordTemporaryParametersArgs) ToSecretRotationLdapPasswordTemporaryParametersPtrOutput() SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return i.ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationLdapPasswordTemporaryParametersArgs) ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordTemporaryParametersOutput).ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(ctx)
}

// SecretRotationLdapPasswordTemporaryParametersPtrInput is an input type that accepts SecretRotationLdapPasswordTemporaryParametersArgs, SecretRotationLdapPasswordTemporaryParametersPtr and SecretRotationLdapPasswordTemporaryParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationLdapPasswordTemporaryParametersPtrInput` via:
//
//	        SecretRotationLdapPasswordTemporaryParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationLdapPasswordTemporaryParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationLdapPasswordTemporaryParametersPtrOutput() SecretRotationLdapPasswordTemporaryParametersPtrOutput
	ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(context.Context) SecretRotationLdapPasswordTemporaryParametersPtrOutput
}

type secretRotationLdapPasswordTemporaryParametersPtrType SecretRotationLdapPasswordTemporaryParametersArgs

func SecretRotationLdapPasswordTemporaryParametersPtr(v *SecretRotationLdapPasswordTemporaryParametersArgs) SecretRotationLdapPasswordTemporaryParametersPtrInput {
	return (*secretRotationLdapPasswordTemporaryParametersPtrType)(v)
}

func (*secretRotationLdapPasswordTemporaryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordTemporaryParameters)(nil)).Elem()
}

func (i *secretRotationLdapPasswordTemporaryParametersPtrType) ToSecretRotationLdapPasswordTemporaryParametersPtrOutput() SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return i.ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationLdapPasswordTemporaryParametersPtrType) ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationLdapPasswordTemporaryParametersPtrOutput)
}

type SecretRotationLdapPasswordTemporaryParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordTemporaryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationLdapPasswordTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationLdapPasswordTemporaryParametersOutput) ToSecretRotationLdapPasswordTemporaryParametersOutput() SecretRotationLdapPasswordTemporaryParametersOutput {
	return o
}

func (o SecretRotationLdapPasswordTemporaryParametersOutput) ToSecretRotationLdapPasswordTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationLdapPasswordTemporaryParametersOutput {
	return o
}

func (o SecretRotationLdapPasswordTemporaryParametersOutput) ToSecretRotationLdapPasswordTemporaryParametersPtrOutput() SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return o.ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationLdapPasswordTemporaryParametersOutput) ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationLdapPasswordTemporaryParameters) *SecretRotationLdapPasswordTemporaryParameters {
		return &v
	}).(SecretRotationLdapPasswordTemporaryParametersPtrOutput)
}

// The password of the provided principal if 'parameters.rotation_method' is set to 'target-principal'.
func (o SecretRotationLdapPasswordTemporaryParametersOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretRotationLdapPasswordTemporaryParameters) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type SecretRotationLdapPasswordTemporaryParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationLdapPasswordTemporaryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationLdapPasswordTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationLdapPasswordTemporaryParametersPtrOutput) ToSecretRotationLdapPasswordTemporaryParametersPtrOutput() SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordTemporaryParametersPtrOutput) ToSecretRotationLdapPasswordTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationLdapPasswordTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationLdapPasswordTemporaryParametersPtrOutput) Elem() SecretRotationLdapPasswordTemporaryParametersOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordTemporaryParameters) SecretRotationLdapPasswordTemporaryParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationLdapPasswordTemporaryParameters
		return ret
	}).(SecretRotationLdapPasswordTemporaryParametersOutput)
}

// The password of the provided principal if 'parameters.rotation_method' is set to 'target-principal'.
func (o SecretRotationLdapPasswordTemporaryParametersPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationLdapPasswordTemporaryParameters) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

type SecretRotationMssqlCredentialsParameters struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 string `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 string `pulumi:"username2"`
}

// SecretRotationMssqlCredentialsParametersInput is an input type that accepts SecretRotationMssqlCredentialsParametersArgs and SecretRotationMssqlCredentialsParametersOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsParametersInput` via:
//
//	SecretRotationMssqlCredentialsParametersArgs{...}
type SecretRotationMssqlCredentialsParametersInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsParametersOutput() SecretRotationMssqlCredentialsParametersOutput
	ToSecretRotationMssqlCredentialsParametersOutputWithContext(context.Context) SecretRotationMssqlCredentialsParametersOutput
}

type SecretRotationMssqlCredentialsParametersArgs struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 pulumi.StringInput `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 pulumi.StringInput `pulumi:"username2"`
}

func (SecretRotationMssqlCredentialsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsParameters)(nil)).Elem()
}

func (i SecretRotationMssqlCredentialsParametersArgs) ToSecretRotationMssqlCredentialsParametersOutput() SecretRotationMssqlCredentialsParametersOutput {
	return i.ToSecretRotationMssqlCredentialsParametersOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsParametersArgs) ToSecretRotationMssqlCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsParametersOutput)
}

func (i SecretRotationMssqlCredentialsParametersArgs) ToSecretRotationMssqlCredentialsParametersPtrOutput() SecretRotationMssqlCredentialsParametersPtrOutput {
	return i.ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsParametersArgs) ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsParametersOutput).ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(ctx)
}

// SecretRotationMssqlCredentialsParametersPtrInput is an input type that accepts SecretRotationMssqlCredentialsParametersArgs, SecretRotationMssqlCredentialsParametersPtr and SecretRotationMssqlCredentialsParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsParametersPtrInput` via:
//
//	        SecretRotationMssqlCredentialsParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMssqlCredentialsParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsParametersPtrOutput() SecretRotationMssqlCredentialsParametersPtrOutput
	ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(context.Context) SecretRotationMssqlCredentialsParametersPtrOutput
}

type secretRotationMssqlCredentialsParametersPtrType SecretRotationMssqlCredentialsParametersArgs

func SecretRotationMssqlCredentialsParametersPtr(v *SecretRotationMssqlCredentialsParametersArgs) SecretRotationMssqlCredentialsParametersPtrInput {
	return (*secretRotationMssqlCredentialsParametersPtrType)(v)
}

func (*secretRotationMssqlCredentialsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsParameters)(nil)).Elem()
}

func (i *secretRotationMssqlCredentialsParametersPtrType) ToSecretRotationMssqlCredentialsParametersPtrOutput() SecretRotationMssqlCredentialsParametersPtrOutput {
	return i.ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationMssqlCredentialsParametersPtrType) ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsParametersPtrOutput)
}

type SecretRotationMssqlCredentialsParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsParametersOutput) ToSecretRotationMssqlCredentialsParametersOutput() SecretRotationMssqlCredentialsParametersOutput {
	return o
}

func (o SecretRotationMssqlCredentialsParametersOutput) ToSecretRotationMssqlCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsParametersOutput {
	return o
}

func (o SecretRotationMssqlCredentialsParametersOutput) ToSecretRotationMssqlCredentialsParametersPtrOutput() SecretRotationMssqlCredentialsParametersPtrOutput {
	return o.ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationMssqlCredentialsParametersOutput) ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMssqlCredentialsParameters) *SecretRotationMssqlCredentialsParameters {
		return &v
	}).(SecretRotationMssqlCredentialsParametersPtrOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMssqlCredentialsParametersOutput) Username1() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMssqlCredentialsParameters) string { return v.Username1 }).(pulumi.StringOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMssqlCredentialsParametersOutput) Username2() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMssqlCredentialsParameters) string { return v.Username2 }).(pulumi.StringOutput)
}

type SecretRotationMssqlCredentialsParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsParametersPtrOutput) ToSecretRotationMssqlCredentialsParametersPtrOutput() SecretRotationMssqlCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsParametersPtrOutput) ToSecretRotationMssqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsParametersPtrOutput) Elem() SecretRotationMssqlCredentialsParametersOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsParameters) SecretRotationMssqlCredentialsParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationMssqlCredentialsParameters
		return ret
	}).(SecretRotationMssqlCredentialsParametersOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMssqlCredentialsParametersPtrOutput) Username1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username1
	}).(pulumi.StringPtrOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMssqlCredentialsParametersPtrOutput) Username2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username2
	}).(pulumi.StringPtrOutput)
}

type SecretRotationMssqlCredentialsRotateAtUtc struct {
	// The hour at which the rotation should occur (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes *int `pulumi:"minutes"`
}

// SecretRotationMssqlCredentialsRotateAtUtcInput is an input type that accepts SecretRotationMssqlCredentialsRotateAtUtcArgs and SecretRotationMssqlCredentialsRotateAtUtcOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsRotateAtUtcInput` via:
//
//	SecretRotationMssqlCredentialsRotateAtUtcArgs{...}
type SecretRotationMssqlCredentialsRotateAtUtcInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsRotateAtUtcOutput() SecretRotationMssqlCredentialsRotateAtUtcOutput
	ToSecretRotationMssqlCredentialsRotateAtUtcOutputWithContext(context.Context) SecretRotationMssqlCredentialsRotateAtUtcOutput
}

type SecretRotationMssqlCredentialsRotateAtUtcArgs struct {
	// The hour at which the rotation should occur (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (SecretRotationMssqlCredentialsRotateAtUtcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (i SecretRotationMssqlCredentialsRotateAtUtcArgs) ToSecretRotationMssqlCredentialsRotateAtUtcOutput() SecretRotationMssqlCredentialsRotateAtUtcOutput {
	return i.ToSecretRotationMssqlCredentialsRotateAtUtcOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsRotateAtUtcArgs) ToSecretRotationMssqlCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsRotateAtUtcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsRotateAtUtcOutput)
}

func (i SecretRotationMssqlCredentialsRotateAtUtcArgs) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutput() SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsRotateAtUtcArgs) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsRotateAtUtcOutput).ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(ctx)
}

// SecretRotationMssqlCredentialsRotateAtUtcPtrInput is an input type that accepts SecretRotationMssqlCredentialsRotateAtUtcArgs, SecretRotationMssqlCredentialsRotateAtUtcPtr and SecretRotationMssqlCredentialsRotateAtUtcPtrOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsRotateAtUtcPtrInput` via:
//
//	        SecretRotationMssqlCredentialsRotateAtUtcArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMssqlCredentialsRotateAtUtcPtrInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutput() SecretRotationMssqlCredentialsRotateAtUtcPtrOutput
	ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(context.Context) SecretRotationMssqlCredentialsRotateAtUtcPtrOutput
}

type secretRotationMssqlCredentialsRotateAtUtcPtrType SecretRotationMssqlCredentialsRotateAtUtcArgs

func SecretRotationMssqlCredentialsRotateAtUtcPtr(v *SecretRotationMssqlCredentialsRotateAtUtcArgs) SecretRotationMssqlCredentialsRotateAtUtcPtrInput {
	return (*secretRotationMssqlCredentialsRotateAtUtcPtrType)(v)
}

func (*secretRotationMssqlCredentialsRotateAtUtcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (i *secretRotationMssqlCredentialsRotateAtUtcPtrType) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutput() SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i *secretRotationMssqlCredentialsRotateAtUtcPtrType) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsRotateAtUtcPtrOutput)
}

type SecretRotationMssqlCredentialsRotateAtUtcOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsRotateAtUtcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsRotateAtUtcOutput) ToSecretRotationMssqlCredentialsRotateAtUtcOutput() SecretRotationMssqlCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationMssqlCredentialsRotateAtUtcOutput) ToSecretRotationMssqlCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationMssqlCredentialsRotateAtUtcOutput) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutput() SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return o.ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (o SecretRotationMssqlCredentialsRotateAtUtcOutput) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMssqlCredentialsRotateAtUtc) *SecretRotationMssqlCredentialsRotateAtUtc {
		return &v
	}).(SecretRotationMssqlCredentialsRotateAtUtcPtrOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationMssqlCredentialsRotateAtUtcOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationMssqlCredentialsRotateAtUtc) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationMssqlCredentialsRotateAtUtcOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationMssqlCredentialsRotateAtUtc) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type SecretRotationMssqlCredentialsRotateAtUtcPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsRotateAtUtcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsRotateAtUtcPtrOutput) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutput() SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsRotateAtUtcPtrOutput) ToSecretRotationMssqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsRotateAtUtcPtrOutput) Elem() SecretRotationMssqlCredentialsRotateAtUtcOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsRotateAtUtc) SecretRotationMssqlCredentialsRotateAtUtc {
		if v != nil {
			return *v
		}
		var ret SecretRotationMssqlCredentialsRotateAtUtc
		return ret
	}).(SecretRotationMssqlCredentialsRotateAtUtcOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationMssqlCredentialsRotateAtUtcPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationMssqlCredentialsRotateAtUtcPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type SecretRotationMssqlCredentialsSecretsMapping struct {
	// The name of the secret that the generated password will be mapped to.
	Password string `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username string `pulumi:"username"`
}

// SecretRotationMssqlCredentialsSecretsMappingInput is an input type that accepts SecretRotationMssqlCredentialsSecretsMappingArgs and SecretRotationMssqlCredentialsSecretsMappingOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsSecretsMappingInput` via:
//
//	SecretRotationMssqlCredentialsSecretsMappingArgs{...}
type SecretRotationMssqlCredentialsSecretsMappingInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsSecretsMappingOutput() SecretRotationMssqlCredentialsSecretsMappingOutput
	ToSecretRotationMssqlCredentialsSecretsMappingOutputWithContext(context.Context) SecretRotationMssqlCredentialsSecretsMappingOutput
}

type SecretRotationMssqlCredentialsSecretsMappingArgs struct {
	// The name of the secret that the generated password will be mapped to.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretRotationMssqlCredentialsSecretsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsSecretsMapping)(nil)).Elem()
}

func (i SecretRotationMssqlCredentialsSecretsMappingArgs) ToSecretRotationMssqlCredentialsSecretsMappingOutput() SecretRotationMssqlCredentialsSecretsMappingOutput {
	return i.ToSecretRotationMssqlCredentialsSecretsMappingOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsSecretsMappingArgs) ToSecretRotationMssqlCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsSecretsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsSecretsMappingOutput)
}

func (i SecretRotationMssqlCredentialsSecretsMappingArgs) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutput() SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsSecretsMappingArgs) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsSecretsMappingOutput).ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(ctx)
}

// SecretRotationMssqlCredentialsSecretsMappingPtrInput is an input type that accepts SecretRotationMssqlCredentialsSecretsMappingArgs, SecretRotationMssqlCredentialsSecretsMappingPtr and SecretRotationMssqlCredentialsSecretsMappingPtrOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsSecretsMappingPtrInput` via:
//
//	        SecretRotationMssqlCredentialsSecretsMappingArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMssqlCredentialsSecretsMappingPtrInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsSecretsMappingPtrOutput() SecretRotationMssqlCredentialsSecretsMappingPtrOutput
	ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(context.Context) SecretRotationMssqlCredentialsSecretsMappingPtrOutput
}

type secretRotationMssqlCredentialsSecretsMappingPtrType SecretRotationMssqlCredentialsSecretsMappingArgs

func SecretRotationMssqlCredentialsSecretsMappingPtr(v *SecretRotationMssqlCredentialsSecretsMappingArgs) SecretRotationMssqlCredentialsSecretsMappingPtrInput {
	return (*secretRotationMssqlCredentialsSecretsMappingPtrType)(v)
}

func (*secretRotationMssqlCredentialsSecretsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsSecretsMapping)(nil)).Elem()
}

func (i *secretRotationMssqlCredentialsSecretsMappingPtrType) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutput() SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i *secretRotationMssqlCredentialsSecretsMappingPtrType) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsSecretsMappingPtrOutput)
}

type SecretRotationMssqlCredentialsSecretsMappingOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsSecretsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsSecretsMappingOutput) ToSecretRotationMssqlCredentialsSecretsMappingOutput() SecretRotationMssqlCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationMssqlCredentialsSecretsMappingOutput) ToSecretRotationMssqlCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationMssqlCredentialsSecretsMappingOutput) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutput() SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return o.ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (o SecretRotationMssqlCredentialsSecretsMappingOutput) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMssqlCredentialsSecretsMapping) *SecretRotationMssqlCredentialsSecretsMapping {
		return &v
	}).(SecretRotationMssqlCredentialsSecretsMappingPtrOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationMssqlCredentialsSecretsMappingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMssqlCredentialsSecretsMapping) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationMssqlCredentialsSecretsMappingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMssqlCredentialsSecretsMapping) string { return v.Username }).(pulumi.StringOutput)
}

type SecretRotationMssqlCredentialsSecretsMappingPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsSecretsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsSecretsMappingPtrOutput) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutput() SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsSecretsMappingPtrOutput) ToSecretRotationMssqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsSecretsMappingPtrOutput) Elem() SecretRotationMssqlCredentialsSecretsMappingOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsSecretsMapping) SecretRotationMssqlCredentialsSecretsMapping {
		if v != nil {
			return *v
		}
		var ret SecretRotationMssqlCredentialsSecretsMapping
		return ret
	}).(SecretRotationMssqlCredentialsSecretsMappingOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationMssqlCredentialsSecretsMappingPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationMssqlCredentialsSecretsMappingPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretRotationMssqlCredentialsTemporaryParameters struct {
}

// SecretRotationMssqlCredentialsTemporaryParametersInput is an input type that accepts SecretRotationMssqlCredentialsTemporaryParametersArgs and SecretRotationMssqlCredentialsTemporaryParametersOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsTemporaryParametersInput` via:
//
//	SecretRotationMssqlCredentialsTemporaryParametersArgs{...}
type SecretRotationMssqlCredentialsTemporaryParametersInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsTemporaryParametersOutput() SecretRotationMssqlCredentialsTemporaryParametersOutput
	ToSecretRotationMssqlCredentialsTemporaryParametersOutputWithContext(context.Context) SecretRotationMssqlCredentialsTemporaryParametersOutput
}

type SecretRotationMssqlCredentialsTemporaryParametersArgs struct {
}

func (SecretRotationMssqlCredentialsTemporaryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (i SecretRotationMssqlCredentialsTemporaryParametersArgs) ToSecretRotationMssqlCredentialsTemporaryParametersOutput() SecretRotationMssqlCredentialsTemporaryParametersOutput {
	return i.ToSecretRotationMssqlCredentialsTemporaryParametersOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsTemporaryParametersArgs) ToSecretRotationMssqlCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsTemporaryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsTemporaryParametersOutput)
}

func (i SecretRotationMssqlCredentialsTemporaryParametersArgs) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutput() SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationMssqlCredentialsTemporaryParametersArgs) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsTemporaryParametersOutput).ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(ctx)
}

// SecretRotationMssqlCredentialsTemporaryParametersPtrInput is an input type that accepts SecretRotationMssqlCredentialsTemporaryParametersArgs, SecretRotationMssqlCredentialsTemporaryParametersPtr and SecretRotationMssqlCredentialsTemporaryParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationMssqlCredentialsTemporaryParametersPtrInput` via:
//
//	        SecretRotationMssqlCredentialsTemporaryParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMssqlCredentialsTemporaryParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutput() SecretRotationMssqlCredentialsTemporaryParametersPtrOutput
	ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(context.Context) SecretRotationMssqlCredentialsTemporaryParametersPtrOutput
}

type secretRotationMssqlCredentialsTemporaryParametersPtrType SecretRotationMssqlCredentialsTemporaryParametersArgs

func SecretRotationMssqlCredentialsTemporaryParametersPtr(v *SecretRotationMssqlCredentialsTemporaryParametersArgs) SecretRotationMssqlCredentialsTemporaryParametersPtrInput {
	return (*secretRotationMssqlCredentialsTemporaryParametersPtrType)(v)
}

func (*secretRotationMssqlCredentialsTemporaryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (i *secretRotationMssqlCredentialsTemporaryParametersPtrType) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutput() SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationMssqlCredentialsTemporaryParametersPtrType) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMssqlCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationMssqlCredentialsTemporaryParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsTemporaryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMssqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsTemporaryParametersOutput) ToSecretRotationMssqlCredentialsTemporaryParametersOutput() SecretRotationMssqlCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationMssqlCredentialsTemporaryParametersOutput) ToSecretRotationMssqlCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationMssqlCredentialsTemporaryParametersOutput) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutput() SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return o.ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationMssqlCredentialsTemporaryParametersOutput) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMssqlCredentialsTemporaryParameters) *SecretRotationMssqlCredentialsTemporaryParameters {
		return &v
	}).(SecretRotationMssqlCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationMssqlCredentialsTemporaryParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMssqlCredentialsTemporaryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMssqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationMssqlCredentialsTemporaryParametersPtrOutput) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutput() SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsTemporaryParametersPtrOutput) ToSecretRotationMssqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMssqlCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationMssqlCredentialsTemporaryParametersPtrOutput) Elem() SecretRotationMssqlCredentialsTemporaryParametersOutput {
	return o.ApplyT(func(v *SecretRotationMssqlCredentialsTemporaryParameters) SecretRotationMssqlCredentialsTemporaryParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationMssqlCredentialsTemporaryParameters
		return ret
	}).(SecretRotationMssqlCredentialsTemporaryParametersOutput)
}

type SecretRotationMysqlCredentialsParameters struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 string `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 string `pulumi:"username2"`
}

// SecretRotationMysqlCredentialsParametersInput is an input type that accepts SecretRotationMysqlCredentialsParametersArgs and SecretRotationMysqlCredentialsParametersOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsParametersInput` via:
//
//	SecretRotationMysqlCredentialsParametersArgs{...}
type SecretRotationMysqlCredentialsParametersInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsParametersOutput() SecretRotationMysqlCredentialsParametersOutput
	ToSecretRotationMysqlCredentialsParametersOutputWithContext(context.Context) SecretRotationMysqlCredentialsParametersOutput
}

type SecretRotationMysqlCredentialsParametersArgs struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 pulumi.StringInput `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 pulumi.StringInput `pulumi:"username2"`
}

func (SecretRotationMysqlCredentialsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsParameters)(nil)).Elem()
}

func (i SecretRotationMysqlCredentialsParametersArgs) ToSecretRotationMysqlCredentialsParametersOutput() SecretRotationMysqlCredentialsParametersOutput {
	return i.ToSecretRotationMysqlCredentialsParametersOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsParametersArgs) ToSecretRotationMysqlCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsParametersOutput)
}

func (i SecretRotationMysqlCredentialsParametersArgs) ToSecretRotationMysqlCredentialsParametersPtrOutput() SecretRotationMysqlCredentialsParametersPtrOutput {
	return i.ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsParametersArgs) ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsParametersOutput).ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(ctx)
}

// SecretRotationMysqlCredentialsParametersPtrInput is an input type that accepts SecretRotationMysqlCredentialsParametersArgs, SecretRotationMysqlCredentialsParametersPtr and SecretRotationMysqlCredentialsParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsParametersPtrInput` via:
//
//	        SecretRotationMysqlCredentialsParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMysqlCredentialsParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsParametersPtrOutput() SecretRotationMysqlCredentialsParametersPtrOutput
	ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(context.Context) SecretRotationMysqlCredentialsParametersPtrOutput
}

type secretRotationMysqlCredentialsParametersPtrType SecretRotationMysqlCredentialsParametersArgs

func SecretRotationMysqlCredentialsParametersPtr(v *SecretRotationMysqlCredentialsParametersArgs) SecretRotationMysqlCredentialsParametersPtrInput {
	return (*secretRotationMysqlCredentialsParametersPtrType)(v)
}

func (*secretRotationMysqlCredentialsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsParameters)(nil)).Elem()
}

func (i *secretRotationMysqlCredentialsParametersPtrType) ToSecretRotationMysqlCredentialsParametersPtrOutput() SecretRotationMysqlCredentialsParametersPtrOutput {
	return i.ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationMysqlCredentialsParametersPtrType) ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsParametersPtrOutput)
}

type SecretRotationMysqlCredentialsParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsParametersOutput) ToSecretRotationMysqlCredentialsParametersOutput() SecretRotationMysqlCredentialsParametersOutput {
	return o
}

func (o SecretRotationMysqlCredentialsParametersOutput) ToSecretRotationMysqlCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsParametersOutput {
	return o
}

func (o SecretRotationMysqlCredentialsParametersOutput) ToSecretRotationMysqlCredentialsParametersPtrOutput() SecretRotationMysqlCredentialsParametersPtrOutput {
	return o.ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationMysqlCredentialsParametersOutput) ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMysqlCredentialsParameters) *SecretRotationMysqlCredentialsParameters {
		return &v
	}).(SecretRotationMysqlCredentialsParametersPtrOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMysqlCredentialsParametersOutput) Username1() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMysqlCredentialsParameters) string { return v.Username1 }).(pulumi.StringOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMysqlCredentialsParametersOutput) Username2() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMysqlCredentialsParameters) string { return v.Username2 }).(pulumi.StringOutput)
}

type SecretRotationMysqlCredentialsParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsParametersPtrOutput) ToSecretRotationMysqlCredentialsParametersPtrOutput() SecretRotationMysqlCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsParametersPtrOutput) ToSecretRotationMysqlCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsParametersPtrOutput) Elem() SecretRotationMysqlCredentialsParametersOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsParameters) SecretRotationMysqlCredentialsParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationMysqlCredentialsParameters
		return ret
	}).(SecretRotationMysqlCredentialsParametersOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMysqlCredentialsParametersPtrOutput) Username1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username1
	}).(pulumi.StringPtrOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationMysqlCredentialsParametersPtrOutput) Username2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username2
	}).(pulumi.StringPtrOutput)
}

type SecretRotationMysqlCredentialsRotateAtUtc struct {
	// The hour at which the rotation should occur (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes *int `pulumi:"minutes"`
}

// SecretRotationMysqlCredentialsRotateAtUtcInput is an input type that accepts SecretRotationMysqlCredentialsRotateAtUtcArgs and SecretRotationMysqlCredentialsRotateAtUtcOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsRotateAtUtcInput` via:
//
//	SecretRotationMysqlCredentialsRotateAtUtcArgs{...}
type SecretRotationMysqlCredentialsRotateAtUtcInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsRotateAtUtcOutput() SecretRotationMysqlCredentialsRotateAtUtcOutput
	ToSecretRotationMysqlCredentialsRotateAtUtcOutputWithContext(context.Context) SecretRotationMysqlCredentialsRotateAtUtcOutput
}

type SecretRotationMysqlCredentialsRotateAtUtcArgs struct {
	// The hour at which the rotation should occur (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (SecretRotationMysqlCredentialsRotateAtUtcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (i SecretRotationMysqlCredentialsRotateAtUtcArgs) ToSecretRotationMysqlCredentialsRotateAtUtcOutput() SecretRotationMysqlCredentialsRotateAtUtcOutput {
	return i.ToSecretRotationMysqlCredentialsRotateAtUtcOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsRotateAtUtcArgs) ToSecretRotationMysqlCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsRotateAtUtcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsRotateAtUtcOutput)
}

func (i SecretRotationMysqlCredentialsRotateAtUtcArgs) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutput() SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsRotateAtUtcArgs) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsRotateAtUtcOutput).ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(ctx)
}

// SecretRotationMysqlCredentialsRotateAtUtcPtrInput is an input type that accepts SecretRotationMysqlCredentialsRotateAtUtcArgs, SecretRotationMysqlCredentialsRotateAtUtcPtr and SecretRotationMysqlCredentialsRotateAtUtcPtrOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsRotateAtUtcPtrInput` via:
//
//	        SecretRotationMysqlCredentialsRotateAtUtcArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMysqlCredentialsRotateAtUtcPtrInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutput() SecretRotationMysqlCredentialsRotateAtUtcPtrOutput
	ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(context.Context) SecretRotationMysqlCredentialsRotateAtUtcPtrOutput
}

type secretRotationMysqlCredentialsRotateAtUtcPtrType SecretRotationMysqlCredentialsRotateAtUtcArgs

func SecretRotationMysqlCredentialsRotateAtUtcPtr(v *SecretRotationMysqlCredentialsRotateAtUtcArgs) SecretRotationMysqlCredentialsRotateAtUtcPtrInput {
	return (*secretRotationMysqlCredentialsRotateAtUtcPtrType)(v)
}

func (*secretRotationMysqlCredentialsRotateAtUtcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (i *secretRotationMysqlCredentialsRotateAtUtcPtrType) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutput() SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i *secretRotationMysqlCredentialsRotateAtUtcPtrType) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsRotateAtUtcPtrOutput)
}

type SecretRotationMysqlCredentialsRotateAtUtcOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsRotateAtUtcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsRotateAtUtcOutput) ToSecretRotationMysqlCredentialsRotateAtUtcOutput() SecretRotationMysqlCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationMysqlCredentialsRotateAtUtcOutput) ToSecretRotationMysqlCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationMysqlCredentialsRotateAtUtcOutput) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutput() SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return o.ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (o SecretRotationMysqlCredentialsRotateAtUtcOutput) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMysqlCredentialsRotateAtUtc) *SecretRotationMysqlCredentialsRotateAtUtc {
		return &v
	}).(SecretRotationMysqlCredentialsRotateAtUtcPtrOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationMysqlCredentialsRotateAtUtcOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationMysqlCredentialsRotateAtUtc) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationMysqlCredentialsRotateAtUtcOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationMysqlCredentialsRotateAtUtc) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type SecretRotationMysqlCredentialsRotateAtUtcPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsRotateAtUtcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsRotateAtUtcPtrOutput) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutput() SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsRotateAtUtcPtrOutput) ToSecretRotationMysqlCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsRotateAtUtcPtrOutput) Elem() SecretRotationMysqlCredentialsRotateAtUtcOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsRotateAtUtc) SecretRotationMysqlCredentialsRotateAtUtc {
		if v != nil {
			return *v
		}
		var ret SecretRotationMysqlCredentialsRotateAtUtc
		return ret
	}).(SecretRotationMysqlCredentialsRotateAtUtcOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationMysqlCredentialsRotateAtUtcPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationMysqlCredentialsRotateAtUtcPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type SecretRotationMysqlCredentialsSecretsMapping struct {
	// The name of the secret that the generated password will be mapped to.
	Password string `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username string `pulumi:"username"`
}

// SecretRotationMysqlCredentialsSecretsMappingInput is an input type that accepts SecretRotationMysqlCredentialsSecretsMappingArgs and SecretRotationMysqlCredentialsSecretsMappingOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsSecretsMappingInput` via:
//
//	SecretRotationMysqlCredentialsSecretsMappingArgs{...}
type SecretRotationMysqlCredentialsSecretsMappingInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsSecretsMappingOutput() SecretRotationMysqlCredentialsSecretsMappingOutput
	ToSecretRotationMysqlCredentialsSecretsMappingOutputWithContext(context.Context) SecretRotationMysqlCredentialsSecretsMappingOutput
}

type SecretRotationMysqlCredentialsSecretsMappingArgs struct {
	// The name of the secret that the generated password will be mapped to.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretRotationMysqlCredentialsSecretsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsSecretsMapping)(nil)).Elem()
}

func (i SecretRotationMysqlCredentialsSecretsMappingArgs) ToSecretRotationMysqlCredentialsSecretsMappingOutput() SecretRotationMysqlCredentialsSecretsMappingOutput {
	return i.ToSecretRotationMysqlCredentialsSecretsMappingOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsSecretsMappingArgs) ToSecretRotationMysqlCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsSecretsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsSecretsMappingOutput)
}

func (i SecretRotationMysqlCredentialsSecretsMappingArgs) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutput() SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsSecretsMappingArgs) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsSecretsMappingOutput).ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(ctx)
}

// SecretRotationMysqlCredentialsSecretsMappingPtrInput is an input type that accepts SecretRotationMysqlCredentialsSecretsMappingArgs, SecretRotationMysqlCredentialsSecretsMappingPtr and SecretRotationMysqlCredentialsSecretsMappingPtrOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsSecretsMappingPtrInput` via:
//
//	        SecretRotationMysqlCredentialsSecretsMappingArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMysqlCredentialsSecretsMappingPtrInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsSecretsMappingPtrOutput() SecretRotationMysqlCredentialsSecretsMappingPtrOutput
	ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(context.Context) SecretRotationMysqlCredentialsSecretsMappingPtrOutput
}

type secretRotationMysqlCredentialsSecretsMappingPtrType SecretRotationMysqlCredentialsSecretsMappingArgs

func SecretRotationMysqlCredentialsSecretsMappingPtr(v *SecretRotationMysqlCredentialsSecretsMappingArgs) SecretRotationMysqlCredentialsSecretsMappingPtrInput {
	return (*secretRotationMysqlCredentialsSecretsMappingPtrType)(v)
}

func (*secretRotationMysqlCredentialsSecretsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsSecretsMapping)(nil)).Elem()
}

func (i *secretRotationMysqlCredentialsSecretsMappingPtrType) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutput() SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i *secretRotationMysqlCredentialsSecretsMappingPtrType) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsSecretsMappingPtrOutput)
}

type SecretRotationMysqlCredentialsSecretsMappingOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsSecretsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsSecretsMappingOutput) ToSecretRotationMysqlCredentialsSecretsMappingOutput() SecretRotationMysqlCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationMysqlCredentialsSecretsMappingOutput) ToSecretRotationMysqlCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationMysqlCredentialsSecretsMappingOutput) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutput() SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return o.ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (o SecretRotationMysqlCredentialsSecretsMappingOutput) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMysqlCredentialsSecretsMapping) *SecretRotationMysqlCredentialsSecretsMapping {
		return &v
	}).(SecretRotationMysqlCredentialsSecretsMappingPtrOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationMysqlCredentialsSecretsMappingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMysqlCredentialsSecretsMapping) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationMysqlCredentialsSecretsMappingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationMysqlCredentialsSecretsMapping) string { return v.Username }).(pulumi.StringOutput)
}

type SecretRotationMysqlCredentialsSecretsMappingPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsSecretsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsSecretsMappingPtrOutput) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutput() SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsSecretsMappingPtrOutput) ToSecretRotationMysqlCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsSecretsMappingPtrOutput) Elem() SecretRotationMysqlCredentialsSecretsMappingOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsSecretsMapping) SecretRotationMysqlCredentialsSecretsMapping {
		if v != nil {
			return *v
		}
		var ret SecretRotationMysqlCredentialsSecretsMapping
		return ret
	}).(SecretRotationMysqlCredentialsSecretsMappingOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationMysqlCredentialsSecretsMappingPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationMysqlCredentialsSecretsMappingPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretRotationMysqlCredentialsTemporaryParameters struct {
}

// SecretRotationMysqlCredentialsTemporaryParametersInput is an input type that accepts SecretRotationMysqlCredentialsTemporaryParametersArgs and SecretRotationMysqlCredentialsTemporaryParametersOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsTemporaryParametersInput` via:
//
//	SecretRotationMysqlCredentialsTemporaryParametersArgs{...}
type SecretRotationMysqlCredentialsTemporaryParametersInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsTemporaryParametersOutput() SecretRotationMysqlCredentialsTemporaryParametersOutput
	ToSecretRotationMysqlCredentialsTemporaryParametersOutputWithContext(context.Context) SecretRotationMysqlCredentialsTemporaryParametersOutput
}

type SecretRotationMysqlCredentialsTemporaryParametersArgs struct {
}

func (SecretRotationMysqlCredentialsTemporaryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (i SecretRotationMysqlCredentialsTemporaryParametersArgs) ToSecretRotationMysqlCredentialsTemporaryParametersOutput() SecretRotationMysqlCredentialsTemporaryParametersOutput {
	return i.ToSecretRotationMysqlCredentialsTemporaryParametersOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsTemporaryParametersArgs) ToSecretRotationMysqlCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsTemporaryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsTemporaryParametersOutput)
}

func (i SecretRotationMysqlCredentialsTemporaryParametersArgs) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutput() SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationMysqlCredentialsTemporaryParametersArgs) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsTemporaryParametersOutput).ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(ctx)
}

// SecretRotationMysqlCredentialsTemporaryParametersPtrInput is an input type that accepts SecretRotationMysqlCredentialsTemporaryParametersArgs, SecretRotationMysqlCredentialsTemporaryParametersPtr and SecretRotationMysqlCredentialsTemporaryParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationMysqlCredentialsTemporaryParametersPtrInput` via:
//
//	        SecretRotationMysqlCredentialsTemporaryParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationMysqlCredentialsTemporaryParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutput() SecretRotationMysqlCredentialsTemporaryParametersPtrOutput
	ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(context.Context) SecretRotationMysqlCredentialsTemporaryParametersPtrOutput
}

type secretRotationMysqlCredentialsTemporaryParametersPtrType SecretRotationMysqlCredentialsTemporaryParametersArgs

func SecretRotationMysqlCredentialsTemporaryParametersPtr(v *SecretRotationMysqlCredentialsTemporaryParametersArgs) SecretRotationMysqlCredentialsTemporaryParametersPtrInput {
	return (*secretRotationMysqlCredentialsTemporaryParametersPtrType)(v)
}

func (*secretRotationMysqlCredentialsTemporaryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (i *secretRotationMysqlCredentialsTemporaryParametersPtrType) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutput() SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationMysqlCredentialsTemporaryParametersPtrType) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationMysqlCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationMysqlCredentialsTemporaryParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsTemporaryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationMysqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsTemporaryParametersOutput) ToSecretRotationMysqlCredentialsTemporaryParametersOutput() SecretRotationMysqlCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationMysqlCredentialsTemporaryParametersOutput) ToSecretRotationMysqlCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationMysqlCredentialsTemporaryParametersOutput) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutput() SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return o.ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationMysqlCredentialsTemporaryParametersOutput) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationMysqlCredentialsTemporaryParameters) *SecretRotationMysqlCredentialsTemporaryParameters {
		return &v
	}).(SecretRotationMysqlCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationMysqlCredentialsTemporaryParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationMysqlCredentialsTemporaryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationMysqlCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationMysqlCredentialsTemporaryParametersPtrOutput) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutput() SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsTemporaryParametersPtrOutput) ToSecretRotationMysqlCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationMysqlCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationMysqlCredentialsTemporaryParametersPtrOutput) Elem() SecretRotationMysqlCredentialsTemporaryParametersOutput {
	return o.ApplyT(func(v *SecretRotationMysqlCredentialsTemporaryParameters) SecretRotationMysqlCredentialsTemporaryParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationMysqlCredentialsTemporaryParameters
		return ret
	}).(SecretRotationMysqlCredentialsTemporaryParametersOutput)
}

type SecretRotationOracledbCredentialsParameters struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 string `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 string `pulumi:"username2"`
}

// SecretRotationOracledbCredentialsParametersInput is an input type that accepts SecretRotationOracledbCredentialsParametersArgs and SecretRotationOracledbCredentialsParametersOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsParametersInput` via:
//
//	SecretRotationOracledbCredentialsParametersArgs{...}
type SecretRotationOracledbCredentialsParametersInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsParametersOutput() SecretRotationOracledbCredentialsParametersOutput
	ToSecretRotationOracledbCredentialsParametersOutputWithContext(context.Context) SecretRotationOracledbCredentialsParametersOutput
}

type SecretRotationOracledbCredentialsParametersArgs struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 pulumi.StringInput `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 pulumi.StringInput `pulumi:"username2"`
}

func (SecretRotationOracledbCredentialsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsParameters)(nil)).Elem()
}

func (i SecretRotationOracledbCredentialsParametersArgs) ToSecretRotationOracledbCredentialsParametersOutput() SecretRotationOracledbCredentialsParametersOutput {
	return i.ToSecretRotationOracledbCredentialsParametersOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsParametersArgs) ToSecretRotationOracledbCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsParametersOutput)
}

func (i SecretRotationOracledbCredentialsParametersArgs) ToSecretRotationOracledbCredentialsParametersPtrOutput() SecretRotationOracledbCredentialsParametersPtrOutput {
	return i.ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsParametersArgs) ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsParametersOutput).ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(ctx)
}

// SecretRotationOracledbCredentialsParametersPtrInput is an input type that accepts SecretRotationOracledbCredentialsParametersArgs, SecretRotationOracledbCredentialsParametersPtr and SecretRotationOracledbCredentialsParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsParametersPtrInput` via:
//
//	        SecretRotationOracledbCredentialsParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationOracledbCredentialsParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsParametersPtrOutput() SecretRotationOracledbCredentialsParametersPtrOutput
	ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(context.Context) SecretRotationOracledbCredentialsParametersPtrOutput
}

type secretRotationOracledbCredentialsParametersPtrType SecretRotationOracledbCredentialsParametersArgs

func SecretRotationOracledbCredentialsParametersPtr(v *SecretRotationOracledbCredentialsParametersArgs) SecretRotationOracledbCredentialsParametersPtrInput {
	return (*secretRotationOracledbCredentialsParametersPtrType)(v)
}

func (*secretRotationOracledbCredentialsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsParameters)(nil)).Elem()
}

func (i *secretRotationOracledbCredentialsParametersPtrType) ToSecretRotationOracledbCredentialsParametersPtrOutput() SecretRotationOracledbCredentialsParametersPtrOutput {
	return i.ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationOracledbCredentialsParametersPtrType) ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsParametersPtrOutput)
}

type SecretRotationOracledbCredentialsParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsParametersOutput) ToSecretRotationOracledbCredentialsParametersOutput() SecretRotationOracledbCredentialsParametersOutput {
	return o
}

func (o SecretRotationOracledbCredentialsParametersOutput) ToSecretRotationOracledbCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsParametersOutput {
	return o
}

func (o SecretRotationOracledbCredentialsParametersOutput) ToSecretRotationOracledbCredentialsParametersPtrOutput() SecretRotationOracledbCredentialsParametersPtrOutput {
	return o.ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationOracledbCredentialsParametersOutput) ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationOracledbCredentialsParameters) *SecretRotationOracledbCredentialsParameters {
		return &v
	}).(SecretRotationOracledbCredentialsParametersPtrOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationOracledbCredentialsParametersOutput) Username1() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationOracledbCredentialsParameters) string { return v.Username1 }).(pulumi.StringOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationOracledbCredentialsParametersOutput) Username2() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationOracledbCredentialsParameters) string { return v.Username2 }).(pulumi.StringOutput)
}

type SecretRotationOracledbCredentialsParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsParametersPtrOutput) ToSecretRotationOracledbCredentialsParametersPtrOutput() SecretRotationOracledbCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsParametersPtrOutput) ToSecretRotationOracledbCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsParametersPtrOutput) Elem() SecretRotationOracledbCredentialsParametersOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsParameters) SecretRotationOracledbCredentialsParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationOracledbCredentialsParameters
		return ret
	}).(SecretRotationOracledbCredentialsParametersOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationOracledbCredentialsParametersPtrOutput) Username1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username1
	}).(pulumi.StringPtrOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationOracledbCredentialsParametersPtrOutput) Username2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username2
	}).(pulumi.StringPtrOutput)
}

type SecretRotationOracledbCredentialsRotateAtUtc struct {
	// The hour at which the rotation should occur (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes *int `pulumi:"minutes"`
}

// SecretRotationOracledbCredentialsRotateAtUtcInput is an input type that accepts SecretRotationOracledbCredentialsRotateAtUtcArgs and SecretRotationOracledbCredentialsRotateAtUtcOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsRotateAtUtcInput` via:
//
//	SecretRotationOracledbCredentialsRotateAtUtcArgs{...}
type SecretRotationOracledbCredentialsRotateAtUtcInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsRotateAtUtcOutput() SecretRotationOracledbCredentialsRotateAtUtcOutput
	ToSecretRotationOracledbCredentialsRotateAtUtcOutputWithContext(context.Context) SecretRotationOracledbCredentialsRotateAtUtcOutput
}

type SecretRotationOracledbCredentialsRotateAtUtcArgs struct {
	// The hour at which the rotation should occur (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (SecretRotationOracledbCredentialsRotateAtUtcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsRotateAtUtc)(nil)).Elem()
}

func (i SecretRotationOracledbCredentialsRotateAtUtcArgs) ToSecretRotationOracledbCredentialsRotateAtUtcOutput() SecretRotationOracledbCredentialsRotateAtUtcOutput {
	return i.ToSecretRotationOracledbCredentialsRotateAtUtcOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsRotateAtUtcArgs) ToSecretRotationOracledbCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsRotateAtUtcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsRotateAtUtcOutput)
}

func (i SecretRotationOracledbCredentialsRotateAtUtcArgs) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutput() SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsRotateAtUtcArgs) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsRotateAtUtcOutput).ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(ctx)
}

// SecretRotationOracledbCredentialsRotateAtUtcPtrInput is an input type that accepts SecretRotationOracledbCredentialsRotateAtUtcArgs, SecretRotationOracledbCredentialsRotateAtUtcPtr and SecretRotationOracledbCredentialsRotateAtUtcPtrOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsRotateAtUtcPtrInput` via:
//
//	        SecretRotationOracledbCredentialsRotateAtUtcArgs{...}
//
//	or:
//
//	        nil
type SecretRotationOracledbCredentialsRotateAtUtcPtrInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutput() SecretRotationOracledbCredentialsRotateAtUtcPtrOutput
	ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(context.Context) SecretRotationOracledbCredentialsRotateAtUtcPtrOutput
}

type secretRotationOracledbCredentialsRotateAtUtcPtrType SecretRotationOracledbCredentialsRotateAtUtcArgs

func SecretRotationOracledbCredentialsRotateAtUtcPtr(v *SecretRotationOracledbCredentialsRotateAtUtcArgs) SecretRotationOracledbCredentialsRotateAtUtcPtrInput {
	return (*secretRotationOracledbCredentialsRotateAtUtcPtrType)(v)
}

func (*secretRotationOracledbCredentialsRotateAtUtcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsRotateAtUtc)(nil)).Elem()
}

func (i *secretRotationOracledbCredentialsRotateAtUtcPtrType) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutput() SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i *secretRotationOracledbCredentialsRotateAtUtcPtrType) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsRotateAtUtcPtrOutput)
}

type SecretRotationOracledbCredentialsRotateAtUtcOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsRotateAtUtcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsRotateAtUtcOutput) ToSecretRotationOracledbCredentialsRotateAtUtcOutput() SecretRotationOracledbCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationOracledbCredentialsRotateAtUtcOutput) ToSecretRotationOracledbCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationOracledbCredentialsRotateAtUtcOutput) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutput() SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return o.ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (o SecretRotationOracledbCredentialsRotateAtUtcOutput) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationOracledbCredentialsRotateAtUtc) *SecretRotationOracledbCredentialsRotateAtUtc {
		return &v
	}).(SecretRotationOracledbCredentialsRotateAtUtcPtrOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationOracledbCredentialsRotateAtUtcOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationOracledbCredentialsRotateAtUtc) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationOracledbCredentialsRotateAtUtcOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationOracledbCredentialsRotateAtUtc) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type SecretRotationOracledbCredentialsRotateAtUtcPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsRotateAtUtcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsRotateAtUtcPtrOutput) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutput() SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsRotateAtUtcPtrOutput) ToSecretRotationOracledbCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsRotateAtUtcPtrOutput) Elem() SecretRotationOracledbCredentialsRotateAtUtcOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsRotateAtUtc) SecretRotationOracledbCredentialsRotateAtUtc {
		if v != nil {
			return *v
		}
		var ret SecretRotationOracledbCredentialsRotateAtUtc
		return ret
	}).(SecretRotationOracledbCredentialsRotateAtUtcOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationOracledbCredentialsRotateAtUtcPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationOracledbCredentialsRotateAtUtcPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type SecretRotationOracledbCredentialsSecretsMapping struct {
	// The name of the secret that the generated password will be mapped to.
	Password string `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username string `pulumi:"username"`
}

// SecretRotationOracledbCredentialsSecretsMappingInput is an input type that accepts SecretRotationOracledbCredentialsSecretsMappingArgs and SecretRotationOracledbCredentialsSecretsMappingOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsSecretsMappingInput` via:
//
//	SecretRotationOracledbCredentialsSecretsMappingArgs{...}
type SecretRotationOracledbCredentialsSecretsMappingInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsSecretsMappingOutput() SecretRotationOracledbCredentialsSecretsMappingOutput
	ToSecretRotationOracledbCredentialsSecretsMappingOutputWithContext(context.Context) SecretRotationOracledbCredentialsSecretsMappingOutput
}

type SecretRotationOracledbCredentialsSecretsMappingArgs struct {
	// The name of the secret that the generated password will be mapped to.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretRotationOracledbCredentialsSecretsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsSecretsMapping)(nil)).Elem()
}

func (i SecretRotationOracledbCredentialsSecretsMappingArgs) ToSecretRotationOracledbCredentialsSecretsMappingOutput() SecretRotationOracledbCredentialsSecretsMappingOutput {
	return i.ToSecretRotationOracledbCredentialsSecretsMappingOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsSecretsMappingArgs) ToSecretRotationOracledbCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsSecretsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsSecretsMappingOutput)
}

func (i SecretRotationOracledbCredentialsSecretsMappingArgs) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutput() SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsSecretsMappingArgs) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsSecretsMappingOutput).ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(ctx)
}

// SecretRotationOracledbCredentialsSecretsMappingPtrInput is an input type that accepts SecretRotationOracledbCredentialsSecretsMappingArgs, SecretRotationOracledbCredentialsSecretsMappingPtr and SecretRotationOracledbCredentialsSecretsMappingPtrOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsSecretsMappingPtrInput` via:
//
//	        SecretRotationOracledbCredentialsSecretsMappingArgs{...}
//
//	or:
//
//	        nil
type SecretRotationOracledbCredentialsSecretsMappingPtrInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsSecretsMappingPtrOutput() SecretRotationOracledbCredentialsSecretsMappingPtrOutput
	ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(context.Context) SecretRotationOracledbCredentialsSecretsMappingPtrOutput
}

type secretRotationOracledbCredentialsSecretsMappingPtrType SecretRotationOracledbCredentialsSecretsMappingArgs

func SecretRotationOracledbCredentialsSecretsMappingPtr(v *SecretRotationOracledbCredentialsSecretsMappingArgs) SecretRotationOracledbCredentialsSecretsMappingPtrInput {
	return (*secretRotationOracledbCredentialsSecretsMappingPtrType)(v)
}

func (*secretRotationOracledbCredentialsSecretsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsSecretsMapping)(nil)).Elem()
}

func (i *secretRotationOracledbCredentialsSecretsMappingPtrType) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutput() SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i *secretRotationOracledbCredentialsSecretsMappingPtrType) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsSecretsMappingPtrOutput)
}

type SecretRotationOracledbCredentialsSecretsMappingOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsSecretsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsSecretsMappingOutput) ToSecretRotationOracledbCredentialsSecretsMappingOutput() SecretRotationOracledbCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationOracledbCredentialsSecretsMappingOutput) ToSecretRotationOracledbCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationOracledbCredentialsSecretsMappingOutput) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutput() SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return o.ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (o SecretRotationOracledbCredentialsSecretsMappingOutput) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationOracledbCredentialsSecretsMapping) *SecretRotationOracledbCredentialsSecretsMapping {
		return &v
	}).(SecretRotationOracledbCredentialsSecretsMappingPtrOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationOracledbCredentialsSecretsMappingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationOracledbCredentialsSecretsMapping) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationOracledbCredentialsSecretsMappingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationOracledbCredentialsSecretsMapping) string { return v.Username }).(pulumi.StringOutput)
}

type SecretRotationOracledbCredentialsSecretsMappingPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsSecretsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsSecretsMappingPtrOutput) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutput() SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsSecretsMappingPtrOutput) ToSecretRotationOracledbCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsSecretsMappingPtrOutput) Elem() SecretRotationOracledbCredentialsSecretsMappingOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsSecretsMapping) SecretRotationOracledbCredentialsSecretsMapping {
		if v != nil {
			return *v
		}
		var ret SecretRotationOracledbCredentialsSecretsMapping
		return ret
	}).(SecretRotationOracledbCredentialsSecretsMappingOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationOracledbCredentialsSecretsMappingPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationOracledbCredentialsSecretsMappingPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretRotationOracledbCredentialsTemporaryParameters struct {
}

// SecretRotationOracledbCredentialsTemporaryParametersInput is an input type that accepts SecretRotationOracledbCredentialsTemporaryParametersArgs and SecretRotationOracledbCredentialsTemporaryParametersOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsTemporaryParametersInput` via:
//
//	SecretRotationOracledbCredentialsTemporaryParametersArgs{...}
type SecretRotationOracledbCredentialsTemporaryParametersInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsTemporaryParametersOutput() SecretRotationOracledbCredentialsTemporaryParametersOutput
	ToSecretRotationOracledbCredentialsTemporaryParametersOutputWithContext(context.Context) SecretRotationOracledbCredentialsTemporaryParametersOutput
}

type SecretRotationOracledbCredentialsTemporaryParametersArgs struct {
}

func (SecretRotationOracledbCredentialsTemporaryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsTemporaryParameters)(nil)).Elem()
}

func (i SecretRotationOracledbCredentialsTemporaryParametersArgs) ToSecretRotationOracledbCredentialsTemporaryParametersOutput() SecretRotationOracledbCredentialsTemporaryParametersOutput {
	return i.ToSecretRotationOracledbCredentialsTemporaryParametersOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsTemporaryParametersArgs) ToSecretRotationOracledbCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsTemporaryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsTemporaryParametersOutput)
}

func (i SecretRotationOracledbCredentialsTemporaryParametersArgs) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutput() SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationOracledbCredentialsTemporaryParametersArgs) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsTemporaryParametersOutput).ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(ctx)
}

// SecretRotationOracledbCredentialsTemporaryParametersPtrInput is an input type that accepts SecretRotationOracledbCredentialsTemporaryParametersArgs, SecretRotationOracledbCredentialsTemporaryParametersPtr and SecretRotationOracledbCredentialsTemporaryParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationOracledbCredentialsTemporaryParametersPtrInput` via:
//
//	        SecretRotationOracledbCredentialsTemporaryParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationOracledbCredentialsTemporaryParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutput() SecretRotationOracledbCredentialsTemporaryParametersPtrOutput
	ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(context.Context) SecretRotationOracledbCredentialsTemporaryParametersPtrOutput
}

type secretRotationOracledbCredentialsTemporaryParametersPtrType SecretRotationOracledbCredentialsTemporaryParametersArgs

func SecretRotationOracledbCredentialsTemporaryParametersPtr(v *SecretRotationOracledbCredentialsTemporaryParametersArgs) SecretRotationOracledbCredentialsTemporaryParametersPtrInput {
	return (*secretRotationOracledbCredentialsTemporaryParametersPtrType)(v)
}

func (*secretRotationOracledbCredentialsTemporaryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsTemporaryParameters)(nil)).Elem()
}

func (i *secretRotationOracledbCredentialsTemporaryParametersPtrType) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutput() SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationOracledbCredentialsTemporaryParametersPtrType) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationOracledbCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationOracledbCredentialsTemporaryParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsTemporaryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationOracledbCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsTemporaryParametersOutput) ToSecretRotationOracledbCredentialsTemporaryParametersOutput() SecretRotationOracledbCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationOracledbCredentialsTemporaryParametersOutput) ToSecretRotationOracledbCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationOracledbCredentialsTemporaryParametersOutput) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutput() SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return o.ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationOracledbCredentialsTemporaryParametersOutput) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationOracledbCredentialsTemporaryParameters) *SecretRotationOracledbCredentialsTemporaryParameters {
		return &v
	}).(SecretRotationOracledbCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationOracledbCredentialsTemporaryParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationOracledbCredentialsTemporaryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationOracledbCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationOracledbCredentialsTemporaryParametersPtrOutput) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutput() SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsTemporaryParametersPtrOutput) ToSecretRotationOracledbCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationOracledbCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationOracledbCredentialsTemporaryParametersPtrOutput) Elem() SecretRotationOracledbCredentialsTemporaryParametersOutput {
	return o.ApplyT(func(v *SecretRotationOracledbCredentialsTemporaryParameters) SecretRotationOracledbCredentialsTemporaryParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationOracledbCredentialsTemporaryParameters
		return ret
	}).(SecretRotationOracledbCredentialsTemporaryParametersOutput)
}

type SecretRotationPostgresCredentialsParameters struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 string `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 string `pulumi:"username2"`
}

// SecretRotationPostgresCredentialsParametersInput is an input type that accepts SecretRotationPostgresCredentialsParametersArgs and SecretRotationPostgresCredentialsParametersOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsParametersInput` via:
//
//	SecretRotationPostgresCredentialsParametersArgs{...}
type SecretRotationPostgresCredentialsParametersInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsParametersOutput() SecretRotationPostgresCredentialsParametersOutput
	ToSecretRotationPostgresCredentialsParametersOutputWithContext(context.Context) SecretRotationPostgresCredentialsParametersOutput
}

type SecretRotationPostgresCredentialsParametersArgs struct {
	// The username of the first login to rotate passwords for. This user must already exists in your database.
	Username1 pulumi.StringInput `pulumi:"username1"`
	// The username of the second login to rotate passwords for. This user must already exists in your database.
	Username2 pulumi.StringInput `pulumi:"username2"`
}

func (SecretRotationPostgresCredentialsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsParameters)(nil)).Elem()
}

func (i SecretRotationPostgresCredentialsParametersArgs) ToSecretRotationPostgresCredentialsParametersOutput() SecretRotationPostgresCredentialsParametersOutput {
	return i.ToSecretRotationPostgresCredentialsParametersOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsParametersArgs) ToSecretRotationPostgresCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsParametersOutput)
}

func (i SecretRotationPostgresCredentialsParametersArgs) ToSecretRotationPostgresCredentialsParametersPtrOutput() SecretRotationPostgresCredentialsParametersPtrOutput {
	return i.ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsParametersArgs) ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsParametersOutput).ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(ctx)
}

// SecretRotationPostgresCredentialsParametersPtrInput is an input type that accepts SecretRotationPostgresCredentialsParametersArgs, SecretRotationPostgresCredentialsParametersPtr and SecretRotationPostgresCredentialsParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsParametersPtrInput` via:
//
//	        SecretRotationPostgresCredentialsParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationPostgresCredentialsParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsParametersPtrOutput() SecretRotationPostgresCredentialsParametersPtrOutput
	ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(context.Context) SecretRotationPostgresCredentialsParametersPtrOutput
}

type secretRotationPostgresCredentialsParametersPtrType SecretRotationPostgresCredentialsParametersArgs

func SecretRotationPostgresCredentialsParametersPtr(v *SecretRotationPostgresCredentialsParametersArgs) SecretRotationPostgresCredentialsParametersPtrInput {
	return (*secretRotationPostgresCredentialsParametersPtrType)(v)
}

func (*secretRotationPostgresCredentialsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsParameters)(nil)).Elem()
}

func (i *secretRotationPostgresCredentialsParametersPtrType) ToSecretRotationPostgresCredentialsParametersPtrOutput() SecretRotationPostgresCredentialsParametersPtrOutput {
	return i.ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationPostgresCredentialsParametersPtrType) ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsParametersPtrOutput)
}

type SecretRotationPostgresCredentialsParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsParametersOutput) ToSecretRotationPostgresCredentialsParametersOutput() SecretRotationPostgresCredentialsParametersOutput {
	return o
}

func (o SecretRotationPostgresCredentialsParametersOutput) ToSecretRotationPostgresCredentialsParametersOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsParametersOutput {
	return o
}

func (o SecretRotationPostgresCredentialsParametersOutput) ToSecretRotationPostgresCredentialsParametersPtrOutput() SecretRotationPostgresCredentialsParametersPtrOutput {
	return o.ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationPostgresCredentialsParametersOutput) ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationPostgresCredentialsParameters) *SecretRotationPostgresCredentialsParameters {
		return &v
	}).(SecretRotationPostgresCredentialsParametersPtrOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationPostgresCredentialsParametersOutput) Username1() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationPostgresCredentialsParameters) string { return v.Username1 }).(pulumi.StringOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationPostgresCredentialsParametersOutput) Username2() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationPostgresCredentialsParameters) string { return v.Username2 }).(pulumi.StringOutput)
}

type SecretRotationPostgresCredentialsParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsParameters)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsParametersPtrOutput) ToSecretRotationPostgresCredentialsParametersPtrOutput() SecretRotationPostgresCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsParametersPtrOutput) ToSecretRotationPostgresCredentialsParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsParametersPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsParametersPtrOutput) Elem() SecretRotationPostgresCredentialsParametersOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsParameters) SecretRotationPostgresCredentialsParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationPostgresCredentialsParameters
		return ret
	}).(SecretRotationPostgresCredentialsParametersOutput)
}

// The username of the first login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationPostgresCredentialsParametersPtrOutput) Username1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username1
	}).(pulumi.StringPtrOutput)
}

// The username of the second login to rotate passwords for. This user must already exists in your database.
func (o SecretRotationPostgresCredentialsParametersPtrOutput) Username2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username2
	}).(pulumi.StringPtrOutput)
}

type SecretRotationPostgresCredentialsRotateAtUtc struct {
	// The hour at which the rotation should occur (UTC).
	Hours *int `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes *int `pulumi:"minutes"`
}

// SecretRotationPostgresCredentialsRotateAtUtcInput is an input type that accepts SecretRotationPostgresCredentialsRotateAtUtcArgs and SecretRotationPostgresCredentialsRotateAtUtcOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsRotateAtUtcInput` via:
//
//	SecretRotationPostgresCredentialsRotateAtUtcArgs{...}
type SecretRotationPostgresCredentialsRotateAtUtcInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsRotateAtUtcOutput() SecretRotationPostgresCredentialsRotateAtUtcOutput
	ToSecretRotationPostgresCredentialsRotateAtUtcOutputWithContext(context.Context) SecretRotationPostgresCredentialsRotateAtUtcOutput
}

type SecretRotationPostgresCredentialsRotateAtUtcArgs struct {
	// The hour at which the rotation should occur (UTC).
	Hours pulumi.IntPtrInput `pulumi:"hours"`
	// The minute at which the rotation should occur (UTC).
	Minutes pulumi.IntPtrInput `pulumi:"minutes"`
}

func (SecretRotationPostgresCredentialsRotateAtUtcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsRotateAtUtc)(nil)).Elem()
}

func (i SecretRotationPostgresCredentialsRotateAtUtcArgs) ToSecretRotationPostgresCredentialsRotateAtUtcOutput() SecretRotationPostgresCredentialsRotateAtUtcOutput {
	return i.ToSecretRotationPostgresCredentialsRotateAtUtcOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsRotateAtUtcArgs) ToSecretRotationPostgresCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsRotateAtUtcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsRotateAtUtcOutput)
}

func (i SecretRotationPostgresCredentialsRotateAtUtcArgs) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutput() SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsRotateAtUtcArgs) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsRotateAtUtcOutput).ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(ctx)
}

// SecretRotationPostgresCredentialsRotateAtUtcPtrInput is an input type that accepts SecretRotationPostgresCredentialsRotateAtUtcArgs, SecretRotationPostgresCredentialsRotateAtUtcPtr and SecretRotationPostgresCredentialsRotateAtUtcPtrOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsRotateAtUtcPtrInput` via:
//
//	        SecretRotationPostgresCredentialsRotateAtUtcArgs{...}
//
//	or:
//
//	        nil
type SecretRotationPostgresCredentialsRotateAtUtcPtrInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutput() SecretRotationPostgresCredentialsRotateAtUtcPtrOutput
	ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(context.Context) SecretRotationPostgresCredentialsRotateAtUtcPtrOutput
}

type secretRotationPostgresCredentialsRotateAtUtcPtrType SecretRotationPostgresCredentialsRotateAtUtcArgs

func SecretRotationPostgresCredentialsRotateAtUtcPtr(v *SecretRotationPostgresCredentialsRotateAtUtcArgs) SecretRotationPostgresCredentialsRotateAtUtcPtrInput {
	return (*secretRotationPostgresCredentialsRotateAtUtcPtrType)(v)
}

func (*secretRotationPostgresCredentialsRotateAtUtcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsRotateAtUtc)(nil)).Elem()
}

func (i *secretRotationPostgresCredentialsRotateAtUtcPtrType) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutput() SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return i.ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (i *secretRotationPostgresCredentialsRotateAtUtcPtrType) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsRotateAtUtcPtrOutput)
}

type SecretRotationPostgresCredentialsRotateAtUtcOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsRotateAtUtcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsRotateAtUtcOutput) ToSecretRotationPostgresCredentialsRotateAtUtcOutput() SecretRotationPostgresCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationPostgresCredentialsRotateAtUtcOutput) ToSecretRotationPostgresCredentialsRotateAtUtcOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsRotateAtUtcOutput {
	return o
}

func (o SecretRotationPostgresCredentialsRotateAtUtcOutput) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutput() SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return o.ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(context.Background())
}

func (o SecretRotationPostgresCredentialsRotateAtUtcOutput) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationPostgresCredentialsRotateAtUtc) *SecretRotationPostgresCredentialsRotateAtUtc {
		return &v
	}).(SecretRotationPostgresCredentialsRotateAtUtcPtrOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationPostgresCredentialsRotateAtUtcOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationPostgresCredentialsRotateAtUtc) *int { return v.Hours }).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationPostgresCredentialsRotateAtUtcOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretRotationPostgresCredentialsRotateAtUtc) *int { return v.Minutes }).(pulumi.IntPtrOutput)
}

type SecretRotationPostgresCredentialsRotateAtUtcPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsRotateAtUtcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsRotateAtUtc)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsRotateAtUtcPtrOutput) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutput() SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsRotateAtUtcPtrOutput) ToSecretRotationPostgresCredentialsRotateAtUtcPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsRotateAtUtcPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsRotateAtUtcPtrOutput) Elem() SecretRotationPostgresCredentialsRotateAtUtcOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsRotateAtUtc) SecretRotationPostgresCredentialsRotateAtUtc {
		if v != nil {
			return *v
		}
		var ret SecretRotationPostgresCredentialsRotateAtUtc
		return ret
	}).(SecretRotationPostgresCredentialsRotateAtUtcOutput)
}

// The hour at which the rotation should occur (UTC).
func (o SecretRotationPostgresCredentialsRotateAtUtcPtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntPtrOutput)
}

// The minute at which the rotation should occur (UTC).
func (o SecretRotationPostgresCredentialsRotateAtUtcPtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsRotateAtUtc) *int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntPtrOutput)
}

type SecretRotationPostgresCredentialsSecretsMapping struct {
	// The name of the secret that the generated password will be mapped to.
	Password string `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username string `pulumi:"username"`
}

// SecretRotationPostgresCredentialsSecretsMappingInput is an input type that accepts SecretRotationPostgresCredentialsSecretsMappingArgs and SecretRotationPostgresCredentialsSecretsMappingOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsSecretsMappingInput` via:
//
//	SecretRotationPostgresCredentialsSecretsMappingArgs{...}
type SecretRotationPostgresCredentialsSecretsMappingInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsSecretsMappingOutput() SecretRotationPostgresCredentialsSecretsMappingOutput
	ToSecretRotationPostgresCredentialsSecretsMappingOutputWithContext(context.Context) SecretRotationPostgresCredentialsSecretsMappingOutput
}

type SecretRotationPostgresCredentialsSecretsMappingArgs struct {
	// The name of the secret that the generated password will be mapped to.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the secret that the active username will be mapped to.
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretRotationPostgresCredentialsSecretsMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsSecretsMapping)(nil)).Elem()
}

func (i SecretRotationPostgresCredentialsSecretsMappingArgs) ToSecretRotationPostgresCredentialsSecretsMappingOutput() SecretRotationPostgresCredentialsSecretsMappingOutput {
	return i.ToSecretRotationPostgresCredentialsSecretsMappingOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsSecretsMappingArgs) ToSecretRotationPostgresCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsSecretsMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsSecretsMappingOutput)
}

func (i SecretRotationPostgresCredentialsSecretsMappingArgs) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutput() SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsSecretsMappingArgs) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsSecretsMappingOutput).ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(ctx)
}

// SecretRotationPostgresCredentialsSecretsMappingPtrInput is an input type that accepts SecretRotationPostgresCredentialsSecretsMappingArgs, SecretRotationPostgresCredentialsSecretsMappingPtr and SecretRotationPostgresCredentialsSecretsMappingPtrOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsSecretsMappingPtrInput` via:
//
//	        SecretRotationPostgresCredentialsSecretsMappingArgs{...}
//
//	or:
//
//	        nil
type SecretRotationPostgresCredentialsSecretsMappingPtrInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsSecretsMappingPtrOutput() SecretRotationPostgresCredentialsSecretsMappingPtrOutput
	ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(context.Context) SecretRotationPostgresCredentialsSecretsMappingPtrOutput
}

type secretRotationPostgresCredentialsSecretsMappingPtrType SecretRotationPostgresCredentialsSecretsMappingArgs

func SecretRotationPostgresCredentialsSecretsMappingPtr(v *SecretRotationPostgresCredentialsSecretsMappingArgs) SecretRotationPostgresCredentialsSecretsMappingPtrInput {
	return (*secretRotationPostgresCredentialsSecretsMappingPtrType)(v)
}

func (*secretRotationPostgresCredentialsSecretsMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsSecretsMapping)(nil)).Elem()
}

func (i *secretRotationPostgresCredentialsSecretsMappingPtrType) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutput() SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return i.ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (i *secretRotationPostgresCredentialsSecretsMappingPtrType) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsSecretsMappingPtrOutput)
}

type SecretRotationPostgresCredentialsSecretsMappingOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsSecretsMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsSecretsMappingOutput) ToSecretRotationPostgresCredentialsSecretsMappingOutput() SecretRotationPostgresCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationPostgresCredentialsSecretsMappingOutput) ToSecretRotationPostgresCredentialsSecretsMappingOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsSecretsMappingOutput {
	return o
}

func (o SecretRotationPostgresCredentialsSecretsMappingOutput) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutput() SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return o.ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(context.Background())
}

func (o SecretRotationPostgresCredentialsSecretsMappingOutput) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationPostgresCredentialsSecretsMapping) *SecretRotationPostgresCredentialsSecretsMapping {
		return &v
	}).(SecretRotationPostgresCredentialsSecretsMappingPtrOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationPostgresCredentialsSecretsMappingOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationPostgresCredentialsSecretsMapping) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationPostgresCredentialsSecretsMappingOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretRotationPostgresCredentialsSecretsMapping) string { return v.Username }).(pulumi.StringOutput)
}

type SecretRotationPostgresCredentialsSecretsMappingPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsSecretsMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsSecretsMapping)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsSecretsMappingPtrOutput) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutput() SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsSecretsMappingPtrOutput) ToSecretRotationPostgresCredentialsSecretsMappingPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsSecretsMappingPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsSecretsMappingPtrOutput) Elem() SecretRotationPostgresCredentialsSecretsMappingOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsSecretsMapping) SecretRotationPostgresCredentialsSecretsMapping {
		if v != nil {
			return *v
		}
		var ret SecretRotationPostgresCredentialsSecretsMapping
		return ret
	}).(SecretRotationPostgresCredentialsSecretsMappingOutput)
}

// The name of the secret that the generated password will be mapped to.
func (o SecretRotationPostgresCredentialsSecretsMappingPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The name of the secret that the active username will be mapped to.
func (o SecretRotationPostgresCredentialsSecretsMappingPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsSecretsMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretRotationPostgresCredentialsTemporaryParameters struct {
}

// SecretRotationPostgresCredentialsTemporaryParametersInput is an input type that accepts SecretRotationPostgresCredentialsTemporaryParametersArgs and SecretRotationPostgresCredentialsTemporaryParametersOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsTemporaryParametersInput` via:
//
//	SecretRotationPostgresCredentialsTemporaryParametersArgs{...}
type SecretRotationPostgresCredentialsTemporaryParametersInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsTemporaryParametersOutput() SecretRotationPostgresCredentialsTemporaryParametersOutput
	ToSecretRotationPostgresCredentialsTemporaryParametersOutputWithContext(context.Context) SecretRotationPostgresCredentialsTemporaryParametersOutput
}

type SecretRotationPostgresCredentialsTemporaryParametersArgs struct {
}

func (SecretRotationPostgresCredentialsTemporaryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsTemporaryParameters)(nil)).Elem()
}

func (i SecretRotationPostgresCredentialsTemporaryParametersArgs) ToSecretRotationPostgresCredentialsTemporaryParametersOutput() SecretRotationPostgresCredentialsTemporaryParametersOutput {
	return i.ToSecretRotationPostgresCredentialsTemporaryParametersOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsTemporaryParametersArgs) ToSecretRotationPostgresCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsTemporaryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsTemporaryParametersOutput)
}

func (i SecretRotationPostgresCredentialsTemporaryParametersArgs) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutput() SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i SecretRotationPostgresCredentialsTemporaryParametersArgs) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsTemporaryParametersOutput).ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(ctx)
}

// SecretRotationPostgresCredentialsTemporaryParametersPtrInput is an input type that accepts SecretRotationPostgresCredentialsTemporaryParametersArgs, SecretRotationPostgresCredentialsTemporaryParametersPtr and SecretRotationPostgresCredentialsTemporaryParametersPtrOutput values.
// You can construct a concrete instance of `SecretRotationPostgresCredentialsTemporaryParametersPtrInput` via:
//
//	        SecretRotationPostgresCredentialsTemporaryParametersArgs{...}
//
//	or:
//
//	        nil
type SecretRotationPostgresCredentialsTemporaryParametersPtrInput interface {
	pulumi.Input

	ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutput() SecretRotationPostgresCredentialsTemporaryParametersPtrOutput
	ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(context.Context) SecretRotationPostgresCredentialsTemporaryParametersPtrOutput
}

type secretRotationPostgresCredentialsTemporaryParametersPtrType SecretRotationPostgresCredentialsTemporaryParametersArgs

func SecretRotationPostgresCredentialsTemporaryParametersPtr(v *SecretRotationPostgresCredentialsTemporaryParametersArgs) SecretRotationPostgresCredentialsTemporaryParametersPtrInput {
	return (*secretRotationPostgresCredentialsTemporaryParametersPtrType)(v)
}

func (*secretRotationPostgresCredentialsTemporaryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsTemporaryParameters)(nil)).Elem()
}

func (i *secretRotationPostgresCredentialsTemporaryParametersPtrType) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutput() SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return i.ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (i *secretRotationPostgresCredentialsTemporaryParametersPtrType) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationPostgresCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationPostgresCredentialsTemporaryParametersOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsTemporaryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationPostgresCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsTemporaryParametersOutput) ToSecretRotationPostgresCredentialsTemporaryParametersOutput() SecretRotationPostgresCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationPostgresCredentialsTemporaryParametersOutput) ToSecretRotationPostgresCredentialsTemporaryParametersOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsTemporaryParametersOutput {
	return o
}

func (o SecretRotationPostgresCredentialsTemporaryParametersOutput) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutput() SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return o.ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(context.Background())
}

func (o SecretRotationPostgresCredentialsTemporaryParametersOutput) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretRotationPostgresCredentialsTemporaryParameters) *SecretRotationPostgresCredentialsTemporaryParameters {
		return &v
	}).(SecretRotationPostgresCredentialsTemporaryParametersPtrOutput)
}

type SecretRotationPostgresCredentialsTemporaryParametersPtrOutput struct{ *pulumi.OutputState }

func (SecretRotationPostgresCredentialsTemporaryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationPostgresCredentialsTemporaryParameters)(nil)).Elem()
}

func (o SecretRotationPostgresCredentialsTemporaryParametersPtrOutput) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutput() SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsTemporaryParametersPtrOutput) ToSecretRotationPostgresCredentialsTemporaryParametersPtrOutputWithContext(ctx context.Context) SecretRotationPostgresCredentialsTemporaryParametersPtrOutput {
	return o
}

func (o SecretRotationPostgresCredentialsTemporaryParametersPtrOutput) Elem() SecretRotationPostgresCredentialsTemporaryParametersOutput {
	return o.ApplyT(func(v *SecretRotationPostgresCredentialsTemporaryParameters) SecretRotationPostgresCredentialsTemporaryParameters {
		if v != nil {
			return *v
		}
		var ret SecretRotationPostgresCredentialsTemporaryParameters
		return ret
	}).(SecretRotationPostgresCredentialsTemporaryParametersOutput)
}

type SecretSecretReminder struct {
	// Note for the secret rotation reminder
	Note *string `pulumi:"note"`
	// Frequency of secret rotation reminder in days
	RepeatDays int `pulumi:"repeatDays"`
}

// SecretSecretReminderInput is an input type that accepts SecretSecretReminderArgs and SecretSecretReminderOutput values.
// You can construct a concrete instance of `SecretSecretReminderInput` via:
//
//	SecretSecretReminderArgs{...}
type SecretSecretReminderInput interface {
	pulumi.Input

	ToSecretSecretReminderOutput() SecretSecretReminderOutput
	ToSecretSecretReminderOutputWithContext(context.Context) SecretSecretReminderOutput
}

type SecretSecretReminderArgs struct {
	// Note for the secret rotation reminder
	Note pulumi.StringPtrInput `pulumi:"note"`
	// Frequency of secret rotation reminder in days
	RepeatDays pulumi.IntInput `pulumi:"repeatDays"`
}

func (SecretSecretReminderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSecretReminder)(nil)).Elem()
}

func (i SecretSecretReminderArgs) ToSecretSecretReminderOutput() SecretSecretReminderOutput {
	return i.ToSecretSecretReminderOutputWithContext(context.Background())
}

func (i SecretSecretReminderArgs) ToSecretSecretReminderOutputWithContext(ctx context.Context) SecretSecretReminderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretReminderOutput)
}

func (i SecretSecretReminderArgs) ToSecretSecretReminderPtrOutput() SecretSecretReminderPtrOutput {
	return i.ToSecretSecretReminderPtrOutputWithContext(context.Background())
}

func (i SecretSecretReminderArgs) ToSecretSecretReminderPtrOutputWithContext(ctx context.Context) SecretSecretReminderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretReminderOutput).ToSecretSecretReminderPtrOutputWithContext(ctx)
}

// SecretSecretReminderPtrInput is an input type that accepts SecretSecretReminderArgs, SecretSecretReminderPtr and SecretSecretReminderPtrOutput values.
// You can construct a concrete instance of `SecretSecretReminderPtrInput` via:
//
//	        SecretSecretReminderArgs{...}
//
//	or:
//
//	        nil
type SecretSecretReminderPtrInput interface {
	pulumi.Input

	ToSecretSecretReminderPtrOutput() SecretSecretReminderPtrOutput
	ToSecretSecretReminderPtrOutputWithContext(context.Context) SecretSecretReminderPtrOutput
}

type secretSecretReminderPtrType SecretSecretReminderArgs

func SecretSecretReminderPtr(v *SecretSecretReminderArgs) SecretSecretReminderPtrInput {
	return (*secretSecretReminderPtrType)(v)
}

func (*secretSecretReminderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSecretReminder)(nil)).Elem()
}

func (i *secretSecretReminderPtrType) ToSecretSecretReminderPtrOutput() SecretSecretReminderPtrOutput {
	return i.ToSecretSecretReminderPtrOutputWithContext(context.Background())
}

func (i *secretSecretReminderPtrType) ToSecretSecretReminderPtrOutputWithContext(ctx context.Context) SecretSecretReminderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSecretReminderPtrOutput)
}

type SecretSecretReminderOutput struct{ *pulumi.OutputState }

func (SecretSecretReminderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSecretReminder)(nil)).Elem()
}

func (o SecretSecretReminderOutput) ToSecretSecretReminderOutput() SecretSecretReminderOutput {
	return o
}

func (o SecretSecretReminderOutput) ToSecretSecretReminderOutputWithContext(ctx context.Context) SecretSecretReminderOutput {
	return o
}

func (o SecretSecretReminderOutput) ToSecretSecretReminderPtrOutput() SecretSecretReminderPtrOutput {
	return o.ToSecretSecretReminderPtrOutputWithContext(context.Background())
}

func (o SecretSecretReminderOutput) ToSecretSecretReminderPtrOutputWithContext(ctx context.Context) SecretSecretReminderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSecretReminder) *SecretSecretReminder {
		return &v
	}).(SecretSecretReminderPtrOutput)
}

// Note for the secret rotation reminder
func (o SecretSecretReminderOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSecretReminder) *string { return v.Note }).(pulumi.StringPtrOutput)
}

// Frequency of secret rotation reminder in days
func (o SecretSecretReminderOutput) RepeatDays() pulumi.IntOutput {
	return o.ApplyT(func(v SecretSecretReminder) int { return v.RepeatDays }).(pulumi.IntOutput)
}

type SecretSecretReminderPtrOutput struct{ *pulumi.OutputState }

func (SecretSecretReminderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSecretReminder)(nil)).Elem()
}

func (o SecretSecretReminderPtrOutput) ToSecretSecretReminderPtrOutput() SecretSecretReminderPtrOutput {
	return o
}

func (o SecretSecretReminderPtrOutput) ToSecretSecretReminderPtrOutputWithContext(ctx context.Context) SecretSecretReminderPtrOutput {
	return o
}

func (o SecretSecretReminderPtrOutput) Elem() SecretSecretReminderOutput {
	return o.ApplyT(func(v *SecretSecretReminder) SecretSecretReminder {
		if v != nil {
			return *v
		}
		var ret SecretSecretReminder
		return ret
	}).(SecretSecretReminderOutput)
}

// Note for the secret rotation reminder
func (o SecretSecretReminderPtrOutput) Note() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSecretReminder) *string {
		if v == nil {
			return nil
		}
		return v.Note
	}).(pulumi.StringPtrOutput)
}

// Frequency of secret rotation reminder in days
func (o SecretSecretReminderPtrOutput) RepeatDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretSecretReminder) *int {
		if v == nil {
			return nil
		}
		return &v.RepeatDays
	}).(pulumi.IntPtrOutput)
}

type SecretSync1passwordDestinationConfig struct {
	// The label of the 1Password item field which will hold your secret value. For example, if you were to sync Infisical secret 'foo: bar', the 1Password item equivalent would have an item title of 'foo', and a field on that item 'value: bar'. The field label 'value' is what gets changed by this option
	ValueLabel *string `pulumi:"valueLabel"`
	// The ID of the 1Password vault to sync secrets to
	VaultId string `pulumi:"vaultId"`
}

// SecretSync1passwordDestinationConfigInput is an input type that accepts SecretSync1passwordDestinationConfigArgs and SecretSync1passwordDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSync1passwordDestinationConfigInput` via:
//
//	SecretSync1passwordDestinationConfigArgs{...}
type SecretSync1passwordDestinationConfigInput interface {
	pulumi.Input

	ToSecretSync1passwordDestinationConfigOutput() SecretSync1passwordDestinationConfigOutput
	ToSecretSync1passwordDestinationConfigOutputWithContext(context.Context) SecretSync1passwordDestinationConfigOutput
}

type SecretSync1passwordDestinationConfigArgs struct {
	// The label of the 1Password item field which will hold your secret value. For example, if you were to sync Infisical secret 'foo: bar', the 1Password item equivalent would have an item title of 'foo', and a field on that item 'value: bar'. The field label 'value' is what gets changed by this option
	ValueLabel pulumi.StringPtrInput `pulumi:"valueLabel"`
	// The ID of the 1Password vault to sync secrets to
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (SecretSync1passwordDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSync1passwordDestinationConfig)(nil)).Elem()
}

func (i SecretSync1passwordDestinationConfigArgs) ToSecretSync1passwordDestinationConfigOutput() SecretSync1passwordDestinationConfigOutput {
	return i.ToSecretSync1passwordDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSync1passwordDestinationConfigArgs) ToSecretSync1passwordDestinationConfigOutputWithContext(ctx context.Context) SecretSync1passwordDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSync1passwordDestinationConfigOutput)
}

func (i SecretSync1passwordDestinationConfigArgs) ToSecretSync1passwordDestinationConfigPtrOutput() SecretSync1passwordDestinationConfigPtrOutput {
	return i.ToSecretSync1passwordDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSync1passwordDestinationConfigArgs) ToSecretSync1passwordDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSync1passwordDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSync1passwordDestinationConfigOutput).ToSecretSync1passwordDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSync1passwordDestinationConfigPtrInput is an input type that accepts SecretSync1passwordDestinationConfigArgs, SecretSync1passwordDestinationConfigPtr and SecretSync1passwordDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSync1passwordDestinationConfigPtrInput` via:
//
//	        SecretSync1passwordDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSync1passwordDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSync1passwordDestinationConfigPtrOutput() SecretSync1passwordDestinationConfigPtrOutput
	ToSecretSync1passwordDestinationConfigPtrOutputWithContext(context.Context) SecretSync1passwordDestinationConfigPtrOutput
}

type secretSync1passwordDestinationConfigPtrType SecretSync1passwordDestinationConfigArgs

func SecretSync1passwordDestinationConfigPtr(v *SecretSync1passwordDestinationConfigArgs) SecretSync1passwordDestinationConfigPtrInput {
	return (*secretSync1passwordDestinationConfigPtrType)(v)
}

func (*secretSync1passwordDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSync1passwordDestinationConfig)(nil)).Elem()
}

func (i *secretSync1passwordDestinationConfigPtrType) ToSecretSync1passwordDestinationConfigPtrOutput() SecretSync1passwordDestinationConfigPtrOutput {
	return i.ToSecretSync1passwordDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSync1passwordDestinationConfigPtrType) ToSecretSync1passwordDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSync1passwordDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSync1passwordDestinationConfigPtrOutput)
}

type SecretSync1passwordDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSync1passwordDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSync1passwordDestinationConfig)(nil)).Elem()
}

func (o SecretSync1passwordDestinationConfigOutput) ToSecretSync1passwordDestinationConfigOutput() SecretSync1passwordDestinationConfigOutput {
	return o
}

func (o SecretSync1passwordDestinationConfigOutput) ToSecretSync1passwordDestinationConfigOutputWithContext(ctx context.Context) SecretSync1passwordDestinationConfigOutput {
	return o
}

func (o SecretSync1passwordDestinationConfigOutput) ToSecretSync1passwordDestinationConfigPtrOutput() SecretSync1passwordDestinationConfigPtrOutput {
	return o.ToSecretSync1passwordDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSync1passwordDestinationConfigOutput) ToSecretSync1passwordDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSync1passwordDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSync1passwordDestinationConfig) *SecretSync1passwordDestinationConfig {
		return &v
	}).(SecretSync1passwordDestinationConfigPtrOutput)
}

// The label of the 1Password item field which will hold your secret value. For example, if you were to sync Infisical secret 'foo: bar', the 1Password item equivalent would have an item title of 'foo', and a field on that item 'value: bar'. The field label 'value' is what gets changed by this option
func (o SecretSync1passwordDestinationConfigOutput) ValueLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSync1passwordDestinationConfig) *string { return v.ValueLabel }).(pulumi.StringPtrOutput)
}

// The ID of the 1Password vault to sync secrets to
func (o SecretSync1passwordDestinationConfigOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSync1passwordDestinationConfig) string { return v.VaultId }).(pulumi.StringOutput)
}

type SecretSync1passwordDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSync1passwordDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSync1passwordDestinationConfig)(nil)).Elem()
}

func (o SecretSync1passwordDestinationConfigPtrOutput) ToSecretSync1passwordDestinationConfigPtrOutput() SecretSync1passwordDestinationConfigPtrOutput {
	return o
}

func (o SecretSync1passwordDestinationConfigPtrOutput) ToSecretSync1passwordDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSync1passwordDestinationConfigPtrOutput {
	return o
}

func (o SecretSync1passwordDestinationConfigPtrOutput) Elem() SecretSync1passwordDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSync1passwordDestinationConfig) SecretSync1passwordDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSync1passwordDestinationConfig
		return ret
	}).(SecretSync1passwordDestinationConfigOutput)
}

// The label of the 1Password item field which will hold your secret value. For example, if you were to sync Infisical secret 'foo: bar', the 1Password item equivalent would have an item title of 'foo', and a field on that item 'value: bar'. The field label 'value' is what gets changed by this option
func (o SecretSync1passwordDestinationConfigPtrOutput) ValueLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSync1passwordDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.ValueLabel
	}).(pulumi.StringPtrOutput)
}

// The ID of the 1Password vault to sync secrets to
func (o SecretSync1passwordDestinationConfigPtrOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSync1passwordDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.VaultId
	}).(pulumi.StringPtrOutput)
}

type SecretSync1passwordSyncOptions struct {
	// When set to true, Infisical will not remove secrets from 1Password. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the 1Password destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSync1passwordSyncOptionsInput is an input type that accepts SecretSync1passwordSyncOptionsArgs and SecretSync1passwordSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSync1passwordSyncOptionsInput` via:
//
//	SecretSync1passwordSyncOptionsArgs{...}
type SecretSync1passwordSyncOptionsInput interface {
	pulumi.Input

	ToSecretSync1passwordSyncOptionsOutput() SecretSync1passwordSyncOptionsOutput
	ToSecretSync1passwordSyncOptionsOutputWithContext(context.Context) SecretSync1passwordSyncOptionsOutput
}

type SecretSync1passwordSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from 1Password. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the 1Password destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSync1passwordSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSync1passwordSyncOptions)(nil)).Elem()
}

func (i SecretSync1passwordSyncOptionsArgs) ToSecretSync1passwordSyncOptionsOutput() SecretSync1passwordSyncOptionsOutput {
	return i.ToSecretSync1passwordSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSync1passwordSyncOptionsArgs) ToSecretSync1passwordSyncOptionsOutputWithContext(ctx context.Context) SecretSync1passwordSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSync1passwordSyncOptionsOutput)
}

func (i SecretSync1passwordSyncOptionsArgs) ToSecretSync1passwordSyncOptionsPtrOutput() SecretSync1passwordSyncOptionsPtrOutput {
	return i.ToSecretSync1passwordSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSync1passwordSyncOptionsArgs) ToSecretSync1passwordSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSync1passwordSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSync1passwordSyncOptionsOutput).ToSecretSync1passwordSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSync1passwordSyncOptionsPtrInput is an input type that accepts SecretSync1passwordSyncOptionsArgs, SecretSync1passwordSyncOptionsPtr and SecretSync1passwordSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSync1passwordSyncOptionsPtrInput` via:
//
//	        SecretSync1passwordSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSync1passwordSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSync1passwordSyncOptionsPtrOutput() SecretSync1passwordSyncOptionsPtrOutput
	ToSecretSync1passwordSyncOptionsPtrOutputWithContext(context.Context) SecretSync1passwordSyncOptionsPtrOutput
}

type secretSync1passwordSyncOptionsPtrType SecretSync1passwordSyncOptionsArgs

func SecretSync1passwordSyncOptionsPtr(v *SecretSync1passwordSyncOptionsArgs) SecretSync1passwordSyncOptionsPtrInput {
	return (*secretSync1passwordSyncOptionsPtrType)(v)
}

func (*secretSync1passwordSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSync1passwordSyncOptions)(nil)).Elem()
}

func (i *secretSync1passwordSyncOptionsPtrType) ToSecretSync1passwordSyncOptionsPtrOutput() SecretSync1passwordSyncOptionsPtrOutput {
	return i.ToSecretSync1passwordSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSync1passwordSyncOptionsPtrType) ToSecretSync1passwordSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSync1passwordSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSync1passwordSyncOptionsPtrOutput)
}

type SecretSync1passwordSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSync1passwordSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSync1passwordSyncOptions)(nil)).Elem()
}

func (o SecretSync1passwordSyncOptionsOutput) ToSecretSync1passwordSyncOptionsOutput() SecretSync1passwordSyncOptionsOutput {
	return o
}

func (o SecretSync1passwordSyncOptionsOutput) ToSecretSync1passwordSyncOptionsOutputWithContext(ctx context.Context) SecretSync1passwordSyncOptionsOutput {
	return o
}

func (o SecretSync1passwordSyncOptionsOutput) ToSecretSync1passwordSyncOptionsPtrOutput() SecretSync1passwordSyncOptionsPtrOutput {
	return o.ToSecretSync1passwordSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSync1passwordSyncOptionsOutput) ToSecretSync1passwordSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSync1passwordSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSync1passwordSyncOptions) *SecretSync1passwordSyncOptions {
		return &v
	}).(SecretSync1passwordSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from 1Password. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSync1passwordSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSync1passwordSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSync1passwordSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSync1passwordSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the 1Password destination.
func (o SecretSync1passwordSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSync1passwordSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSync1passwordSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSync1passwordSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSync1passwordSyncOptions)(nil)).Elem()
}

func (o SecretSync1passwordSyncOptionsPtrOutput) ToSecretSync1passwordSyncOptionsPtrOutput() SecretSync1passwordSyncOptionsPtrOutput {
	return o
}

func (o SecretSync1passwordSyncOptionsPtrOutput) ToSecretSync1passwordSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSync1passwordSyncOptionsPtrOutput {
	return o
}

func (o SecretSync1passwordSyncOptionsPtrOutput) Elem() SecretSync1passwordSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSync1passwordSyncOptions) SecretSync1passwordSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSync1passwordSyncOptions
		return ret
	}).(SecretSync1passwordSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from 1Password. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSync1passwordSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSync1passwordSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSync1passwordSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSync1passwordSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the 1Password destination.
func (o SecretSync1passwordSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSync1passwordSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAwsParameterStoreDestinationConfig struct {
	// The AWS region of your AWS Parameter Store
	AwsRegion string `pulumi:"awsRegion"`
	// The path in the AWS Parameter Store where the secrets will be stored, Example: /example/path/
	Path string `pulumi:"path"`
}

// SecretSyncAwsParameterStoreDestinationConfigInput is an input type that accepts SecretSyncAwsParameterStoreDestinationConfigArgs and SecretSyncAwsParameterStoreDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreDestinationConfigInput` via:
//
//	SecretSyncAwsParameterStoreDestinationConfigArgs{...}
type SecretSyncAwsParameterStoreDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreDestinationConfigOutput() SecretSyncAwsParameterStoreDestinationConfigOutput
	ToSecretSyncAwsParameterStoreDestinationConfigOutputWithContext(context.Context) SecretSyncAwsParameterStoreDestinationConfigOutput
}

type SecretSyncAwsParameterStoreDestinationConfigArgs struct {
	// The AWS region of your AWS Parameter Store
	AwsRegion pulumi.StringInput `pulumi:"awsRegion"`
	// The path in the AWS Parameter Store where the secrets will be stored, Example: /example/path/
	Path pulumi.StringInput `pulumi:"path"`
}

func (SecretSyncAwsParameterStoreDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsParameterStoreDestinationConfig)(nil)).Elem()
}

func (i SecretSyncAwsParameterStoreDestinationConfigArgs) ToSecretSyncAwsParameterStoreDestinationConfigOutput() SecretSyncAwsParameterStoreDestinationConfigOutput {
	return i.ToSecretSyncAwsParameterStoreDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreDestinationConfigArgs) ToSecretSyncAwsParameterStoreDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreDestinationConfigOutput)
}

func (i SecretSyncAwsParameterStoreDestinationConfigArgs) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutput() SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return i.ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreDestinationConfigArgs) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreDestinationConfigOutput).ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncAwsParameterStoreDestinationConfigPtrInput is an input type that accepts SecretSyncAwsParameterStoreDestinationConfigArgs, SecretSyncAwsParameterStoreDestinationConfigPtr and SecretSyncAwsParameterStoreDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreDestinationConfigPtrInput` via:
//
//	        SecretSyncAwsParameterStoreDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAwsParameterStoreDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreDestinationConfigPtrOutput() SecretSyncAwsParameterStoreDestinationConfigPtrOutput
	ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(context.Context) SecretSyncAwsParameterStoreDestinationConfigPtrOutput
}

type secretSyncAwsParameterStoreDestinationConfigPtrType SecretSyncAwsParameterStoreDestinationConfigArgs

func SecretSyncAwsParameterStoreDestinationConfigPtr(v *SecretSyncAwsParameterStoreDestinationConfigArgs) SecretSyncAwsParameterStoreDestinationConfigPtrInput {
	return (*secretSyncAwsParameterStoreDestinationConfigPtrType)(v)
}

func (*secretSyncAwsParameterStoreDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsParameterStoreDestinationConfig)(nil)).Elem()
}

func (i *secretSyncAwsParameterStoreDestinationConfigPtrType) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutput() SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return i.ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncAwsParameterStoreDestinationConfigPtrType) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreDestinationConfigPtrOutput)
}

type SecretSyncAwsParameterStoreDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsParameterStoreDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreDestinationConfigOutput) ToSecretSyncAwsParameterStoreDestinationConfigOutput() SecretSyncAwsParameterStoreDestinationConfigOutput {
	return o
}

func (o SecretSyncAwsParameterStoreDestinationConfigOutput) ToSecretSyncAwsParameterStoreDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreDestinationConfigOutput {
	return o
}

func (o SecretSyncAwsParameterStoreDestinationConfigOutput) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutput() SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return o.ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncAwsParameterStoreDestinationConfigOutput) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAwsParameterStoreDestinationConfig) *SecretSyncAwsParameterStoreDestinationConfig {
		return &v
	}).(SecretSyncAwsParameterStoreDestinationConfigPtrOutput)
}

// The AWS region of your AWS Parameter Store
func (o SecretSyncAwsParameterStoreDestinationConfigOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreDestinationConfig) string { return v.AwsRegion }).(pulumi.StringOutput)
}

// The path in the AWS Parameter Store where the secrets will be stored, Example: /example/path/
func (o SecretSyncAwsParameterStoreDestinationConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreDestinationConfig) string { return v.Path }).(pulumi.StringOutput)
}

type SecretSyncAwsParameterStoreDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsParameterStoreDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreDestinationConfigPtrOutput) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutput() SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAwsParameterStoreDestinationConfigPtrOutput) ToSecretSyncAwsParameterStoreDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAwsParameterStoreDestinationConfigPtrOutput) Elem() SecretSyncAwsParameterStoreDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreDestinationConfig) SecretSyncAwsParameterStoreDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncAwsParameterStoreDestinationConfig
		return ret
	}).(SecretSyncAwsParameterStoreDestinationConfigOutput)
}

// The AWS region of your AWS Parameter Store
func (o SecretSyncAwsParameterStoreDestinationConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// The path in the AWS Parameter Store where the secrets will be stored, Example: /example/path/
func (o SecretSyncAwsParameterStoreDestinationConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAwsParameterStoreSyncOptions struct {
	// The AWS KMS key ID to use for encryption
	AwsKmsKeyId *string `pulumi:"awsKmsKeyId"`
	// When set to true, Infisical will not remove secrets from AWS Parameter Store. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the AWS Parameter Store destination.
	KeySchema *string `pulumi:"keySchema"`
	// Whether to sync the secret metadata as tags
	SyncSecretMetadataAsTags *bool `pulumi:"syncSecretMetadataAsTags"`
	// The tags to sync to the secret
	Tags []SecretSyncAwsParameterStoreSyncOptionsTag `pulumi:"tags"`
}

// SecretSyncAwsParameterStoreSyncOptionsInput is an input type that accepts SecretSyncAwsParameterStoreSyncOptionsArgs and SecretSyncAwsParameterStoreSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreSyncOptionsInput` via:
//
//	SecretSyncAwsParameterStoreSyncOptionsArgs{...}
type SecretSyncAwsParameterStoreSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreSyncOptionsOutput() SecretSyncAwsParameterStoreSyncOptionsOutput
	ToSecretSyncAwsParameterStoreSyncOptionsOutputWithContext(context.Context) SecretSyncAwsParameterStoreSyncOptionsOutput
}

type SecretSyncAwsParameterStoreSyncOptionsArgs struct {
	// The AWS KMS key ID to use for encryption
	AwsKmsKeyId pulumi.StringPtrInput `pulumi:"awsKmsKeyId"`
	// When set to true, Infisical will not remove secrets from AWS Parameter Store. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the AWS Parameter Store destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
	// Whether to sync the secret metadata as tags
	SyncSecretMetadataAsTags pulumi.BoolPtrInput `pulumi:"syncSecretMetadataAsTags"`
	// The tags to sync to the secret
	Tags SecretSyncAwsParameterStoreSyncOptionsTagArrayInput `pulumi:"tags"`
}

func (SecretSyncAwsParameterStoreSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptions)(nil)).Elem()
}

func (i SecretSyncAwsParameterStoreSyncOptionsArgs) ToSecretSyncAwsParameterStoreSyncOptionsOutput() SecretSyncAwsParameterStoreSyncOptionsOutput {
	return i.ToSecretSyncAwsParameterStoreSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreSyncOptionsArgs) ToSecretSyncAwsParameterStoreSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreSyncOptionsOutput)
}

func (i SecretSyncAwsParameterStoreSyncOptionsArgs) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutput() SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return i.ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreSyncOptionsArgs) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreSyncOptionsOutput).ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncAwsParameterStoreSyncOptionsPtrInput is an input type that accepts SecretSyncAwsParameterStoreSyncOptionsArgs, SecretSyncAwsParameterStoreSyncOptionsPtr and SecretSyncAwsParameterStoreSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreSyncOptionsPtrInput` via:
//
//	        SecretSyncAwsParameterStoreSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAwsParameterStoreSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreSyncOptionsPtrOutput() SecretSyncAwsParameterStoreSyncOptionsPtrOutput
	ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(context.Context) SecretSyncAwsParameterStoreSyncOptionsPtrOutput
}

type secretSyncAwsParameterStoreSyncOptionsPtrType SecretSyncAwsParameterStoreSyncOptionsArgs

func SecretSyncAwsParameterStoreSyncOptionsPtr(v *SecretSyncAwsParameterStoreSyncOptionsArgs) SecretSyncAwsParameterStoreSyncOptionsPtrInput {
	return (*secretSyncAwsParameterStoreSyncOptionsPtrType)(v)
}

func (*secretSyncAwsParameterStoreSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsParameterStoreSyncOptions)(nil)).Elem()
}

func (i *secretSyncAwsParameterStoreSyncOptionsPtrType) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutput() SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return i.ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncAwsParameterStoreSyncOptionsPtrType) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreSyncOptionsPtrOutput)
}

type SecretSyncAwsParameterStoreSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptions)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreSyncOptionsOutput) ToSecretSyncAwsParameterStoreSyncOptionsOutput() SecretSyncAwsParameterStoreSyncOptionsOutput {
	return o
}

func (o SecretSyncAwsParameterStoreSyncOptionsOutput) ToSecretSyncAwsParameterStoreSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsOutput {
	return o
}

func (o SecretSyncAwsParameterStoreSyncOptionsOutput) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutput() SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return o.ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncAwsParameterStoreSyncOptionsOutput) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAwsParameterStoreSyncOptions) *SecretSyncAwsParameterStoreSyncOptions {
		return &v
	}).(SecretSyncAwsParameterStoreSyncOptionsPtrOutput)
}

// The AWS KMS key ID to use for encryption
func (o SecretSyncAwsParameterStoreSyncOptionsOutput) AwsKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptions) *string { return v.AwsKmsKeyId }).(pulumi.StringPtrOutput)
}

// When set to true, Infisical will not remove secrets from AWS Parameter Store. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAwsParameterStoreSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAwsParameterStoreSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the AWS Parameter Store destination.
func (o SecretSyncAwsParameterStoreSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

// Whether to sync the secret metadata as tags
func (o SecretSyncAwsParameterStoreSyncOptionsOutput) SyncSecretMetadataAsTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptions) *bool { return v.SyncSecretMetadataAsTags }).(pulumi.BoolPtrOutput)
}

// The tags to sync to the secret
func (o SecretSyncAwsParameterStoreSyncOptionsOutput) Tags() SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptions) []SecretSyncAwsParameterStoreSyncOptionsTag {
		return v.Tags
	}).(SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput)
}

type SecretSyncAwsParameterStoreSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsParameterStoreSyncOptions)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutput() SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) ToSecretSyncAwsParameterStoreSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) Elem() SecretSyncAwsParameterStoreSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreSyncOptions) SecretSyncAwsParameterStoreSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncAwsParameterStoreSyncOptions
		return ret
	}).(SecretSyncAwsParameterStoreSyncOptionsOutput)
}

// The AWS KMS key ID to use for encryption
func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) AwsKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.AwsKmsKeyId
	}).(pulumi.StringPtrOutput)
}

// When set to true, Infisical will not remove secrets from AWS Parameter Store. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the AWS Parameter Store destination.
func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

// Whether to sync the secret metadata as tags
func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) SyncSecretMetadataAsTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SyncSecretMetadataAsTags
	}).(pulumi.BoolPtrOutput)
}

// The tags to sync to the secret
func (o SecretSyncAwsParameterStoreSyncOptionsPtrOutput) Tags() SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStoreSyncOptions) []SecretSyncAwsParameterStoreSyncOptionsTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput)
}

type SecretSyncAwsParameterStoreSyncOptionsTag struct {
	// The key of the tag
	Key string `pulumi:"key"`
	// The value of the tag
	Value string `pulumi:"value"`
}

// SecretSyncAwsParameterStoreSyncOptionsTagInput is an input type that accepts SecretSyncAwsParameterStoreSyncOptionsTagArgs and SecretSyncAwsParameterStoreSyncOptionsTagOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreSyncOptionsTagInput` via:
//
//	SecretSyncAwsParameterStoreSyncOptionsTagArgs{...}
type SecretSyncAwsParameterStoreSyncOptionsTagInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreSyncOptionsTagOutput() SecretSyncAwsParameterStoreSyncOptionsTagOutput
	ToSecretSyncAwsParameterStoreSyncOptionsTagOutputWithContext(context.Context) SecretSyncAwsParameterStoreSyncOptionsTagOutput
}

type SecretSyncAwsParameterStoreSyncOptionsTagArgs struct {
	// The key of the tag
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecretSyncAwsParameterStoreSyncOptionsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptionsTag)(nil)).Elem()
}

func (i SecretSyncAwsParameterStoreSyncOptionsTagArgs) ToSecretSyncAwsParameterStoreSyncOptionsTagOutput() SecretSyncAwsParameterStoreSyncOptionsTagOutput {
	return i.ToSecretSyncAwsParameterStoreSyncOptionsTagOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreSyncOptionsTagArgs) ToSecretSyncAwsParameterStoreSyncOptionsTagOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreSyncOptionsTagOutput)
}

// SecretSyncAwsParameterStoreSyncOptionsTagArrayInput is an input type that accepts SecretSyncAwsParameterStoreSyncOptionsTagArray and SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreSyncOptionsTagArrayInput` via:
//
//	SecretSyncAwsParameterStoreSyncOptionsTagArray{ SecretSyncAwsParameterStoreSyncOptionsTagArgs{...} }
type SecretSyncAwsParameterStoreSyncOptionsTagArrayInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreSyncOptionsTagArrayOutput() SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput
	ToSecretSyncAwsParameterStoreSyncOptionsTagArrayOutputWithContext(context.Context) SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput
}

type SecretSyncAwsParameterStoreSyncOptionsTagArray []SecretSyncAwsParameterStoreSyncOptionsTagInput

func (SecretSyncAwsParameterStoreSyncOptionsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretSyncAwsParameterStoreSyncOptionsTag)(nil)).Elem()
}

func (i SecretSyncAwsParameterStoreSyncOptionsTagArray) ToSecretSyncAwsParameterStoreSyncOptionsTagArrayOutput() SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput {
	return i.ToSecretSyncAwsParameterStoreSyncOptionsTagArrayOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreSyncOptionsTagArray) ToSecretSyncAwsParameterStoreSyncOptionsTagArrayOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput)
}

type SecretSyncAwsParameterStoreSyncOptionsTagOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreSyncOptionsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptionsTag)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreSyncOptionsTagOutput) ToSecretSyncAwsParameterStoreSyncOptionsTagOutput() SecretSyncAwsParameterStoreSyncOptionsTagOutput {
	return o
}

func (o SecretSyncAwsParameterStoreSyncOptionsTagOutput) ToSecretSyncAwsParameterStoreSyncOptionsTagOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsTagOutput {
	return o
}

// The key of the tag
func (o SecretSyncAwsParameterStoreSyncOptionsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptionsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag
func (o SecretSyncAwsParameterStoreSyncOptionsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsParameterStoreSyncOptionsTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretSyncAwsParameterStoreSyncOptionsTag)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput) ToSecretSyncAwsParameterStoreSyncOptionsTagArrayOutput() SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput {
	return o
}

func (o SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput) ToSecretSyncAwsParameterStoreSyncOptionsTagArrayOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput {
	return o
}

func (o SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput) Index(i pulumi.IntInput) SecretSyncAwsParameterStoreSyncOptionsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretSyncAwsParameterStoreSyncOptionsTag {
		return vs[0].([]SecretSyncAwsParameterStoreSyncOptionsTag)[vs[1].(int)]
	}).(SecretSyncAwsParameterStoreSyncOptionsTagOutput)
}

type SecretSyncAwsSecretsManagerDestinationConfig struct {
	// The AWS region of your AWS Secrets Manager
	AwsRegion string `pulumi:"awsRegion"`
	// The name of the AWS secret to map to. This only applies when mappingBehavior is set to 'many-to-one'.
	AwsSecretsManagerSecretName *string `pulumi:"awsSecretsManagerSecretName"`
	// The behavior of the mapping. Can be 'many-to-one' or 'one-to-one'. Many to One: All Infisical secrets will be mapped to a single AWS secret. One to One: Each Infisical secret will be mapped to its own AWS secret.
	MappingBehavior *string `pulumi:"mappingBehavior"`
}

// SecretSyncAwsSecretsManagerDestinationConfigInput is an input type that accepts SecretSyncAwsSecretsManagerDestinationConfigArgs and SecretSyncAwsSecretsManagerDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerDestinationConfigInput` via:
//
//	SecretSyncAwsSecretsManagerDestinationConfigArgs{...}
type SecretSyncAwsSecretsManagerDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerDestinationConfigOutput() SecretSyncAwsSecretsManagerDestinationConfigOutput
	ToSecretSyncAwsSecretsManagerDestinationConfigOutputWithContext(context.Context) SecretSyncAwsSecretsManagerDestinationConfigOutput
}

type SecretSyncAwsSecretsManagerDestinationConfigArgs struct {
	// The AWS region of your AWS Secrets Manager
	AwsRegion pulumi.StringInput `pulumi:"awsRegion"`
	// The name of the AWS secret to map to. This only applies when mappingBehavior is set to 'many-to-one'.
	AwsSecretsManagerSecretName pulumi.StringPtrInput `pulumi:"awsSecretsManagerSecretName"`
	// The behavior of the mapping. Can be 'many-to-one' or 'one-to-one'. Many to One: All Infisical secrets will be mapped to a single AWS secret. One to One: Each Infisical secret will be mapped to its own AWS secret.
	MappingBehavior pulumi.StringPtrInput `pulumi:"mappingBehavior"`
}

func (SecretSyncAwsSecretsManagerDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsSecretsManagerDestinationConfig)(nil)).Elem()
}

func (i SecretSyncAwsSecretsManagerDestinationConfigArgs) ToSecretSyncAwsSecretsManagerDestinationConfigOutput() SecretSyncAwsSecretsManagerDestinationConfigOutput {
	return i.ToSecretSyncAwsSecretsManagerDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerDestinationConfigArgs) ToSecretSyncAwsSecretsManagerDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerDestinationConfigOutput)
}

func (i SecretSyncAwsSecretsManagerDestinationConfigArgs) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutput() SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return i.ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerDestinationConfigArgs) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerDestinationConfigOutput).ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncAwsSecretsManagerDestinationConfigPtrInput is an input type that accepts SecretSyncAwsSecretsManagerDestinationConfigArgs, SecretSyncAwsSecretsManagerDestinationConfigPtr and SecretSyncAwsSecretsManagerDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerDestinationConfigPtrInput` via:
//
//	        SecretSyncAwsSecretsManagerDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAwsSecretsManagerDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutput() SecretSyncAwsSecretsManagerDestinationConfigPtrOutput
	ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(context.Context) SecretSyncAwsSecretsManagerDestinationConfigPtrOutput
}

type secretSyncAwsSecretsManagerDestinationConfigPtrType SecretSyncAwsSecretsManagerDestinationConfigArgs

func SecretSyncAwsSecretsManagerDestinationConfigPtr(v *SecretSyncAwsSecretsManagerDestinationConfigArgs) SecretSyncAwsSecretsManagerDestinationConfigPtrInput {
	return (*secretSyncAwsSecretsManagerDestinationConfigPtrType)(v)
}

func (*secretSyncAwsSecretsManagerDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsSecretsManagerDestinationConfig)(nil)).Elem()
}

func (i *secretSyncAwsSecretsManagerDestinationConfigPtrType) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutput() SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return i.ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncAwsSecretsManagerDestinationConfigPtrType) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerDestinationConfigPtrOutput)
}

type SecretSyncAwsSecretsManagerDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsSecretsManagerDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerDestinationConfigOutput) ToSecretSyncAwsSecretsManagerDestinationConfigOutput() SecretSyncAwsSecretsManagerDestinationConfigOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerDestinationConfigOutput) ToSecretSyncAwsSecretsManagerDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerDestinationConfigOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerDestinationConfigOutput) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutput() SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return o.ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncAwsSecretsManagerDestinationConfigOutput) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAwsSecretsManagerDestinationConfig) *SecretSyncAwsSecretsManagerDestinationConfig {
		return &v
	}).(SecretSyncAwsSecretsManagerDestinationConfigPtrOutput)
}

// The AWS region of your AWS Secrets Manager
func (o SecretSyncAwsSecretsManagerDestinationConfigOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerDestinationConfig) string { return v.AwsRegion }).(pulumi.StringOutput)
}

// The name of the AWS secret to map to. This only applies when mappingBehavior is set to 'many-to-one'.
func (o SecretSyncAwsSecretsManagerDestinationConfigOutput) AwsSecretsManagerSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerDestinationConfig) *string { return v.AwsSecretsManagerSecretName }).(pulumi.StringPtrOutput)
}

// The behavior of the mapping. Can be 'many-to-one' or 'one-to-one'. Many to One: All Infisical secrets will be mapped to a single AWS secret. One to One: Each Infisical secret will be mapped to its own AWS secret.
func (o SecretSyncAwsSecretsManagerDestinationConfigOutput) MappingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerDestinationConfig) *string { return v.MappingBehavior }).(pulumi.StringPtrOutput)
}

type SecretSyncAwsSecretsManagerDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsSecretsManagerDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerDestinationConfigPtrOutput) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutput() SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerDestinationConfigPtrOutput) ToSecretSyncAwsSecretsManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerDestinationConfigPtrOutput) Elem() SecretSyncAwsSecretsManagerDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerDestinationConfig) SecretSyncAwsSecretsManagerDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncAwsSecretsManagerDestinationConfig
		return ret
	}).(SecretSyncAwsSecretsManagerDestinationConfigOutput)
}

// The AWS region of your AWS Secrets Manager
func (o SecretSyncAwsSecretsManagerDestinationConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// The name of the AWS secret to map to. This only applies when mappingBehavior is set to 'many-to-one'.
func (o SecretSyncAwsSecretsManagerDestinationConfigPtrOutput) AwsSecretsManagerSecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsSecretsManagerSecretName
	}).(pulumi.StringPtrOutput)
}

// The behavior of the mapping. Can be 'many-to-one' or 'one-to-one'. Many to One: All Infisical secrets will be mapped to a single AWS secret. One to One: Each Infisical secret will be mapped to its own AWS secret.
func (o SecretSyncAwsSecretsManagerDestinationConfigPtrOutput) MappingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.MappingBehavior
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAwsSecretsManagerSyncOptions struct {
	// The AWS KMS key ID to use for encryption
	AwsKmsKeyId *string `pulumi:"awsKmsKeyId"`
	// When set to true, Infisical will not remove secrets from AWS Secrets Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the AWS Secrets Manager destination.
	KeySchema *string `pulumi:"keySchema"`
	// Whether to sync the secret metadata as tags. This is only supported for the 'one-to-one' mapping behavior.
	SyncSecretMetadataAsTags *bool `pulumi:"syncSecretMetadataAsTags"`
	// The tags to sync to the secret
	Tags []SecretSyncAwsSecretsManagerSyncOptionsTag `pulumi:"tags"`
}

// SecretSyncAwsSecretsManagerSyncOptionsInput is an input type that accepts SecretSyncAwsSecretsManagerSyncOptionsArgs and SecretSyncAwsSecretsManagerSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerSyncOptionsInput` via:
//
//	SecretSyncAwsSecretsManagerSyncOptionsArgs{...}
type SecretSyncAwsSecretsManagerSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerSyncOptionsOutput() SecretSyncAwsSecretsManagerSyncOptionsOutput
	ToSecretSyncAwsSecretsManagerSyncOptionsOutputWithContext(context.Context) SecretSyncAwsSecretsManagerSyncOptionsOutput
}

type SecretSyncAwsSecretsManagerSyncOptionsArgs struct {
	// The AWS KMS key ID to use for encryption
	AwsKmsKeyId pulumi.StringPtrInput `pulumi:"awsKmsKeyId"`
	// When set to true, Infisical will not remove secrets from AWS Secrets Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the AWS Secrets Manager destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
	// Whether to sync the secret metadata as tags. This is only supported for the 'one-to-one' mapping behavior.
	SyncSecretMetadataAsTags pulumi.BoolPtrInput `pulumi:"syncSecretMetadataAsTags"`
	// The tags to sync to the secret
	Tags SecretSyncAwsSecretsManagerSyncOptionsTagArrayInput `pulumi:"tags"`
}

func (SecretSyncAwsSecretsManagerSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptions)(nil)).Elem()
}

func (i SecretSyncAwsSecretsManagerSyncOptionsArgs) ToSecretSyncAwsSecretsManagerSyncOptionsOutput() SecretSyncAwsSecretsManagerSyncOptionsOutput {
	return i.ToSecretSyncAwsSecretsManagerSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerSyncOptionsArgs) ToSecretSyncAwsSecretsManagerSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerSyncOptionsOutput)
}

func (i SecretSyncAwsSecretsManagerSyncOptionsArgs) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutput() SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return i.ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerSyncOptionsArgs) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerSyncOptionsOutput).ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncAwsSecretsManagerSyncOptionsPtrInput is an input type that accepts SecretSyncAwsSecretsManagerSyncOptionsArgs, SecretSyncAwsSecretsManagerSyncOptionsPtr and SecretSyncAwsSecretsManagerSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerSyncOptionsPtrInput` via:
//
//	        SecretSyncAwsSecretsManagerSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAwsSecretsManagerSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutput() SecretSyncAwsSecretsManagerSyncOptionsPtrOutput
	ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(context.Context) SecretSyncAwsSecretsManagerSyncOptionsPtrOutput
}

type secretSyncAwsSecretsManagerSyncOptionsPtrType SecretSyncAwsSecretsManagerSyncOptionsArgs

func SecretSyncAwsSecretsManagerSyncOptionsPtr(v *SecretSyncAwsSecretsManagerSyncOptionsArgs) SecretSyncAwsSecretsManagerSyncOptionsPtrInput {
	return (*secretSyncAwsSecretsManagerSyncOptionsPtrType)(v)
}

func (*secretSyncAwsSecretsManagerSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsSecretsManagerSyncOptions)(nil)).Elem()
}

func (i *secretSyncAwsSecretsManagerSyncOptionsPtrType) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutput() SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return i.ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncAwsSecretsManagerSyncOptionsPtrType) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerSyncOptionsPtrOutput)
}

type SecretSyncAwsSecretsManagerSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptions)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) ToSecretSyncAwsSecretsManagerSyncOptionsOutput() SecretSyncAwsSecretsManagerSyncOptionsOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) ToSecretSyncAwsSecretsManagerSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutput() SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return o.ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAwsSecretsManagerSyncOptions) *SecretSyncAwsSecretsManagerSyncOptions {
		return &v
	}).(SecretSyncAwsSecretsManagerSyncOptionsPtrOutput)
}

// The AWS KMS key ID to use for encryption
func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) AwsKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptions) *string { return v.AwsKmsKeyId }).(pulumi.StringPtrOutput)
}

// When set to true, Infisical will not remove secrets from AWS Secrets Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the AWS Secrets Manager destination.
func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

// Whether to sync the secret metadata as tags. This is only supported for the 'one-to-one' mapping behavior.
func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) SyncSecretMetadataAsTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptions) *bool { return v.SyncSecretMetadataAsTags }).(pulumi.BoolPtrOutput)
}

// The tags to sync to the secret
func (o SecretSyncAwsSecretsManagerSyncOptionsOutput) Tags() SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptions) []SecretSyncAwsSecretsManagerSyncOptionsTag {
		return v.Tags
	}).(SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput)
}

type SecretSyncAwsSecretsManagerSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsSecretsManagerSyncOptions)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutput() SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) ToSecretSyncAwsSecretsManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) Elem() SecretSyncAwsSecretsManagerSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerSyncOptions) SecretSyncAwsSecretsManagerSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncAwsSecretsManagerSyncOptions
		return ret
	}).(SecretSyncAwsSecretsManagerSyncOptionsOutput)
}

// The AWS KMS key ID to use for encryption
func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) AwsKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.AwsKmsKeyId
	}).(pulumi.StringPtrOutput)
}

// When set to true, Infisical will not remove secrets from AWS Secrets Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the AWS Secrets Manager destination.
func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

// Whether to sync the secret metadata as tags. This is only supported for the 'one-to-one' mapping behavior.
func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) SyncSecretMetadataAsTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SyncSecretMetadataAsTags
	}).(pulumi.BoolPtrOutput)
}

// The tags to sync to the secret
func (o SecretSyncAwsSecretsManagerSyncOptionsPtrOutput) Tags() SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput {
	return o.ApplyT(func(v *SecretSyncAwsSecretsManagerSyncOptions) []SecretSyncAwsSecretsManagerSyncOptionsTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput)
}

type SecretSyncAwsSecretsManagerSyncOptionsTag struct {
	// The key of the tag
	Key string `pulumi:"key"`
	// The value of the tag
	Value string `pulumi:"value"`
}

// SecretSyncAwsSecretsManagerSyncOptionsTagInput is an input type that accepts SecretSyncAwsSecretsManagerSyncOptionsTagArgs and SecretSyncAwsSecretsManagerSyncOptionsTagOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerSyncOptionsTagInput` via:
//
//	SecretSyncAwsSecretsManagerSyncOptionsTagArgs{...}
type SecretSyncAwsSecretsManagerSyncOptionsTagInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerSyncOptionsTagOutput() SecretSyncAwsSecretsManagerSyncOptionsTagOutput
	ToSecretSyncAwsSecretsManagerSyncOptionsTagOutputWithContext(context.Context) SecretSyncAwsSecretsManagerSyncOptionsTagOutput
}

type SecretSyncAwsSecretsManagerSyncOptionsTagArgs struct {
	// The key of the tag
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the tag
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecretSyncAwsSecretsManagerSyncOptionsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptionsTag)(nil)).Elem()
}

func (i SecretSyncAwsSecretsManagerSyncOptionsTagArgs) ToSecretSyncAwsSecretsManagerSyncOptionsTagOutput() SecretSyncAwsSecretsManagerSyncOptionsTagOutput {
	return i.ToSecretSyncAwsSecretsManagerSyncOptionsTagOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerSyncOptionsTagArgs) ToSecretSyncAwsSecretsManagerSyncOptionsTagOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerSyncOptionsTagOutput)
}

// SecretSyncAwsSecretsManagerSyncOptionsTagArrayInput is an input type that accepts SecretSyncAwsSecretsManagerSyncOptionsTagArray and SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput values.
// You can construct a concrete instance of `SecretSyncAwsSecretsManagerSyncOptionsTagArrayInput` via:
//
//	SecretSyncAwsSecretsManagerSyncOptionsTagArray{ SecretSyncAwsSecretsManagerSyncOptionsTagArgs{...} }
type SecretSyncAwsSecretsManagerSyncOptionsTagArrayInput interface {
	pulumi.Input

	ToSecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput() SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput
	ToSecretSyncAwsSecretsManagerSyncOptionsTagArrayOutputWithContext(context.Context) SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput
}

type SecretSyncAwsSecretsManagerSyncOptionsTagArray []SecretSyncAwsSecretsManagerSyncOptionsTagInput

func (SecretSyncAwsSecretsManagerSyncOptionsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretSyncAwsSecretsManagerSyncOptionsTag)(nil)).Elem()
}

func (i SecretSyncAwsSecretsManagerSyncOptionsTagArray) ToSecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput() SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput {
	return i.ToSecretSyncAwsSecretsManagerSyncOptionsTagArrayOutputWithContext(context.Background())
}

func (i SecretSyncAwsSecretsManagerSyncOptionsTagArray) ToSecretSyncAwsSecretsManagerSyncOptionsTagArrayOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput)
}

type SecretSyncAwsSecretsManagerSyncOptionsTagOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerSyncOptionsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptionsTag)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerSyncOptionsTagOutput) ToSecretSyncAwsSecretsManagerSyncOptionsTagOutput() SecretSyncAwsSecretsManagerSyncOptionsTagOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerSyncOptionsTagOutput) ToSecretSyncAwsSecretsManagerSyncOptionsTagOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsTagOutput {
	return o
}

// The key of the tag
func (o SecretSyncAwsSecretsManagerSyncOptionsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptionsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the tag
func (o SecretSyncAwsSecretsManagerSyncOptionsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAwsSecretsManagerSyncOptionsTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretSyncAwsSecretsManagerSyncOptionsTag)(nil)).Elem()
}

func (o SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput) ToSecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput() SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput) ToSecretSyncAwsSecretsManagerSyncOptionsTagArrayOutputWithContext(ctx context.Context) SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput {
	return o
}

func (o SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput) Index(i pulumi.IntInput) SecretSyncAwsSecretsManagerSyncOptionsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretSyncAwsSecretsManagerSyncOptionsTag {
		return vs[0].([]SecretSyncAwsSecretsManagerSyncOptionsTag)[vs[1].(int)]
	}).(SecretSyncAwsSecretsManagerSyncOptionsTagOutput)
}

type SecretSyncAzureAppConfigurationDestinationConfig struct {
	// The URL of your Azure App Configuration
	ConfigurationUrl string `pulumi:"configurationUrl"`
	// The label to attach to secrets created in Azure App Configuration
	Label *string `pulumi:"label"`
}

// SecretSyncAzureAppConfigurationDestinationConfigInput is an input type that accepts SecretSyncAzureAppConfigurationDestinationConfigArgs and SecretSyncAzureAppConfigurationDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncAzureAppConfigurationDestinationConfigInput` via:
//
//	SecretSyncAzureAppConfigurationDestinationConfigArgs{...}
type SecretSyncAzureAppConfigurationDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncAzureAppConfigurationDestinationConfigOutput() SecretSyncAzureAppConfigurationDestinationConfigOutput
	ToSecretSyncAzureAppConfigurationDestinationConfigOutputWithContext(context.Context) SecretSyncAzureAppConfigurationDestinationConfigOutput
}

type SecretSyncAzureAppConfigurationDestinationConfigArgs struct {
	// The URL of your Azure App Configuration
	ConfigurationUrl pulumi.StringInput `pulumi:"configurationUrl"`
	// The label to attach to secrets created in Azure App Configuration
	Label pulumi.StringPtrInput `pulumi:"label"`
}

func (SecretSyncAzureAppConfigurationDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureAppConfigurationDestinationConfig)(nil)).Elem()
}

func (i SecretSyncAzureAppConfigurationDestinationConfigArgs) ToSecretSyncAzureAppConfigurationDestinationConfigOutput() SecretSyncAzureAppConfigurationDestinationConfigOutput {
	return i.ToSecretSyncAzureAppConfigurationDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncAzureAppConfigurationDestinationConfigArgs) ToSecretSyncAzureAppConfigurationDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationDestinationConfigOutput)
}

func (i SecretSyncAzureAppConfigurationDestinationConfigArgs) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutput() SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return i.ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncAzureAppConfigurationDestinationConfigArgs) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationDestinationConfigOutput).ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncAzureAppConfigurationDestinationConfigPtrInput is an input type that accepts SecretSyncAzureAppConfigurationDestinationConfigArgs, SecretSyncAzureAppConfigurationDestinationConfigPtr and SecretSyncAzureAppConfigurationDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncAzureAppConfigurationDestinationConfigPtrInput` via:
//
//	        SecretSyncAzureAppConfigurationDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAzureAppConfigurationDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutput() SecretSyncAzureAppConfigurationDestinationConfigPtrOutput
	ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(context.Context) SecretSyncAzureAppConfigurationDestinationConfigPtrOutput
}

type secretSyncAzureAppConfigurationDestinationConfigPtrType SecretSyncAzureAppConfigurationDestinationConfigArgs

func SecretSyncAzureAppConfigurationDestinationConfigPtr(v *SecretSyncAzureAppConfigurationDestinationConfigArgs) SecretSyncAzureAppConfigurationDestinationConfigPtrInput {
	return (*secretSyncAzureAppConfigurationDestinationConfigPtrType)(v)
}

func (*secretSyncAzureAppConfigurationDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureAppConfigurationDestinationConfig)(nil)).Elem()
}

func (i *secretSyncAzureAppConfigurationDestinationConfigPtrType) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutput() SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return i.ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncAzureAppConfigurationDestinationConfigPtrType) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationDestinationConfigPtrOutput)
}

type SecretSyncAzureAppConfigurationDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureAppConfigurationDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureAppConfigurationDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAzureAppConfigurationDestinationConfigOutput) ToSecretSyncAzureAppConfigurationDestinationConfigOutput() SecretSyncAzureAppConfigurationDestinationConfigOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationDestinationConfigOutput) ToSecretSyncAzureAppConfigurationDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationDestinationConfigOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationDestinationConfigOutput) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutput() SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return o.ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncAzureAppConfigurationDestinationConfigOutput) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAzureAppConfigurationDestinationConfig) *SecretSyncAzureAppConfigurationDestinationConfig {
		return &v
	}).(SecretSyncAzureAppConfigurationDestinationConfigPtrOutput)
}

// The URL of your Azure App Configuration
func (o SecretSyncAzureAppConfigurationDestinationConfigOutput) ConfigurationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAzureAppConfigurationDestinationConfig) string { return v.ConfigurationUrl }).(pulumi.StringOutput)
}

// The label to attach to secrets created in Azure App Configuration
func (o SecretSyncAzureAppConfigurationDestinationConfigOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAzureAppConfigurationDestinationConfig) *string { return v.Label }).(pulumi.StringPtrOutput)
}

type SecretSyncAzureAppConfigurationDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureAppConfigurationDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureAppConfigurationDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAzureAppConfigurationDestinationConfigPtrOutput) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutput() SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationDestinationConfigPtrOutput) ToSecretSyncAzureAppConfigurationDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationDestinationConfigPtrOutput) Elem() SecretSyncAzureAppConfigurationDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfigurationDestinationConfig) SecretSyncAzureAppConfigurationDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncAzureAppConfigurationDestinationConfig
		return ret
	}).(SecretSyncAzureAppConfigurationDestinationConfigOutput)
}

// The URL of your Azure App Configuration
func (o SecretSyncAzureAppConfigurationDestinationConfigPtrOutput) ConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfigurationDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigurationUrl
	}).(pulumi.StringPtrOutput)
}

// The label to attach to secrets created in Azure App Configuration
func (o SecretSyncAzureAppConfigurationDestinationConfigPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfigurationDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAzureAppConfigurationSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Azure App Configuration. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Azure App Configuration destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncAzureAppConfigurationSyncOptionsInput is an input type that accepts SecretSyncAzureAppConfigurationSyncOptionsArgs and SecretSyncAzureAppConfigurationSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncAzureAppConfigurationSyncOptionsInput` via:
//
//	SecretSyncAzureAppConfigurationSyncOptionsArgs{...}
type SecretSyncAzureAppConfigurationSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncAzureAppConfigurationSyncOptionsOutput() SecretSyncAzureAppConfigurationSyncOptionsOutput
	ToSecretSyncAzureAppConfigurationSyncOptionsOutputWithContext(context.Context) SecretSyncAzureAppConfigurationSyncOptionsOutput
}

type SecretSyncAzureAppConfigurationSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Azure App Configuration. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Azure App Configuration destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncAzureAppConfigurationSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureAppConfigurationSyncOptions)(nil)).Elem()
}

func (i SecretSyncAzureAppConfigurationSyncOptionsArgs) ToSecretSyncAzureAppConfigurationSyncOptionsOutput() SecretSyncAzureAppConfigurationSyncOptionsOutput {
	return i.ToSecretSyncAzureAppConfigurationSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncAzureAppConfigurationSyncOptionsArgs) ToSecretSyncAzureAppConfigurationSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationSyncOptionsOutput)
}

func (i SecretSyncAzureAppConfigurationSyncOptionsArgs) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutput() SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return i.ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncAzureAppConfigurationSyncOptionsArgs) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationSyncOptionsOutput).ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncAzureAppConfigurationSyncOptionsPtrInput is an input type that accepts SecretSyncAzureAppConfigurationSyncOptionsArgs, SecretSyncAzureAppConfigurationSyncOptionsPtr and SecretSyncAzureAppConfigurationSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncAzureAppConfigurationSyncOptionsPtrInput` via:
//
//	        SecretSyncAzureAppConfigurationSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAzureAppConfigurationSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutput() SecretSyncAzureAppConfigurationSyncOptionsPtrOutput
	ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(context.Context) SecretSyncAzureAppConfigurationSyncOptionsPtrOutput
}

type secretSyncAzureAppConfigurationSyncOptionsPtrType SecretSyncAzureAppConfigurationSyncOptionsArgs

func SecretSyncAzureAppConfigurationSyncOptionsPtr(v *SecretSyncAzureAppConfigurationSyncOptionsArgs) SecretSyncAzureAppConfigurationSyncOptionsPtrInput {
	return (*secretSyncAzureAppConfigurationSyncOptionsPtrType)(v)
}

func (*secretSyncAzureAppConfigurationSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureAppConfigurationSyncOptions)(nil)).Elem()
}

func (i *secretSyncAzureAppConfigurationSyncOptionsPtrType) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutput() SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return i.ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncAzureAppConfigurationSyncOptionsPtrType) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationSyncOptionsPtrOutput)
}

type SecretSyncAzureAppConfigurationSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureAppConfigurationSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureAppConfigurationSyncOptions)(nil)).Elem()
}

func (o SecretSyncAzureAppConfigurationSyncOptionsOutput) ToSecretSyncAzureAppConfigurationSyncOptionsOutput() SecretSyncAzureAppConfigurationSyncOptionsOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationSyncOptionsOutput) ToSecretSyncAzureAppConfigurationSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationSyncOptionsOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationSyncOptionsOutput) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutput() SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return o.ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncAzureAppConfigurationSyncOptionsOutput) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAzureAppConfigurationSyncOptions) *SecretSyncAzureAppConfigurationSyncOptions {
		return &v
	}).(SecretSyncAzureAppConfigurationSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Azure App Configuration. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAzureAppConfigurationSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncAzureAppConfigurationSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAzureAppConfigurationSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAzureAppConfigurationSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Azure App Configuration destination.
func (o SecretSyncAzureAppConfigurationSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAzureAppConfigurationSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncAzureAppConfigurationSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureAppConfigurationSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureAppConfigurationSyncOptions)(nil)).Elem()
}

func (o SecretSyncAzureAppConfigurationSyncOptionsPtrOutput) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutput() SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationSyncOptionsPtrOutput) ToSecretSyncAzureAppConfigurationSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationSyncOptionsPtrOutput) Elem() SecretSyncAzureAppConfigurationSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfigurationSyncOptions) SecretSyncAzureAppConfigurationSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncAzureAppConfigurationSyncOptions
		return ret
	}).(SecretSyncAzureAppConfigurationSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Azure App Configuration. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAzureAppConfigurationSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfigurationSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAzureAppConfigurationSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfigurationSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Azure App Configuration destination.
func (o SecretSyncAzureAppConfigurationSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfigurationSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAzureDevopsDestinationConfig struct {
	// The ID of the Azure DevOps project to sync secrets to.
	DevopsProjectId string `pulumi:"devopsProjectId"`
}

// SecretSyncAzureDevopsDestinationConfigInput is an input type that accepts SecretSyncAzureDevopsDestinationConfigArgs and SecretSyncAzureDevopsDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncAzureDevopsDestinationConfigInput` via:
//
//	SecretSyncAzureDevopsDestinationConfigArgs{...}
type SecretSyncAzureDevopsDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncAzureDevopsDestinationConfigOutput() SecretSyncAzureDevopsDestinationConfigOutput
	ToSecretSyncAzureDevopsDestinationConfigOutputWithContext(context.Context) SecretSyncAzureDevopsDestinationConfigOutput
}

type SecretSyncAzureDevopsDestinationConfigArgs struct {
	// The ID of the Azure DevOps project to sync secrets to.
	DevopsProjectId pulumi.StringInput `pulumi:"devopsProjectId"`
}

func (SecretSyncAzureDevopsDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureDevopsDestinationConfig)(nil)).Elem()
}

func (i SecretSyncAzureDevopsDestinationConfigArgs) ToSecretSyncAzureDevopsDestinationConfigOutput() SecretSyncAzureDevopsDestinationConfigOutput {
	return i.ToSecretSyncAzureDevopsDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncAzureDevopsDestinationConfigArgs) ToSecretSyncAzureDevopsDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAzureDevopsDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsDestinationConfigOutput)
}

func (i SecretSyncAzureDevopsDestinationConfigArgs) ToSecretSyncAzureDevopsDestinationConfigPtrOutput() SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return i.ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncAzureDevopsDestinationConfigArgs) ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsDestinationConfigOutput).ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncAzureDevopsDestinationConfigPtrInput is an input type that accepts SecretSyncAzureDevopsDestinationConfigArgs, SecretSyncAzureDevopsDestinationConfigPtr and SecretSyncAzureDevopsDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncAzureDevopsDestinationConfigPtrInput` via:
//
//	        SecretSyncAzureDevopsDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAzureDevopsDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncAzureDevopsDestinationConfigPtrOutput() SecretSyncAzureDevopsDestinationConfigPtrOutput
	ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(context.Context) SecretSyncAzureDevopsDestinationConfigPtrOutput
}

type secretSyncAzureDevopsDestinationConfigPtrType SecretSyncAzureDevopsDestinationConfigArgs

func SecretSyncAzureDevopsDestinationConfigPtr(v *SecretSyncAzureDevopsDestinationConfigArgs) SecretSyncAzureDevopsDestinationConfigPtrInput {
	return (*secretSyncAzureDevopsDestinationConfigPtrType)(v)
}

func (*secretSyncAzureDevopsDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureDevopsDestinationConfig)(nil)).Elem()
}

func (i *secretSyncAzureDevopsDestinationConfigPtrType) ToSecretSyncAzureDevopsDestinationConfigPtrOutput() SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return i.ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncAzureDevopsDestinationConfigPtrType) ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsDestinationConfigPtrOutput)
}

type SecretSyncAzureDevopsDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureDevopsDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureDevopsDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAzureDevopsDestinationConfigOutput) ToSecretSyncAzureDevopsDestinationConfigOutput() SecretSyncAzureDevopsDestinationConfigOutput {
	return o
}

func (o SecretSyncAzureDevopsDestinationConfigOutput) ToSecretSyncAzureDevopsDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAzureDevopsDestinationConfigOutput {
	return o
}

func (o SecretSyncAzureDevopsDestinationConfigOutput) ToSecretSyncAzureDevopsDestinationConfigPtrOutput() SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return o.ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncAzureDevopsDestinationConfigOutput) ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAzureDevopsDestinationConfig) *SecretSyncAzureDevopsDestinationConfig {
		return &v
	}).(SecretSyncAzureDevopsDestinationConfigPtrOutput)
}

// The ID of the Azure DevOps project to sync secrets to.
func (o SecretSyncAzureDevopsDestinationConfigOutput) DevopsProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAzureDevopsDestinationConfig) string { return v.DevopsProjectId }).(pulumi.StringOutput)
}

type SecretSyncAzureDevopsDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureDevopsDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureDevopsDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAzureDevopsDestinationConfigPtrOutput) ToSecretSyncAzureDevopsDestinationConfigPtrOutput() SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAzureDevopsDestinationConfigPtrOutput) ToSecretSyncAzureDevopsDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAzureDevopsDestinationConfigPtrOutput) Elem() SecretSyncAzureDevopsDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevopsDestinationConfig) SecretSyncAzureDevopsDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncAzureDevopsDestinationConfig
		return ret
	}).(SecretSyncAzureDevopsDestinationConfigOutput)
}

// The ID of the Azure DevOps project to sync secrets to.
func (o SecretSyncAzureDevopsDestinationConfigPtrOutput) DevopsProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevopsDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DevopsProjectId
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAzureDevopsSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Azure DevOps. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// The format to use for structuring secret keys in the Azure DevOps destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncAzureDevopsSyncOptionsInput is an input type that accepts SecretSyncAzureDevopsSyncOptionsArgs and SecretSyncAzureDevopsSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncAzureDevopsSyncOptionsInput` via:
//
//	SecretSyncAzureDevopsSyncOptionsArgs{...}
type SecretSyncAzureDevopsSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncAzureDevopsSyncOptionsOutput() SecretSyncAzureDevopsSyncOptionsOutput
	ToSecretSyncAzureDevopsSyncOptionsOutputWithContext(context.Context) SecretSyncAzureDevopsSyncOptionsOutput
}

type SecretSyncAzureDevopsSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Azure DevOps. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// The format to use for structuring secret keys in the Azure DevOps destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncAzureDevopsSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureDevopsSyncOptions)(nil)).Elem()
}

func (i SecretSyncAzureDevopsSyncOptionsArgs) ToSecretSyncAzureDevopsSyncOptionsOutput() SecretSyncAzureDevopsSyncOptionsOutput {
	return i.ToSecretSyncAzureDevopsSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncAzureDevopsSyncOptionsArgs) ToSecretSyncAzureDevopsSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAzureDevopsSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsSyncOptionsOutput)
}

func (i SecretSyncAzureDevopsSyncOptionsArgs) ToSecretSyncAzureDevopsSyncOptionsPtrOutput() SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return i.ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncAzureDevopsSyncOptionsArgs) ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsSyncOptionsOutput).ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncAzureDevopsSyncOptionsPtrInput is an input type that accepts SecretSyncAzureDevopsSyncOptionsArgs, SecretSyncAzureDevopsSyncOptionsPtr and SecretSyncAzureDevopsSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncAzureDevopsSyncOptionsPtrInput` via:
//
//	        SecretSyncAzureDevopsSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAzureDevopsSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncAzureDevopsSyncOptionsPtrOutput() SecretSyncAzureDevopsSyncOptionsPtrOutput
	ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(context.Context) SecretSyncAzureDevopsSyncOptionsPtrOutput
}

type secretSyncAzureDevopsSyncOptionsPtrType SecretSyncAzureDevopsSyncOptionsArgs

func SecretSyncAzureDevopsSyncOptionsPtr(v *SecretSyncAzureDevopsSyncOptionsArgs) SecretSyncAzureDevopsSyncOptionsPtrInput {
	return (*secretSyncAzureDevopsSyncOptionsPtrType)(v)
}

func (*secretSyncAzureDevopsSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureDevopsSyncOptions)(nil)).Elem()
}

func (i *secretSyncAzureDevopsSyncOptionsPtrType) ToSecretSyncAzureDevopsSyncOptionsPtrOutput() SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return i.ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncAzureDevopsSyncOptionsPtrType) ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureDevopsSyncOptionsPtrOutput)
}

type SecretSyncAzureDevopsSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureDevopsSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureDevopsSyncOptions)(nil)).Elem()
}

func (o SecretSyncAzureDevopsSyncOptionsOutput) ToSecretSyncAzureDevopsSyncOptionsOutput() SecretSyncAzureDevopsSyncOptionsOutput {
	return o
}

func (o SecretSyncAzureDevopsSyncOptionsOutput) ToSecretSyncAzureDevopsSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAzureDevopsSyncOptionsOutput {
	return o
}

func (o SecretSyncAzureDevopsSyncOptionsOutput) ToSecretSyncAzureDevopsSyncOptionsPtrOutput() SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return o.ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncAzureDevopsSyncOptionsOutput) ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAzureDevopsSyncOptions) *SecretSyncAzureDevopsSyncOptions {
		return &v
	}).(SecretSyncAzureDevopsSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Azure DevOps. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAzureDevopsSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncAzureDevopsSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// The format to use for structuring secret keys in the Azure DevOps destination.
func (o SecretSyncAzureDevopsSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAzureDevopsSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncAzureDevopsSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureDevopsSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureDevopsSyncOptions)(nil)).Elem()
}

func (o SecretSyncAzureDevopsSyncOptionsPtrOutput) ToSecretSyncAzureDevopsSyncOptionsPtrOutput() SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAzureDevopsSyncOptionsPtrOutput) ToSecretSyncAzureDevopsSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureDevopsSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAzureDevopsSyncOptionsPtrOutput) Elem() SecretSyncAzureDevopsSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevopsSyncOptions) SecretSyncAzureDevopsSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncAzureDevopsSyncOptions
		return ret
	}).(SecretSyncAzureDevopsSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Azure DevOps. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAzureDevopsSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevopsSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// The format to use for structuring secret keys in the Azure DevOps destination.
func (o SecretSyncAzureDevopsSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureDevopsSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAzureKeyVaultDestinationConfig struct {
	// The base URL of your Azure Key Vault
	VaultBaseUrl string `pulumi:"vaultBaseUrl"`
}

// SecretSyncAzureKeyVaultDestinationConfigInput is an input type that accepts SecretSyncAzureKeyVaultDestinationConfigArgs and SecretSyncAzureKeyVaultDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncAzureKeyVaultDestinationConfigInput` via:
//
//	SecretSyncAzureKeyVaultDestinationConfigArgs{...}
type SecretSyncAzureKeyVaultDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncAzureKeyVaultDestinationConfigOutput() SecretSyncAzureKeyVaultDestinationConfigOutput
	ToSecretSyncAzureKeyVaultDestinationConfigOutputWithContext(context.Context) SecretSyncAzureKeyVaultDestinationConfigOutput
}

type SecretSyncAzureKeyVaultDestinationConfigArgs struct {
	// The base URL of your Azure Key Vault
	VaultBaseUrl pulumi.StringInput `pulumi:"vaultBaseUrl"`
}

func (SecretSyncAzureKeyVaultDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureKeyVaultDestinationConfig)(nil)).Elem()
}

func (i SecretSyncAzureKeyVaultDestinationConfigArgs) ToSecretSyncAzureKeyVaultDestinationConfigOutput() SecretSyncAzureKeyVaultDestinationConfigOutput {
	return i.ToSecretSyncAzureKeyVaultDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncAzureKeyVaultDestinationConfigArgs) ToSecretSyncAzureKeyVaultDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureKeyVaultDestinationConfigOutput)
}

func (i SecretSyncAzureKeyVaultDestinationConfigArgs) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutput() SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return i.ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncAzureKeyVaultDestinationConfigArgs) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureKeyVaultDestinationConfigOutput).ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncAzureKeyVaultDestinationConfigPtrInput is an input type that accepts SecretSyncAzureKeyVaultDestinationConfigArgs, SecretSyncAzureKeyVaultDestinationConfigPtr and SecretSyncAzureKeyVaultDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncAzureKeyVaultDestinationConfigPtrInput` via:
//
//	        SecretSyncAzureKeyVaultDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAzureKeyVaultDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncAzureKeyVaultDestinationConfigPtrOutput() SecretSyncAzureKeyVaultDestinationConfigPtrOutput
	ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(context.Context) SecretSyncAzureKeyVaultDestinationConfigPtrOutput
}

type secretSyncAzureKeyVaultDestinationConfigPtrType SecretSyncAzureKeyVaultDestinationConfigArgs

func SecretSyncAzureKeyVaultDestinationConfigPtr(v *SecretSyncAzureKeyVaultDestinationConfigArgs) SecretSyncAzureKeyVaultDestinationConfigPtrInput {
	return (*secretSyncAzureKeyVaultDestinationConfigPtrType)(v)
}

func (*secretSyncAzureKeyVaultDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureKeyVaultDestinationConfig)(nil)).Elem()
}

func (i *secretSyncAzureKeyVaultDestinationConfigPtrType) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutput() SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return i.ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncAzureKeyVaultDestinationConfigPtrType) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureKeyVaultDestinationConfigPtrOutput)
}

type SecretSyncAzureKeyVaultDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureKeyVaultDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureKeyVaultDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAzureKeyVaultDestinationConfigOutput) ToSecretSyncAzureKeyVaultDestinationConfigOutput() SecretSyncAzureKeyVaultDestinationConfigOutput {
	return o
}

func (o SecretSyncAzureKeyVaultDestinationConfigOutput) ToSecretSyncAzureKeyVaultDestinationConfigOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultDestinationConfigOutput {
	return o
}

func (o SecretSyncAzureKeyVaultDestinationConfigOutput) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutput() SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return o.ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncAzureKeyVaultDestinationConfigOutput) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAzureKeyVaultDestinationConfig) *SecretSyncAzureKeyVaultDestinationConfig {
		return &v
	}).(SecretSyncAzureKeyVaultDestinationConfigPtrOutput)
}

// The base URL of your Azure Key Vault
func (o SecretSyncAzureKeyVaultDestinationConfigOutput) VaultBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAzureKeyVaultDestinationConfig) string { return v.VaultBaseUrl }).(pulumi.StringOutput)
}

type SecretSyncAzureKeyVaultDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureKeyVaultDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureKeyVaultDestinationConfig)(nil)).Elem()
}

func (o SecretSyncAzureKeyVaultDestinationConfigPtrOutput) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutput() SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAzureKeyVaultDestinationConfigPtrOutput) ToSecretSyncAzureKeyVaultDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncAzureKeyVaultDestinationConfigPtrOutput) Elem() SecretSyncAzureKeyVaultDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAzureKeyVaultDestinationConfig) SecretSyncAzureKeyVaultDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncAzureKeyVaultDestinationConfig
		return ret
	}).(SecretSyncAzureKeyVaultDestinationConfigOutput)
}

// The base URL of your Azure Key Vault
func (o SecretSyncAzureKeyVaultDestinationConfigPtrOutput) VaultBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureKeyVaultDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.VaultBaseUrl
	}).(pulumi.StringPtrOutput)
}

type SecretSyncAzureKeyVaultSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Azure Key Vault. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Azure Key Vault destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncAzureKeyVaultSyncOptionsInput is an input type that accepts SecretSyncAzureKeyVaultSyncOptionsArgs and SecretSyncAzureKeyVaultSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncAzureKeyVaultSyncOptionsInput` via:
//
//	SecretSyncAzureKeyVaultSyncOptionsArgs{...}
type SecretSyncAzureKeyVaultSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncAzureKeyVaultSyncOptionsOutput() SecretSyncAzureKeyVaultSyncOptionsOutput
	ToSecretSyncAzureKeyVaultSyncOptionsOutputWithContext(context.Context) SecretSyncAzureKeyVaultSyncOptionsOutput
}

type SecretSyncAzureKeyVaultSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Azure Key Vault. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Azure Key Vault destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncAzureKeyVaultSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureKeyVaultSyncOptions)(nil)).Elem()
}

func (i SecretSyncAzureKeyVaultSyncOptionsArgs) ToSecretSyncAzureKeyVaultSyncOptionsOutput() SecretSyncAzureKeyVaultSyncOptionsOutput {
	return i.ToSecretSyncAzureKeyVaultSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncAzureKeyVaultSyncOptionsArgs) ToSecretSyncAzureKeyVaultSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureKeyVaultSyncOptionsOutput)
}

func (i SecretSyncAzureKeyVaultSyncOptionsArgs) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutput() SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return i.ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncAzureKeyVaultSyncOptionsArgs) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureKeyVaultSyncOptionsOutput).ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncAzureKeyVaultSyncOptionsPtrInput is an input type that accepts SecretSyncAzureKeyVaultSyncOptionsArgs, SecretSyncAzureKeyVaultSyncOptionsPtr and SecretSyncAzureKeyVaultSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncAzureKeyVaultSyncOptionsPtrInput` via:
//
//	        SecretSyncAzureKeyVaultSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncAzureKeyVaultSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncAzureKeyVaultSyncOptionsPtrOutput() SecretSyncAzureKeyVaultSyncOptionsPtrOutput
	ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(context.Context) SecretSyncAzureKeyVaultSyncOptionsPtrOutput
}

type secretSyncAzureKeyVaultSyncOptionsPtrType SecretSyncAzureKeyVaultSyncOptionsArgs

func SecretSyncAzureKeyVaultSyncOptionsPtr(v *SecretSyncAzureKeyVaultSyncOptionsArgs) SecretSyncAzureKeyVaultSyncOptionsPtrInput {
	return (*secretSyncAzureKeyVaultSyncOptionsPtrType)(v)
}

func (*secretSyncAzureKeyVaultSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureKeyVaultSyncOptions)(nil)).Elem()
}

func (i *secretSyncAzureKeyVaultSyncOptionsPtrType) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutput() SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return i.ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncAzureKeyVaultSyncOptionsPtrType) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureKeyVaultSyncOptionsPtrOutput)
}

type SecretSyncAzureKeyVaultSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureKeyVaultSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncAzureKeyVaultSyncOptions)(nil)).Elem()
}

func (o SecretSyncAzureKeyVaultSyncOptionsOutput) ToSecretSyncAzureKeyVaultSyncOptionsOutput() SecretSyncAzureKeyVaultSyncOptionsOutput {
	return o
}

func (o SecretSyncAzureKeyVaultSyncOptionsOutput) ToSecretSyncAzureKeyVaultSyncOptionsOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultSyncOptionsOutput {
	return o
}

func (o SecretSyncAzureKeyVaultSyncOptionsOutput) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutput() SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return o.ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncAzureKeyVaultSyncOptionsOutput) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncAzureKeyVaultSyncOptions) *SecretSyncAzureKeyVaultSyncOptions {
		return &v
	}).(SecretSyncAzureKeyVaultSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Azure Key Vault. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAzureKeyVaultSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncAzureKeyVaultSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAzureKeyVaultSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncAzureKeyVaultSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Azure Key Vault destination.
func (o SecretSyncAzureKeyVaultSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncAzureKeyVaultSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncAzureKeyVaultSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureKeyVaultSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureKeyVaultSyncOptions)(nil)).Elem()
}

func (o SecretSyncAzureKeyVaultSyncOptionsPtrOutput) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutput() SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAzureKeyVaultSyncOptionsPtrOutput) ToSecretSyncAzureKeyVaultSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncAzureKeyVaultSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncAzureKeyVaultSyncOptionsPtrOutput) Elem() SecretSyncAzureKeyVaultSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAzureKeyVaultSyncOptions) SecretSyncAzureKeyVaultSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncAzureKeyVaultSyncOptions
		return ret
	}).(SecretSyncAzureKeyVaultSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Azure Key Vault. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncAzureKeyVaultSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureKeyVaultSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncAzureKeyVaultSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureKeyVaultSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Azure Key Vault destination.
func (o SecretSyncAzureKeyVaultSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureKeyVaultSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncBitbucketDestinationConfig struct {
	// The Bitbucket deployment environment ID (optional).
	EnvironmentId *string `pulumi:"environmentId"`
	// The Bitbucket repository slug to sync secrets to.
	RepositorySlug string `pulumi:"repositorySlug"`
	// The Bitbucket workspace slug.
	WorkspaceSlug string `pulumi:"workspaceSlug"`
}

// SecretSyncBitbucketDestinationConfigInput is an input type that accepts SecretSyncBitbucketDestinationConfigArgs and SecretSyncBitbucketDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncBitbucketDestinationConfigInput` via:
//
//	SecretSyncBitbucketDestinationConfigArgs{...}
type SecretSyncBitbucketDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncBitbucketDestinationConfigOutput() SecretSyncBitbucketDestinationConfigOutput
	ToSecretSyncBitbucketDestinationConfigOutputWithContext(context.Context) SecretSyncBitbucketDestinationConfigOutput
}

type SecretSyncBitbucketDestinationConfigArgs struct {
	// The Bitbucket deployment environment ID (optional).
	EnvironmentId pulumi.StringPtrInput `pulumi:"environmentId"`
	// The Bitbucket repository slug to sync secrets to.
	RepositorySlug pulumi.StringInput `pulumi:"repositorySlug"`
	// The Bitbucket workspace slug.
	WorkspaceSlug pulumi.StringInput `pulumi:"workspaceSlug"`
}

func (SecretSyncBitbucketDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncBitbucketDestinationConfig)(nil)).Elem()
}

func (i SecretSyncBitbucketDestinationConfigArgs) ToSecretSyncBitbucketDestinationConfigOutput() SecretSyncBitbucketDestinationConfigOutput {
	return i.ToSecretSyncBitbucketDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncBitbucketDestinationConfigArgs) ToSecretSyncBitbucketDestinationConfigOutputWithContext(ctx context.Context) SecretSyncBitbucketDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncBitbucketDestinationConfigOutput)
}

func (i SecretSyncBitbucketDestinationConfigArgs) ToSecretSyncBitbucketDestinationConfigPtrOutput() SecretSyncBitbucketDestinationConfigPtrOutput {
	return i.ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncBitbucketDestinationConfigArgs) ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncBitbucketDestinationConfigOutput).ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncBitbucketDestinationConfigPtrInput is an input type that accepts SecretSyncBitbucketDestinationConfigArgs, SecretSyncBitbucketDestinationConfigPtr and SecretSyncBitbucketDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncBitbucketDestinationConfigPtrInput` via:
//
//	        SecretSyncBitbucketDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncBitbucketDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncBitbucketDestinationConfigPtrOutput() SecretSyncBitbucketDestinationConfigPtrOutput
	ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(context.Context) SecretSyncBitbucketDestinationConfigPtrOutput
}

type secretSyncBitbucketDestinationConfigPtrType SecretSyncBitbucketDestinationConfigArgs

func SecretSyncBitbucketDestinationConfigPtr(v *SecretSyncBitbucketDestinationConfigArgs) SecretSyncBitbucketDestinationConfigPtrInput {
	return (*secretSyncBitbucketDestinationConfigPtrType)(v)
}

func (*secretSyncBitbucketDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncBitbucketDestinationConfig)(nil)).Elem()
}

func (i *secretSyncBitbucketDestinationConfigPtrType) ToSecretSyncBitbucketDestinationConfigPtrOutput() SecretSyncBitbucketDestinationConfigPtrOutput {
	return i.ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncBitbucketDestinationConfigPtrType) ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncBitbucketDestinationConfigPtrOutput)
}

type SecretSyncBitbucketDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncBitbucketDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncBitbucketDestinationConfig)(nil)).Elem()
}

func (o SecretSyncBitbucketDestinationConfigOutput) ToSecretSyncBitbucketDestinationConfigOutput() SecretSyncBitbucketDestinationConfigOutput {
	return o
}

func (o SecretSyncBitbucketDestinationConfigOutput) ToSecretSyncBitbucketDestinationConfigOutputWithContext(ctx context.Context) SecretSyncBitbucketDestinationConfigOutput {
	return o
}

func (o SecretSyncBitbucketDestinationConfigOutput) ToSecretSyncBitbucketDestinationConfigPtrOutput() SecretSyncBitbucketDestinationConfigPtrOutput {
	return o.ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncBitbucketDestinationConfigOutput) ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncBitbucketDestinationConfig) *SecretSyncBitbucketDestinationConfig {
		return &v
	}).(SecretSyncBitbucketDestinationConfigPtrOutput)
}

// The Bitbucket deployment environment ID (optional).
func (o SecretSyncBitbucketDestinationConfigOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncBitbucketDestinationConfig) *string { return v.EnvironmentId }).(pulumi.StringPtrOutput)
}

// The Bitbucket repository slug to sync secrets to.
func (o SecretSyncBitbucketDestinationConfigOutput) RepositorySlug() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncBitbucketDestinationConfig) string { return v.RepositorySlug }).(pulumi.StringOutput)
}

// The Bitbucket workspace slug.
func (o SecretSyncBitbucketDestinationConfigOutput) WorkspaceSlug() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncBitbucketDestinationConfig) string { return v.WorkspaceSlug }).(pulumi.StringOutput)
}

type SecretSyncBitbucketDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncBitbucketDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncBitbucketDestinationConfig)(nil)).Elem()
}

func (o SecretSyncBitbucketDestinationConfigPtrOutput) ToSecretSyncBitbucketDestinationConfigPtrOutput() SecretSyncBitbucketDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncBitbucketDestinationConfigPtrOutput) ToSecretSyncBitbucketDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncBitbucketDestinationConfigPtrOutput) Elem() SecretSyncBitbucketDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketDestinationConfig) SecretSyncBitbucketDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncBitbucketDestinationConfig
		return ret
	}).(SecretSyncBitbucketDestinationConfigOutput)
}

// The Bitbucket deployment environment ID (optional).
func (o SecretSyncBitbucketDestinationConfigPtrOutput) EnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentId
	}).(pulumi.StringPtrOutput)
}

// The Bitbucket repository slug to sync secrets to.
func (o SecretSyncBitbucketDestinationConfigPtrOutput) RepositorySlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RepositorySlug
	}).(pulumi.StringPtrOutput)
}

// The Bitbucket workspace slug.
func (o SecretSyncBitbucketDestinationConfigPtrOutput) WorkspaceSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceSlug
	}).(pulumi.StringPtrOutput)
}

type SecretSyncBitbucketSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Bitbucket. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Bitbucket destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncBitbucketSyncOptionsInput is an input type that accepts SecretSyncBitbucketSyncOptionsArgs and SecretSyncBitbucketSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncBitbucketSyncOptionsInput` via:
//
//	SecretSyncBitbucketSyncOptionsArgs{...}
type SecretSyncBitbucketSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncBitbucketSyncOptionsOutput() SecretSyncBitbucketSyncOptionsOutput
	ToSecretSyncBitbucketSyncOptionsOutputWithContext(context.Context) SecretSyncBitbucketSyncOptionsOutput
}

type SecretSyncBitbucketSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Bitbucket. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Bitbucket destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncBitbucketSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncBitbucketSyncOptions)(nil)).Elem()
}

func (i SecretSyncBitbucketSyncOptionsArgs) ToSecretSyncBitbucketSyncOptionsOutput() SecretSyncBitbucketSyncOptionsOutput {
	return i.ToSecretSyncBitbucketSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncBitbucketSyncOptionsArgs) ToSecretSyncBitbucketSyncOptionsOutputWithContext(ctx context.Context) SecretSyncBitbucketSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncBitbucketSyncOptionsOutput)
}

func (i SecretSyncBitbucketSyncOptionsArgs) ToSecretSyncBitbucketSyncOptionsPtrOutput() SecretSyncBitbucketSyncOptionsPtrOutput {
	return i.ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncBitbucketSyncOptionsArgs) ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncBitbucketSyncOptionsOutput).ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncBitbucketSyncOptionsPtrInput is an input type that accepts SecretSyncBitbucketSyncOptionsArgs, SecretSyncBitbucketSyncOptionsPtr and SecretSyncBitbucketSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncBitbucketSyncOptionsPtrInput` via:
//
//	        SecretSyncBitbucketSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncBitbucketSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncBitbucketSyncOptionsPtrOutput() SecretSyncBitbucketSyncOptionsPtrOutput
	ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(context.Context) SecretSyncBitbucketSyncOptionsPtrOutput
}

type secretSyncBitbucketSyncOptionsPtrType SecretSyncBitbucketSyncOptionsArgs

func SecretSyncBitbucketSyncOptionsPtr(v *SecretSyncBitbucketSyncOptionsArgs) SecretSyncBitbucketSyncOptionsPtrInput {
	return (*secretSyncBitbucketSyncOptionsPtrType)(v)
}

func (*secretSyncBitbucketSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncBitbucketSyncOptions)(nil)).Elem()
}

func (i *secretSyncBitbucketSyncOptionsPtrType) ToSecretSyncBitbucketSyncOptionsPtrOutput() SecretSyncBitbucketSyncOptionsPtrOutput {
	return i.ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncBitbucketSyncOptionsPtrType) ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncBitbucketSyncOptionsPtrOutput)
}

type SecretSyncBitbucketSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncBitbucketSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncBitbucketSyncOptions)(nil)).Elem()
}

func (o SecretSyncBitbucketSyncOptionsOutput) ToSecretSyncBitbucketSyncOptionsOutput() SecretSyncBitbucketSyncOptionsOutput {
	return o
}

func (o SecretSyncBitbucketSyncOptionsOutput) ToSecretSyncBitbucketSyncOptionsOutputWithContext(ctx context.Context) SecretSyncBitbucketSyncOptionsOutput {
	return o
}

func (o SecretSyncBitbucketSyncOptionsOutput) ToSecretSyncBitbucketSyncOptionsPtrOutput() SecretSyncBitbucketSyncOptionsPtrOutput {
	return o.ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncBitbucketSyncOptionsOutput) ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncBitbucketSyncOptions) *SecretSyncBitbucketSyncOptions {
		return &v
	}).(SecretSyncBitbucketSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Bitbucket. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncBitbucketSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncBitbucketSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncBitbucketSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncBitbucketSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Bitbucket destination.
func (o SecretSyncBitbucketSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncBitbucketSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncBitbucketSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncBitbucketSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncBitbucketSyncOptions)(nil)).Elem()
}

func (o SecretSyncBitbucketSyncOptionsPtrOutput) ToSecretSyncBitbucketSyncOptionsPtrOutput() SecretSyncBitbucketSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncBitbucketSyncOptionsPtrOutput) ToSecretSyncBitbucketSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncBitbucketSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncBitbucketSyncOptionsPtrOutput) Elem() SecretSyncBitbucketSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketSyncOptions) SecretSyncBitbucketSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncBitbucketSyncOptions
		return ret
	}).(SecretSyncBitbucketSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Bitbucket. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncBitbucketSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncBitbucketSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Bitbucket destination.
func (o SecretSyncBitbucketSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncBitbucketSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncCloudflarePagesDestinationConfig struct {
	// The Cloudflare Pages environment (production, preview) where the secrets will be synced
	Environment string `pulumi:"environment"`
	// The Cloudflare Pages project name where the secrets will be synced
	ProjectName string `pulumi:"projectName"`
}

// SecretSyncCloudflarePagesDestinationConfigInput is an input type that accepts SecretSyncCloudflarePagesDestinationConfigArgs and SecretSyncCloudflarePagesDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncCloudflarePagesDestinationConfigInput` via:
//
//	SecretSyncCloudflarePagesDestinationConfigArgs{...}
type SecretSyncCloudflarePagesDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncCloudflarePagesDestinationConfigOutput() SecretSyncCloudflarePagesDestinationConfigOutput
	ToSecretSyncCloudflarePagesDestinationConfigOutputWithContext(context.Context) SecretSyncCloudflarePagesDestinationConfigOutput
}

type SecretSyncCloudflarePagesDestinationConfigArgs struct {
	// The Cloudflare Pages environment (production, preview) where the secrets will be synced
	Environment pulumi.StringInput `pulumi:"environment"`
	// The Cloudflare Pages project name where the secrets will be synced
	ProjectName pulumi.StringInput `pulumi:"projectName"`
}

func (SecretSyncCloudflarePagesDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflarePagesDestinationConfig)(nil)).Elem()
}

func (i SecretSyncCloudflarePagesDestinationConfigArgs) ToSecretSyncCloudflarePagesDestinationConfigOutput() SecretSyncCloudflarePagesDestinationConfigOutput {
	return i.ToSecretSyncCloudflarePagesDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncCloudflarePagesDestinationConfigArgs) ToSecretSyncCloudflarePagesDestinationConfigOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflarePagesDestinationConfigOutput)
}

func (i SecretSyncCloudflarePagesDestinationConfigArgs) ToSecretSyncCloudflarePagesDestinationConfigPtrOutput() SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return i.ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncCloudflarePagesDestinationConfigArgs) ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflarePagesDestinationConfigOutput).ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncCloudflarePagesDestinationConfigPtrInput is an input type that accepts SecretSyncCloudflarePagesDestinationConfigArgs, SecretSyncCloudflarePagesDestinationConfigPtr and SecretSyncCloudflarePagesDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncCloudflarePagesDestinationConfigPtrInput` via:
//
//	        SecretSyncCloudflarePagesDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncCloudflarePagesDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncCloudflarePagesDestinationConfigPtrOutput() SecretSyncCloudflarePagesDestinationConfigPtrOutput
	ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(context.Context) SecretSyncCloudflarePagesDestinationConfigPtrOutput
}

type secretSyncCloudflarePagesDestinationConfigPtrType SecretSyncCloudflarePagesDestinationConfigArgs

func SecretSyncCloudflarePagesDestinationConfigPtr(v *SecretSyncCloudflarePagesDestinationConfigArgs) SecretSyncCloudflarePagesDestinationConfigPtrInput {
	return (*secretSyncCloudflarePagesDestinationConfigPtrType)(v)
}

func (*secretSyncCloudflarePagesDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflarePagesDestinationConfig)(nil)).Elem()
}

func (i *secretSyncCloudflarePagesDestinationConfigPtrType) ToSecretSyncCloudflarePagesDestinationConfigPtrOutput() SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return i.ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncCloudflarePagesDestinationConfigPtrType) ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflarePagesDestinationConfigPtrOutput)
}

type SecretSyncCloudflarePagesDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflarePagesDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflarePagesDestinationConfig)(nil)).Elem()
}

func (o SecretSyncCloudflarePagesDestinationConfigOutput) ToSecretSyncCloudflarePagesDestinationConfigOutput() SecretSyncCloudflarePagesDestinationConfigOutput {
	return o
}

func (o SecretSyncCloudflarePagesDestinationConfigOutput) ToSecretSyncCloudflarePagesDestinationConfigOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesDestinationConfigOutput {
	return o
}

func (o SecretSyncCloudflarePagesDestinationConfigOutput) ToSecretSyncCloudflarePagesDestinationConfigPtrOutput() SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return o.ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncCloudflarePagesDestinationConfigOutput) ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncCloudflarePagesDestinationConfig) *SecretSyncCloudflarePagesDestinationConfig {
		return &v
	}).(SecretSyncCloudflarePagesDestinationConfigPtrOutput)
}

// The Cloudflare Pages environment (production, preview) where the secrets will be synced
func (o SecretSyncCloudflarePagesDestinationConfigOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncCloudflarePagesDestinationConfig) string { return v.Environment }).(pulumi.StringOutput)
}

// The Cloudflare Pages project name where the secrets will be synced
func (o SecretSyncCloudflarePagesDestinationConfigOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncCloudflarePagesDestinationConfig) string { return v.ProjectName }).(pulumi.StringOutput)
}

type SecretSyncCloudflarePagesDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflarePagesDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflarePagesDestinationConfig)(nil)).Elem()
}

func (o SecretSyncCloudflarePagesDestinationConfigPtrOutput) ToSecretSyncCloudflarePagesDestinationConfigPtrOutput() SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncCloudflarePagesDestinationConfigPtrOutput) ToSecretSyncCloudflarePagesDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncCloudflarePagesDestinationConfigPtrOutput) Elem() SecretSyncCloudflarePagesDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncCloudflarePagesDestinationConfig) SecretSyncCloudflarePagesDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncCloudflarePagesDestinationConfig
		return ret
	}).(SecretSyncCloudflarePagesDestinationConfigOutput)
}

// The Cloudflare Pages environment (production, preview) where the secrets will be synced
func (o SecretSyncCloudflarePagesDestinationConfigPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflarePagesDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Environment
	}).(pulumi.StringPtrOutput)
}

// The Cloudflare Pages project name where the secrets will be synced
func (o SecretSyncCloudflarePagesDestinationConfigPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflarePagesDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectName
	}).(pulumi.StringPtrOutput)
}

type SecretSyncCloudflarePagesSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Cloudflare Pages. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Cloudflare Pages destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncCloudflarePagesSyncOptionsInput is an input type that accepts SecretSyncCloudflarePagesSyncOptionsArgs and SecretSyncCloudflarePagesSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncCloudflarePagesSyncOptionsInput` via:
//
//	SecretSyncCloudflarePagesSyncOptionsArgs{...}
type SecretSyncCloudflarePagesSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncCloudflarePagesSyncOptionsOutput() SecretSyncCloudflarePagesSyncOptionsOutput
	ToSecretSyncCloudflarePagesSyncOptionsOutputWithContext(context.Context) SecretSyncCloudflarePagesSyncOptionsOutput
}

type SecretSyncCloudflarePagesSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Cloudflare Pages. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Cloudflare Pages destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncCloudflarePagesSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflarePagesSyncOptions)(nil)).Elem()
}

func (i SecretSyncCloudflarePagesSyncOptionsArgs) ToSecretSyncCloudflarePagesSyncOptionsOutput() SecretSyncCloudflarePagesSyncOptionsOutput {
	return i.ToSecretSyncCloudflarePagesSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncCloudflarePagesSyncOptionsArgs) ToSecretSyncCloudflarePagesSyncOptionsOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflarePagesSyncOptionsOutput)
}

func (i SecretSyncCloudflarePagesSyncOptionsArgs) ToSecretSyncCloudflarePagesSyncOptionsPtrOutput() SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return i.ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncCloudflarePagesSyncOptionsArgs) ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflarePagesSyncOptionsOutput).ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncCloudflarePagesSyncOptionsPtrInput is an input type that accepts SecretSyncCloudflarePagesSyncOptionsArgs, SecretSyncCloudflarePagesSyncOptionsPtr and SecretSyncCloudflarePagesSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncCloudflarePagesSyncOptionsPtrInput` via:
//
//	        SecretSyncCloudflarePagesSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncCloudflarePagesSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncCloudflarePagesSyncOptionsPtrOutput() SecretSyncCloudflarePagesSyncOptionsPtrOutput
	ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(context.Context) SecretSyncCloudflarePagesSyncOptionsPtrOutput
}

type secretSyncCloudflarePagesSyncOptionsPtrType SecretSyncCloudflarePagesSyncOptionsArgs

func SecretSyncCloudflarePagesSyncOptionsPtr(v *SecretSyncCloudflarePagesSyncOptionsArgs) SecretSyncCloudflarePagesSyncOptionsPtrInput {
	return (*secretSyncCloudflarePagesSyncOptionsPtrType)(v)
}

func (*secretSyncCloudflarePagesSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflarePagesSyncOptions)(nil)).Elem()
}

func (i *secretSyncCloudflarePagesSyncOptionsPtrType) ToSecretSyncCloudflarePagesSyncOptionsPtrOutput() SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return i.ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncCloudflarePagesSyncOptionsPtrType) ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflarePagesSyncOptionsPtrOutput)
}

type SecretSyncCloudflarePagesSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflarePagesSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflarePagesSyncOptions)(nil)).Elem()
}

func (o SecretSyncCloudflarePagesSyncOptionsOutput) ToSecretSyncCloudflarePagesSyncOptionsOutput() SecretSyncCloudflarePagesSyncOptionsOutput {
	return o
}

func (o SecretSyncCloudflarePagesSyncOptionsOutput) ToSecretSyncCloudflarePagesSyncOptionsOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesSyncOptionsOutput {
	return o
}

func (o SecretSyncCloudflarePagesSyncOptionsOutput) ToSecretSyncCloudflarePagesSyncOptionsPtrOutput() SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return o.ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncCloudflarePagesSyncOptionsOutput) ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncCloudflarePagesSyncOptions) *SecretSyncCloudflarePagesSyncOptions {
		return &v
	}).(SecretSyncCloudflarePagesSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Cloudflare Pages. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncCloudflarePagesSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncCloudflarePagesSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncCloudflarePagesSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncCloudflarePagesSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Cloudflare Pages destination.
func (o SecretSyncCloudflarePagesSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncCloudflarePagesSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncCloudflarePagesSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflarePagesSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflarePagesSyncOptions)(nil)).Elem()
}

func (o SecretSyncCloudflarePagesSyncOptionsPtrOutput) ToSecretSyncCloudflarePagesSyncOptionsPtrOutput() SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncCloudflarePagesSyncOptionsPtrOutput) ToSecretSyncCloudflarePagesSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflarePagesSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncCloudflarePagesSyncOptionsPtrOutput) Elem() SecretSyncCloudflarePagesSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncCloudflarePagesSyncOptions) SecretSyncCloudflarePagesSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncCloudflarePagesSyncOptions
		return ret
	}).(SecretSyncCloudflarePagesSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Cloudflare Pages. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncCloudflarePagesSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflarePagesSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncCloudflarePagesSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflarePagesSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Cloudflare Pages destination.
func (o SecretSyncCloudflarePagesSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflarePagesSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncCloudflareWorkersDestinationConfig struct {
	// The Cloudflare Workers script ID where the secrets will be synced
	ScriptId string `pulumi:"scriptId"`
}

// SecretSyncCloudflareWorkersDestinationConfigInput is an input type that accepts SecretSyncCloudflareWorkersDestinationConfigArgs and SecretSyncCloudflareWorkersDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncCloudflareWorkersDestinationConfigInput` via:
//
//	SecretSyncCloudflareWorkersDestinationConfigArgs{...}
type SecretSyncCloudflareWorkersDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncCloudflareWorkersDestinationConfigOutput() SecretSyncCloudflareWorkersDestinationConfigOutput
	ToSecretSyncCloudflareWorkersDestinationConfigOutputWithContext(context.Context) SecretSyncCloudflareWorkersDestinationConfigOutput
}

type SecretSyncCloudflareWorkersDestinationConfigArgs struct {
	// The Cloudflare Workers script ID where the secrets will be synced
	ScriptId pulumi.StringInput `pulumi:"scriptId"`
}

func (SecretSyncCloudflareWorkersDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflareWorkersDestinationConfig)(nil)).Elem()
}

func (i SecretSyncCloudflareWorkersDestinationConfigArgs) ToSecretSyncCloudflareWorkersDestinationConfigOutput() SecretSyncCloudflareWorkersDestinationConfigOutput {
	return i.ToSecretSyncCloudflareWorkersDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncCloudflareWorkersDestinationConfigArgs) ToSecretSyncCloudflareWorkersDestinationConfigOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflareWorkersDestinationConfigOutput)
}

func (i SecretSyncCloudflareWorkersDestinationConfigArgs) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutput() SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return i.ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncCloudflareWorkersDestinationConfigArgs) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflareWorkersDestinationConfigOutput).ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncCloudflareWorkersDestinationConfigPtrInput is an input type that accepts SecretSyncCloudflareWorkersDestinationConfigArgs, SecretSyncCloudflareWorkersDestinationConfigPtr and SecretSyncCloudflareWorkersDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncCloudflareWorkersDestinationConfigPtrInput` via:
//
//	        SecretSyncCloudflareWorkersDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncCloudflareWorkersDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncCloudflareWorkersDestinationConfigPtrOutput() SecretSyncCloudflareWorkersDestinationConfigPtrOutput
	ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(context.Context) SecretSyncCloudflareWorkersDestinationConfigPtrOutput
}

type secretSyncCloudflareWorkersDestinationConfigPtrType SecretSyncCloudflareWorkersDestinationConfigArgs

func SecretSyncCloudflareWorkersDestinationConfigPtr(v *SecretSyncCloudflareWorkersDestinationConfigArgs) SecretSyncCloudflareWorkersDestinationConfigPtrInput {
	return (*secretSyncCloudflareWorkersDestinationConfigPtrType)(v)
}

func (*secretSyncCloudflareWorkersDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflareWorkersDestinationConfig)(nil)).Elem()
}

func (i *secretSyncCloudflareWorkersDestinationConfigPtrType) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutput() SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return i.ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncCloudflareWorkersDestinationConfigPtrType) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflareWorkersDestinationConfigPtrOutput)
}

type SecretSyncCloudflareWorkersDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflareWorkersDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflareWorkersDestinationConfig)(nil)).Elem()
}

func (o SecretSyncCloudflareWorkersDestinationConfigOutput) ToSecretSyncCloudflareWorkersDestinationConfigOutput() SecretSyncCloudflareWorkersDestinationConfigOutput {
	return o
}

func (o SecretSyncCloudflareWorkersDestinationConfigOutput) ToSecretSyncCloudflareWorkersDestinationConfigOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersDestinationConfigOutput {
	return o
}

func (o SecretSyncCloudflareWorkersDestinationConfigOutput) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutput() SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return o.ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncCloudflareWorkersDestinationConfigOutput) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncCloudflareWorkersDestinationConfig) *SecretSyncCloudflareWorkersDestinationConfig {
		return &v
	}).(SecretSyncCloudflareWorkersDestinationConfigPtrOutput)
}

// The Cloudflare Workers script ID where the secrets will be synced
func (o SecretSyncCloudflareWorkersDestinationConfigOutput) ScriptId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncCloudflareWorkersDestinationConfig) string { return v.ScriptId }).(pulumi.StringOutput)
}

type SecretSyncCloudflareWorkersDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflareWorkersDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflareWorkersDestinationConfig)(nil)).Elem()
}

func (o SecretSyncCloudflareWorkersDestinationConfigPtrOutput) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutput() SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncCloudflareWorkersDestinationConfigPtrOutput) ToSecretSyncCloudflareWorkersDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncCloudflareWorkersDestinationConfigPtrOutput) Elem() SecretSyncCloudflareWorkersDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncCloudflareWorkersDestinationConfig) SecretSyncCloudflareWorkersDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncCloudflareWorkersDestinationConfig
		return ret
	}).(SecretSyncCloudflareWorkersDestinationConfigOutput)
}

// The Cloudflare Workers script ID where the secrets will be synced
func (o SecretSyncCloudflareWorkersDestinationConfigPtrOutput) ScriptId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflareWorkersDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ScriptId
	}).(pulumi.StringPtrOutput)
}

type SecretSyncCloudflareWorkersSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Cloudflare Workers. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Cloudflare Workers destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncCloudflareWorkersSyncOptionsInput is an input type that accepts SecretSyncCloudflareWorkersSyncOptionsArgs and SecretSyncCloudflareWorkersSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncCloudflareWorkersSyncOptionsInput` via:
//
//	SecretSyncCloudflareWorkersSyncOptionsArgs{...}
type SecretSyncCloudflareWorkersSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncCloudflareWorkersSyncOptionsOutput() SecretSyncCloudflareWorkersSyncOptionsOutput
	ToSecretSyncCloudflareWorkersSyncOptionsOutputWithContext(context.Context) SecretSyncCloudflareWorkersSyncOptionsOutput
}

type SecretSyncCloudflareWorkersSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Cloudflare Workers. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Cloudflare Workers destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncCloudflareWorkersSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflareWorkersSyncOptions)(nil)).Elem()
}

func (i SecretSyncCloudflareWorkersSyncOptionsArgs) ToSecretSyncCloudflareWorkersSyncOptionsOutput() SecretSyncCloudflareWorkersSyncOptionsOutput {
	return i.ToSecretSyncCloudflareWorkersSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncCloudflareWorkersSyncOptionsArgs) ToSecretSyncCloudflareWorkersSyncOptionsOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflareWorkersSyncOptionsOutput)
}

func (i SecretSyncCloudflareWorkersSyncOptionsArgs) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutput() SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return i.ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncCloudflareWorkersSyncOptionsArgs) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflareWorkersSyncOptionsOutput).ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncCloudflareWorkersSyncOptionsPtrInput is an input type that accepts SecretSyncCloudflareWorkersSyncOptionsArgs, SecretSyncCloudflareWorkersSyncOptionsPtr and SecretSyncCloudflareWorkersSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncCloudflareWorkersSyncOptionsPtrInput` via:
//
//	        SecretSyncCloudflareWorkersSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncCloudflareWorkersSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncCloudflareWorkersSyncOptionsPtrOutput() SecretSyncCloudflareWorkersSyncOptionsPtrOutput
	ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(context.Context) SecretSyncCloudflareWorkersSyncOptionsPtrOutput
}

type secretSyncCloudflareWorkersSyncOptionsPtrType SecretSyncCloudflareWorkersSyncOptionsArgs

func SecretSyncCloudflareWorkersSyncOptionsPtr(v *SecretSyncCloudflareWorkersSyncOptionsArgs) SecretSyncCloudflareWorkersSyncOptionsPtrInput {
	return (*secretSyncCloudflareWorkersSyncOptionsPtrType)(v)
}

func (*secretSyncCloudflareWorkersSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflareWorkersSyncOptions)(nil)).Elem()
}

func (i *secretSyncCloudflareWorkersSyncOptionsPtrType) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutput() SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return i.ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncCloudflareWorkersSyncOptionsPtrType) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncCloudflareWorkersSyncOptionsPtrOutput)
}

type SecretSyncCloudflareWorkersSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflareWorkersSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncCloudflareWorkersSyncOptions)(nil)).Elem()
}

func (o SecretSyncCloudflareWorkersSyncOptionsOutput) ToSecretSyncCloudflareWorkersSyncOptionsOutput() SecretSyncCloudflareWorkersSyncOptionsOutput {
	return o
}

func (o SecretSyncCloudflareWorkersSyncOptionsOutput) ToSecretSyncCloudflareWorkersSyncOptionsOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersSyncOptionsOutput {
	return o
}

func (o SecretSyncCloudflareWorkersSyncOptionsOutput) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutput() SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return o.ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncCloudflareWorkersSyncOptionsOutput) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncCloudflareWorkersSyncOptions) *SecretSyncCloudflareWorkersSyncOptions {
		return &v
	}).(SecretSyncCloudflareWorkersSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Cloudflare Workers. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncCloudflareWorkersSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncCloudflareWorkersSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncCloudflareWorkersSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncCloudflareWorkersSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Cloudflare Workers destination.
func (o SecretSyncCloudflareWorkersSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncCloudflareWorkersSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncCloudflareWorkersSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncCloudflareWorkersSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncCloudflareWorkersSyncOptions)(nil)).Elem()
}

func (o SecretSyncCloudflareWorkersSyncOptionsPtrOutput) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutput() SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncCloudflareWorkersSyncOptionsPtrOutput) ToSecretSyncCloudflareWorkersSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncCloudflareWorkersSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncCloudflareWorkersSyncOptionsPtrOutput) Elem() SecretSyncCloudflareWorkersSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncCloudflareWorkersSyncOptions) SecretSyncCloudflareWorkersSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncCloudflareWorkersSyncOptions
		return ret
	}).(SecretSyncCloudflareWorkersSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Cloudflare Workers. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncCloudflareWorkersSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflareWorkersSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncCloudflareWorkersSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflareWorkersSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Cloudflare Workers destination.
func (o SecretSyncCloudflareWorkersSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncCloudflareWorkersSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncDatabricksDestinationConfig struct {
	// The Databricks secret scope to sync secrets to.
	Scope string `pulumi:"scope"`
}

// SecretSyncDatabricksDestinationConfigInput is an input type that accepts SecretSyncDatabricksDestinationConfigArgs and SecretSyncDatabricksDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncDatabricksDestinationConfigInput` via:
//
//	SecretSyncDatabricksDestinationConfigArgs{...}
type SecretSyncDatabricksDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncDatabricksDestinationConfigOutput() SecretSyncDatabricksDestinationConfigOutput
	ToSecretSyncDatabricksDestinationConfigOutputWithContext(context.Context) SecretSyncDatabricksDestinationConfigOutput
}

type SecretSyncDatabricksDestinationConfigArgs struct {
	// The Databricks secret scope to sync secrets to.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (SecretSyncDatabricksDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncDatabricksDestinationConfig)(nil)).Elem()
}

func (i SecretSyncDatabricksDestinationConfigArgs) ToSecretSyncDatabricksDestinationConfigOutput() SecretSyncDatabricksDestinationConfigOutput {
	return i.ToSecretSyncDatabricksDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncDatabricksDestinationConfigArgs) ToSecretSyncDatabricksDestinationConfigOutputWithContext(ctx context.Context) SecretSyncDatabricksDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncDatabricksDestinationConfigOutput)
}

func (i SecretSyncDatabricksDestinationConfigArgs) ToSecretSyncDatabricksDestinationConfigPtrOutput() SecretSyncDatabricksDestinationConfigPtrOutput {
	return i.ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncDatabricksDestinationConfigArgs) ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncDatabricksDestinationConfigOutput).ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncDatabricksDestinationConfigPtrInput is an input type that accepts SecretSyncDatabricksDestinationConfigArgs, SecretSyncDatabricksDestinationConfigPtr and SecretSyncDatabricksDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncDatabricksDestinationConfigPtrInput` via:
//
//	        SecretSyncDatabricksDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncDatabricksDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncDatabricksDestinationConfigPtrOutput() SecretSyncDatabricksDestinationConfigPtrOutput
	ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(context.Context) SecretSyncDatabricksDestinationConfigPtrOutput
}

type secretSyncDatabricksDestinationConfigPtrType SecretSyncDatabricksDestinationConfigArgs

func SecretSyncDatabricksDestinationConfigPtr(v *SecretSyncDatabricksDestinationConfigArgs) SecretSyncDatabricksDestinationConfigPtrInput {
	return (*secretSyncDatabricksDestinationConfigPtrType)(v)
}

func (*secretSyncDatabricksDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncDatabricksDestinationConfig)(nil)).Elem()
}

func (i *secretSyncDatabricksDestinationConfigPtrType) ToSecretSyncDatabricksDestinationConfigPtrOutput() SecretSyncDatabricksDestinationConfigPtrOutput {
	return i.ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncDatabricksDestinationConfigPtrType) ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncDatabricksDestinationConfigPtrOutput)
}

type SecretSyncDatabricksDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncDatabricksDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncDatabricksDestinationConfig)(nil)).Elem()
}

func (o SecretSyncDatabricksDestinationConfigOutput) ToSecretSyncDatabricksDestinationConfigOutput() SecretSyncDatabricksDestinationConfigOutput {
	return o
}

func (o SecretSyncDatabricksDestinationConfigOutput) ToSecretSyncDatabricksDestinationConfigOutputWithContext(ctx context.Context) SecretSyncDatabricksDestinationConfigOutput {
	return o
}

func (o SecretSyncDatabricksDestinationConfigOutput) ToSecretSyncDatabricksDestinationConfigPtrOutput() SecretSyncDatabricksDestinationConfigPtrOutput {
	return o.ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncDatabricksDestinationConfigOutput) ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncDatabricksDestinationConfig) *SecretSyncDatabricksDestinationConfig {
		return &v
	}).(SecretSyncDatabricksDestinationConfigPtrOutput)
}

// The Databricks secret scope to sync secrets to.
func (o SecretSyncDatabricksDestinationConfigOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncDatabricksDestinationConfig) string { return v.Scope }).(pulumi.StringOutput)
}

type SecretSyncDatabricksDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncDatabricksDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncDatabricksDestinationConfig)(nil)).Elem()
}

func (o SecretSyncDatabricksDestinationConfigPtrOutput) ToSecretSyncDatabricksDestinationConfigPtrOutput() SecretSyncDatabricksDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncDatabricksDestinationConfigPtrOutput) ToSecretSyncDatabricksDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncDatabricksDestinationConfigPtrOutput) Elem() SecretSyncDatabricksDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncDatabricksDestinationConfig) SecretSyncDatabricksDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncDatabricksDestinationConfig
		return ret
	}).(SecretSyncDatabricksDestinationConfigOutput)
}

// The Databricks secret scope to sync secrets to.
func (o SecretSyncDatabricksDestinationConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncDatabricksDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

type SecretSyncDatabricksSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Databricks. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Databricks destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncDatabricksSyncOptionsInput is an input type that accepts SecretSyncDatabricksSyncOptionsArgs and SecretSyncDatabricksSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncDatabricksSyncOptionsInput` via:
//
//	SecretSyncDatabricksSyncOptionsArgs{...}
type SecretSyncDatabricksSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncDatabricksSyncOptionsOutput() SecretSyncDatabricksSyncOptionsOutput
	ToSecretSyncDatabricksSyncOptionsOutputWithContext(context.Context) SecretSyncDatabricksSyncOptionsOutput
}

type SecretSyncDatabricksSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Databricks. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Databricks destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncDatabricksSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncDatabricksSyncOptions)(nil)).Elem()
}

func (i SecretSyncDatabricksSyncOptionsArgs) ToSecretSyncDatabricksSyncOptionsOutput() SecretSyncDatabricksSyncOptionsOutput {
	return i.ToSecretSyncDatabricksSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncDatabricksSyncOptionsArgs) ToSecretSyncDatabricksSyncOptionsOutputWithContext(ctx context.Context) SecretSyncDatabricksSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncDatabricksSyncOptionsOutput)
}

func (i SecretSyncDatabricksSyncOptionsArgs) ToSecretSyncDatabricksSyncOptionsPtrOutput() SecretSyncDatabricksSyncOptionsPtrOutput {
	return i.ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncDatabricksSyncOptionsArgs) ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncDatabricksSyncOptionsOutput).ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncDatabricksSyncOptionsPtrInput is an input type that accepts SecretSyncDatabricksSyncOptionsArgs, SecretSyncDatabricksSyncOptionsPtr and SecretSyncDatabricksSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncDatabricksSyncOptionsPtrInput` via:
//
//	        SecretSyncDatabricksSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncDatabricksSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncDatabricksSyncOptionsPtrOutput() SecretSyncDatabricksSyncOptionsPtrOutput
	ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(context.Context) SecretSyncDatabricksSyncOptionsPtrOutput
}

type secretSyncDatabricksSyncOptionsPtrType SecretSyncDatabricksSyncOptionsArgs

func SecretSyncDatabricksSyncOptionsPtr(v *SecretSyncDatabricksSyncOptionsArgs) SecretSyncDatabricksSyncOptionsPtrInput {
	return (*secretSyncDatabricksSyncOptionsPtrType)(v)
}

func (*secretSyncDatabricksSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncDatabricksSyncOptions)(nil)).Elem()
}

func (i *secretSyncDatabricksSyncOptionsPtrType) ToSecretSyncDatabricksSyncOptionsPtrOutput() SecretSyncDatabricksSyncOptionsPtrOutput {
	return i.ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncDatabricksSyncOptionsPtrType) ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncDatabricksSyncOptionsPtrOutput)
}

type SecretSyncDatabricksSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncDatabricksSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncDatabricksSyncOptions)(nil)).Elem()
}

func (o SecretSyncDatabricksSyncOptionsOutput) ToSecretSyncDatabricksSyncOptionsOutput() SecretSyncDatabricksSyncOptionsOutput {
	return o
}

func (o SecretSyncDatabricksSyncOptionsOutput) ToSecretSyncDatabricksSyncOptionsOutputWithContext(ctx context.Context) SecretSyncDatabricksSyncOptionsOutput {
	return o
}

func (o SecretSyncDatabricksSyncOptionsOutput) ToSecretSyncDatabricksSyncOptionsPtrOutput() SecretSyncDatabricksSyncOptionsPtrOutput {
	return o.ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncDatabricksSyncOptionsOutput) ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncDatabricksSyncOptions) *SecretSyncDatabricksSyncOptions {
		return &v
	}).(SecretSyncDatabricksSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Databricks. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncDatabricksSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncDatabricksSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncDatabricksSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncDatabricksSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Databricks destination.
func (o SecretSyncDatabricksSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncDatabricksSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncDatabricksSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncDatabricksSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncDatabricksSyncOptions)(nil)).Elem()
}

func (o SecretSyncDatabricksSyncOptionsPtrOutput) ToSecretSyncDatabricksSyncOptionsPtrOutput() SecretSyncDatabricksSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncDatabricksSyncOptionsPtrOutput) ToSecretSyncDatabricksSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncDatabricksSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncDatabricksSyncOptionsPtrOutput) Elem() SecretSyncDatabricksSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncDatabricksSyncOptions) SecretSyncDatabricksSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncDatabricksSyncOptions
		return ret
	}).(SecretSyncDatabricksSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Databricks. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncDatabricksSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncDatabricksSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncDatabricksSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncDatabricksSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Databricks destination.
func (o SecretSyncDatabricksSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncDatabricksSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncFlyioDestinationConfig struct {
	// The Fly.io app ID to sync secrets to.
	AppId string `pulumi:"appId"`
}

// SecretSyncFlyioDestinationConfigInput is an input type that accepts SecretSyncFlyioDestinationConfigArgs and SecretSyncFlyioDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncFlyioDestinationConfigInput` via:
//
//	SecretSyncFlyioDestinationConfigArgs{...}
type SecretSyncFlyioDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncFlyioDestinationConfigOutput() SecretSyncFlyioDestinationConfigOutput
	ToSecretSyncFlyioDestinationConfigOutputWithContext(context.Context) SecretSyncFlyioDestinationConfigOutput
}

type SecretSyncFlyioDestinationConfigArgs struct {
	// The Fly.io app ID to sync secrets to.
	AppId pulumi.StringInput `pulumi:"appId"`
}

func (SecretSyncFlyioDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncFlyioDestinationConfig)(nil)).Elem()
}

func (i SecretSyncFlyioDestinationConfigArgs) ToSecretSyncFlyioDestinationConfigOutput() SecretSyncFlyioDestinationConfigOutput {
	return i.ToSecretSyncFlyioDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncFlyioDestinationConfigArgs) ToSecretSyncFlyioDestinationConfigOutputWithContext(ctx context.Context) SecretSyncFlyioDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncFlyioDestinationConfigOutput)
}

func (i SecretSyncFlyioDestinationConfigArgs) ToSecretSyncFlyioDestinationConfigPtrOutput() SecretSyncFlyioDestinationConfigPtrOutput {
	return i.ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncFlyioDestinationConfigArgs) ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncFlyioDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncFlyioDestinationConfigOutput).ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncFlyioDestinationConfigPtrInput is an input type that accepts SecretSyncFlyioDestinationConfigArgs, SecretSyncFlyioDestinationConfigPtr and SecretSyncFlyioDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncFlyioDestinationConfigPtrInput` via:
//
//	        SecretSyncFlyioDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncFlyioDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncFlyioDestinationConfigPtrOutput() SecretSyncFlyioDestinationConfigPtrOutput
	ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(context.Context) SecretSyncFlyioDestinationConfigPtrOutput
}

type secretSyncFlyioDestinationConfigPtrType SecretSyncFlyioDestinationConfigArgs

func SecretSyncFlyioDestinationConfigPtr(v *SecretSyncFlyioDestinationConfigArgs) SecretSyncFlyioDestinationConfigPtrInput {
	return (*secretSyncFlyioDestinationConfigPtrType)(v)
}

func (*secretSyncFlyioDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncFlyioDestinationConfig)(nil)).Elem()
}

func (i *secretSyncFlyioDestinationConfigPtrType) ToSecretSyncFlyioDestinationConfigPtrOutput() SecretSyncFlyioDestinationConfigPtrOutput {
	return i.ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncFlyioDestinationConfigPtrType) ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncFlyioDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncFlyioDestinationConfigPtrOutput)
}

type SecretSyncFlyioDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncFlyioDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncFlyioDestinationConfig)(nil)).Elem()
}

func (o SecretSyncFlyioDestinationConfigOutput) ToSecretSyncFlyioDestinationConfigOutput() SecretSyncFlyioDestinationConfigOutput {
	return o
}

func (o SecretSyncFlyioDestinationConfigOutput) ToSecretSyncFlyioDestinationConfigOutputWithContext(ctx context.Context) SecretSyncFlyioDestinationConfigOutput {
	return o
}

func (o SecretSyncFlyioDestinationConfigOutput) ToSecretSyncFlyioDestinationConfigPtrOutput() SecretSyncFlyioDestinationConfigPtrOutput {
	return o.ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncFlyioDestinationConfigOutput) ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncFlyioDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncFlyioDestinationConfig) *SecretSyncFlyioDestinationConfig {
		return &v
	}).(SecretSyncFlyioDestinationConfigPtrOutput)
}

// The Fly.io app ID to sync secrets to.
func (o SecretSyncFlyioDestinationConfigOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncFlyioDestinationConfig) string { return v.AppId }).(pulumi.StringOutput)
}

type SecretSyncFlyioDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncFlyioDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncFlyioDestinationConfig)(nil)).Elem()
}

func (o SecretSyncFlyioDestinationConfigPtrOutput) ToSecretSyncFlyioDestinationConfigPtrOutput() SecretSyncFlyioDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncFlyioDestinationConfigPtrOutput) ToSecretSyncFlyioDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncFlyioDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncFlyioDestinationConfigPtrOutput) Elem() SecretSyncFlyioDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncFlyioDestinationConfig) SecretSyncFlyioDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncFlyioDestinationConfig
		return ret
	}).(SecretSyncFlyioDestinationConfigOutput)
}

// The Fly.io app ID to sync secrets to.
func (o SecretSyncFlyioDestinationConfigPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncFlyioDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AppId
	}).(pulumi.StringPtrOutput)
}

type SecretSyncFlyioSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Fly.io. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Fly.io destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncFlyioSyncOptionsInput is an input type that accepts SecretSyncFlyioSyncOptionsArgs and SecretSyncFlyioSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncFlyioSyncOptionsInput` via:
//
//	SecretSyncFlyioSyncOptionsArgs{...}
type SecretSyncFlyioSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncFlyioSyncOptionsOutput() SecretSyncFlyioSyncOptionsOutput
	ToSecretSyncFlyioSyncOptionsOutputWithContext(context.Context) SecretSyncFlyioSyncOptionsOutput
}

type SecretSyncFlyioSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Fly.io. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Fly.io destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncFlyioSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncFlyioSyncOptions)(nil)).Elem()
}

func (i SecretSyncFlyioSyncOptionsArgs) ToSecretSyncFlyioSyncOptionsOutput() SecretSyncFlyioSyncOptionsOutput {
	return i.ToSecretSyncFlyioSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncFlyioSyncOptionsArgs) ToSecretSyncFlyioSyncOptionsOutputWithContext(ctx context.Context) SecretSyncFlyioSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncFlyioSyncOptionsOutput)
}

func (i SecretSyncFlyioSyncOptionsArgs) ToSecretSyncFlyioSyncOptionsPtrOutput() SecretSyncFlyioSyncOptionsPtrOutput {
	return i.ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncFlyioSyncOptionsArgs) ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncFlyioSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncFlyioSyncOptionsOutput).ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncFlyioSyncOptionsPtrInput is an input type that accepts SecretSyncFlyioSyncOptionsArgs, SecretSyncFlyioSyncOptionsPtr and SecretSyncFlyioSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncFlyioSyncOptionsPtrInput` via:
//
//	        SecretSyncFlyioSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncFlyioSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncFlyioSyncOptionsPtrOutput() SecretSyncFlyioSyncOptionsPtrOutput
	ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(context.Context) SecretSyncFlyioSyncOptionsPtrOutput
}

type secretSyncFlyioSyncOptionsPtrType SecretSyncFlyioSyncOptionsArgs

func SecretSyncFlyioSyncOptionsPtr(v *SecretSyncFlyioSyncOptionsArgs) SecretSyncFlyioSyncOptionsPtrInput {
	return (*secretSyncFlyioSyncOptionsPtrType)(v)
}

func (*secretSyncFlyioSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncFlyioSyncOptions)(nil)).Elem()
}

func (i *secretSyncFlyioSyncOptionsPtrType) ToSecretSyncFlyioSyncOptionsPtrOutput() SecretSyncFlyioSyncOptionsPtrOutput {
	return i.ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncFlyioSyncOptionsPtrType) ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncFlyioSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncFlyioSyncOptionsPtrOutput)
}

type SecretSyncFlyioSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncFlyioSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncFlyioSyncOptions)(nil)).Elem()
}

func (o SecretSyncFlyioSyncOptionsOutput) ToSecretSyncFlyioSyncOptionsOutput() SecretSyncFlyioSyncOptionsOutput {
	return o
}

func (o SecretSyncFlyioSyncOptionsOutput) ToSecretSyncFlyioSyncOptionsOutputWithContext(ctx context.Context) SecretSyncFlyioSyncOptionsOutput {
	return o
}

func (o SecretSyncFlyioSyncOptionsOutput) ToSecretSyncFlyioSyncOptionsPtrOutput() SecretSyncFlyioSyncOptionsPtrOutput {
	return o.ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncFlyioSyncOptionsOutput) ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncFlyioSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncFlyioSyncOptions) *SecretSyncFlyioSyncOptions {
		return &v
	}).(SecretSyncFlyioSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Fly.io. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncFlyioSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncFlyioSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncFlyioSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncFlyioSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Fly.io destination.
func (o SecretSyncFlyioSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncFlyioSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncFlyioSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncFlyioSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncFlyioSyncOptions)(nil)).Elem()
}

func (o SecretSyncFlyioSyncOptionsPtrOutput) ToSecretSyncFlyioSyncOptionsPtrOutput() SecretSyncFlyioSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncFlyioSyncOptionsPtrOutput) ToSecretSyncFlyioSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncFlyioSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncFlyioSyncOptionsPtrOutput) Elem() SecretSyncFlyioSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncFlyioSyncOptions) SecretSyncFlyioSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncFlyioSyncOptions
		return ret
	}).(SecretSyncFlyioSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Fly.io. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncFlyioSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncFlyioSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncFlyioSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncFlyioSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Fly.io destination.
func (o SecretSyncFlyioSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncFlyioSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncGcpSecretManagerDestinationConfig struct {
	// The ID of the GCP project to sync with
	ProjectId string `pulumi:"projectId"`
	// The scope of the sync with GCP Secret Manager. Supported options: global
	Scope *string `pulumi:"scope"`
}

// SecretSyncGcpSecretManagerDestinationConfigInput is an input type that accepts SecretSyncGcpSecretManagerDestinationConfigArgs and SecretSyncGcpSecretManagerDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncGcpSecretManagerDestinationConfigInput` via:
//
//	SecretSyncGcpSecretManagerDestinationConfigArgs{...}
type SecretSyncGcpSecretManagerDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncGcpSecretManagerDestinationConfigOutput() SecretSyncGcpSecretManagerDestinationConfigOutput
	ToSecretSyncGcpSecretManagerDestinationConfigOutputWithContext(context.Context) SecretSyncGcpSecretManagerDestinationConfigOutput
}

type SecretSyncGcpSecretManagerDestinationConfigArgs struct {
	// The ID of the GCP project to sync with
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The scope of the sync with GCP Secret Manager. Supported options: global
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (SecretSyncGcpSecretManagerDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGcpSecretManagerDestinationConfig)(nil)).Elem()
}

func (i SecretSyncGcpSecretManagerDestinationConfigArgs) ToSecretSyncGcpSecretManagerDestinationConfigOutput() SecretSyncGcpSecretManagerDestinationConfigOutput {
	return i.ToSecretSyncGcpSecretManagerDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncGcpSecretManagerDestinationConfigArgs) ToSecretSyncGcpSecretManagerDestinationConfigOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGcpSecretManagerDestinationConfigOutput)
}

func (i SecretSyncGcpSecretManagerDestinationConfigArgs) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutput() SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return i.ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncGcpSecretManagerDestinationConfigArgs) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGcpSecretManagerDestinationConfigOutput).ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncGcpSecretManagerDestinationConfigPtrInput is an input type that accepts SecretSyncGcpSecretManagerDestinationConfigArgs, SecretSyncGcpSecretManagerDestinationConfigPtr and SecretSyncGcpSecretManagerDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncGcpSecretManagerDestinationConfigPtrInput` via:
//
//	        SecretSyncGcpSecretManagerDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncGcpSecretManagerDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncGcpSecretManagerDestinationConfigPtrOutput() SecretSyncGcpSecretManagerDestinationConfigPtrOutput
	ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(context.Context) SecretSyncGcpSecretManagerDestinationConfigPtrOutput
}

type secretSyncGcpSecretManagerDestinationConfigPtrType SecretSyncGcpSecretManagerDestinationConfigArgs

func SecretSyncGcpSecretManagerDestinationConfigPtr(v *SecretSyncGcpSecretManagerDestinationConfigArgs) SecretSyncGcpSecretManagerDestinationConfigPtrInput {
	return (*secretSyncGcpSecretManagerDestinationConfigPtrType)(v)
}

func (*secretSyncGcpSecretManagerDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGcpSecretManagerDestinationConfig)(nil)).Elem()
}

func (i *secretSyncGcpSecretManagerDestinationConfigPtrType) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutput() SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return i.ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncGcpSecretManagerDestinationConfigPtrType) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGcpSecretManagerDestinationConfigPtrOutput)
}

type SecretSyncGcpSecretManagerDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncGcpSecretManagerDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGcpSecretManagerDestinationConfig)(nil)).Elem()
}

func (o SecretSyncGcpSecretManagerDestinationConfigOutput) ToSecretSyncGcpSecretManagerDestinationConfigOutput() SecretSyncGcpSecretManagerDestinationConfigOutput {
	return o
}

func (o SecretSyncGcpSecretManagerDestinationConfigOutput) ToSecretSyncGcpSecretManagerDestinationConfigOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerDestinationConfigOutput {
	return o
}

func (o SecretSyncGcpSecretManagerDestinationConfigOutput) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutput() SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return o.ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncGcpSecretManagerDestinationConfigOutput) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncGcpSecretManagerDestinationConfig) *SecretSyncGcpSecretManagerDestinationConfig {
		return &v
	}).(SecretSyncGcpSecretManagerDestinationConfigPtrOutput)
}

// The ID of the GCP project to sync with
func (o SecretSyncGcpSecretManagerDestinationConfigOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncGcpSecretManagerDestinationConfig) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The scope of the sync with GCP Secret Manager. Supported options: global
func (o SecretSyncGcpSecretManagerDestinationConfigOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncGcpSecretManagerDestinationConfig) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type SecretSyncGcpSecretManagerDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncGcpSecretManagerDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGcpSecretManagerDestinationConfig)(nil)).Elem()
}

func (o SecretSyncGcpSecretManagerDestinationConfigPtrOutput) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutput() SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncGcpSecretManagerDestinationConfigPtrOutput) ToSecretSyncGcpSecretManagerDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncGcpSecretManagerDestinationConfigPtrOutput) Elem() SecretSyncGcpSecretManagerDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncGcpSecretManagerDestinationConfig) SecretSyncGcpSecretManagerDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncGcpSecretManagerDestinationConfig
		return ret
	}).(SecretSyncGcpSecretManagerDestinationConfigOutput)
}

// The ID of the GCP project to sync with
func (o SecretSyncGcpSecretManagerDestinationConfigPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGcpSecretManagerDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The scope of the sync with GCP Secret Manager. Supported options: global
func (o SecretSyncGcpSecretManagerDestinationConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGcpSecretManagerDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

type SecretSyncGcpSecretManagerSyncOptions struct {
	// When set to true, Infisical will not remove secrets from GCP Secret Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the GCP Secret Manager destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncGcpSecretManagerSyncOptionsInput is an input type that accepts SecretSyncGcpSecretManagerSyncOptionsArgs and SecretSyncGcpSecretManagerSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncGcpSecretManagerSyncOptionsInput` via:
//
//	SecretSyncGcpSecretManagerSyncOptionsArgs{...}
type SecretSyncGcpSecretManagerSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncGcpSecretManagerSyncOptionsOutput() SecretSyncGcpSecretManagerSyncOptionsOutput
	ToSecretSyncGcpSecretManagerSyncOptionsOutputWithContext(context.Context) SecretSyncGcpSecretManagerSyncOptionsOutput
}

type SecretSyncGcpSecretManagerSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from GCP Secret Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the GCP Secret Manager destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncGcpSecretManagerSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGcpSecretManagerSyncOptions)(nil)).Elem()
}

func (i SecretSyncGcpSecretManagerSyncOptionsArgs) ToSecretSyncGcpSecretManagerSyncOptionsOutput() SecretSyncGcpSecretManagerSyncOptionsOutput {
	return i.ToSecretSyncGcpSecretManagerSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncGcpSecretManagerSyncOptionsArgs) ToSecretSyncGcpSecretManagerSyncOptionsOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGcpSecretManagerSyncOptionsOutput)
}

func (i SecretSyncGcpSecretManagerSyncOptionsArgs) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutput() SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return i.ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncGcpSecretManagerSyncOptionsArgs) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGcpSecretManagerSyncOptionsOutput).ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncGcpSecretManagerSyncOptionsPtrInput is an input type that accepts SecretSyncGcpSecretManagerSyncOptionsArgs, SecretSyncGcpSecretManagerSyncOptionsPtr and SecretSyncGcpSecretManagerSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncGcpSecretManagerSyncOptionsPtrInput` via:
//
//	        SecretSyncGcpSecretManagerSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncGcpSecretManagerSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncGcpSecretManagerSyncOptionsPtrOutput() SecretSyncGcpSecretManagerSyncOptionsPtrOutput
	ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(context.Context) SecretSyncGcpSecretManagerSyncOptionsPtrOutput
}

type secretSyncGcpSecretManagerSyncOptionsPtrType SecretSyncGcpSecretManagerSyncOptionsArgs

func SecretSyncGcpSecretManagerSyncOptionsPtr(v *SecretSyncGcpSecretManagerSyncOptionsArgs) SecretSyncGcpSecretManagerSyncOptionsPtrInput {
	return (*secretSyncGcpSecretManagerSyncOptionsPtrType)(v)
}

func (*secretSyncGcpSecretManagerSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGcpSecretManagerSyncOptions)(nil)).Elem()
}

func (i *secretSyncGcpSecretManagerSyncOptionsPtrType) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutput() SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return i.ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncGcpSecretManagerSyncOptionsPtrType) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGcpSecretManagerSyncOptionsPtrOutput)
}

type SecretSyncGcpSecretManagerSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncGcpSecretManagerSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGcpSecretManagerSyncOptions)(nil)).Elem()
}

func (o SecretSyncGcpSecretManagerSyncOptionsOutput) ToSecretSyncGcpSecretManagerSyncOptionsOutput() SecretSyncGcpSecretManagerSyncOptionsOutput {
	return o
}

func (o SecretSyncGcpSecretManagerSyncOptionsOutput) ToSecretSyncGcpSecretManagerSyncOptionsOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerSyncOptionsOutput {
	return o
}

func (o SecretSyncGcpSecretManagerSyncOptionsOutput) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutput() SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return o.ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncGcpSecretManagerSyncOptionsOutput) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncGcpSecretManagerSyncOptions) *SecretSyncGcpSecretManagerSyncOptions {
		return &v
	}).(SecretSyncGcpSecretManagerSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from GCP Secret Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncGcpSecretManagerSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncGcpSecretManagerSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncGcpSecretManagerSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncGcpSecretManagerSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the GCP Secret Manager destination.
func (o SecretSyncGcpSecretManagerSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncGcpSecretManagerSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncGcpSecretManagerSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncGcpSecretManagerSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGcpSecretManagerSyncOptions)(nil)).Elem()
}

func (o SecretSyncGcpSecretManagerSyncOptionsPtrOutput) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutput() SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncGcpSecretManagerSyncOptionsPtrOutput) ToSecretSyncGcpSecretManagerSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGcpSecretManagerSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncGcpSecretManagerSyncOptionsPtrOutput) Elem() SecretSyncGcpSecretManagerSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncGcpSecretManagerSyncOptions) SecretSyncGcpSecretManagerSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncGcpSecretManagerSyncOptions
		return ret
	}).(SecretSyncGcpSecretManagerSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from GCP Secret Manager. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncGcpSecretManagerSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncGcpSecretManagerSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination, import-prioritize-source, import-prioritize-destination
func (o SecretSyncGcpSecretManagerSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGcpSecretManagerSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the GCP Secret Manager destination.
func (o SecretSyncGcpSecretManagerSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGcpSecretManagerSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncGithubDestinationConfig struct {
	// The environment to sync the secrets to, required if scope is `repository-environment`
	RepositoryEnvironment *string `pulumi:"repositoryEnvironment"`
	// The repository to sync the secrets to, required if scope is `repository` or `repository-environment`. This is only the name of the repository, without the repository owner included. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `go-sdk` here.
	RepositoryName *string `pulumi:"repositoryName"`
	// The owner of the Github repository, required if scope is `repository`, `repository-environment`, or `organization`. This is the organization name, or the username for personal repositories. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `Infisical` here.
	RepositoryOwner *string `pulumi:"repositoryOwner"`
	// The scope to sync the secrets to, repository|organization
	Scope string `pulumi:"scope"`
	// The repository ids to sync the secrets to, required if scope is `organization` and the visibility field is set to `selected`
	SelectedRepositoryIds []int `pulumi:"selectedRepositoryIds"`
	// The visibility of the Github repository, required if scope is `organization`. Accepted values are: `all`|`private`|`selected`
	Visibility *string `pulumi:"visibility"`
}

// SecretSyncGithubDestinationConfigInput is an input type that accepts SecretSyncGithubDestinationConfigArgs and SecretSyncGithubDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncGithubDestinationConfigInput` via:
//
//	SecretSyncGithubDestinationConfigArgs{...}
type SecretSyncGithubDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncGithubDestinationConfigOutput() SecretSyncGithubDestinationConfigOutput
	ToSecretSyncGithubDestinationConfigOutputWithContext(context.Context) SecretSyncGithubDestinationConfigOutput
}

type SecretSyncGithubDestinationConfigArgs struct {
	// The environment to sync the secrets to, required if scope is `repository-environment`
	RepositoryEnvironment pulumi.StringPtrInput `pulumi:"repositoryEnvironment"`
	// The repository to sync the secrets to, required if scope is `repository` or `repository-environment`. This is only the name of the repository, without the repository owner included. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `go-sdk` here.
	RepositoryName pulumi.StringPtrInput `pulumi:"repositoryName"`
	// The owner of the Github repository, required if scope is `repository`, `repository-environment`, or `organization`. This is the organization name, or the username for personal repositories. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `Infisical` here.
	RepositoryOwner pulumi.StringPtrInput `pulumi:"repositoryOwner"`
	// The scope to sync the secrets to, repository|organization
	Scope pulumi.StringInput `pulumi:"scope"`
	// The repository ids to sync the secrets to, required if scope is `organization` and the visibility field is set to `selected`
	SelectedRepositoryIds pulumi.IntArrayInput `pulumi:"selectedRepositoryIds"`
	// The visibility of the Github repository, required if scope is `organization`. Accepted values are: `all`|`private`|`selected`
	Visibility pulumi.StringPtrInput `pulumi:"visibility"`
}

func (SecretSyncGithubDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGithubDestinationConfig)(nil)).Elem()
}

func (i SecretSyncGithubDestinationConfigArgs) ToSecretSyncGithubDestinationConfigOutput() SecretSyncGithubDestinationConfigOutput {
	return i.ToSecretSyncGithubDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncGithubDestinationConfigArgs) ToSecretSyncGithubDestinationConfigOutputWithContext(ctx context.Context) SecretSyncGithubDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGithubDestinationConfigOutput)
}

func (i SecretSyncGithubDestinationConfigArgs) ToSecretSyncGithubDestinationConfigPtrOutput() SecretSyncGithubDestinationConfigPtrOutput {
	return i.ToSecretSyncGithubDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncGithubDestinationConfigArgs) ToSecretSyncGithubDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGithubDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGithubDestinationConfigOutput).ToSecretSyncGithubDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncGithubDestinationConfigPtrInput is an input type that accepts SecretSyncGithubDestinationConfigArgs, SecretSyncGithubDestinationConfigPtr and SecretSyncGithubDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncGithubDestinationConfigPtrInput` via:
//
//	        SecretSyncGithubDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncGithubDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncGithubDestinationConfigPtrOutput() SecretSyncGithubDestinationConfigPtrOutput
	ToSecretSyncGithubDestinationConfigPtrOutputWithContext(context.Context) SecretSyncGithubDestinationConfigPtrOutput
}

type secretSyncGithubDestinationConfigPtrType SecretSyncGithubDestinationConfigArgs

func SecretSyncGithubDestinationConfigPtr(v *SecretSyncGithubDestinationConfigArgs) SecretSyncGithubDestinationConfigPtrInput {
	return (*secretSyncGithubDestinationConfigPtrType)(v)
}

func (*secretSyncGithubDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGithubDestinationConfig)(nil)).Elem()
}

func (i *secretSyncGithubDestinationConfigPtrType) ToSecretSyncGithubDestinationConfigPtrOutput() SecretSyncGithubDestinationConfigPtrOutput {
	return i.ToSecretSyncGithubDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncGithubDestinationConfigPtrType) ToSecretSyncGithubDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGithubDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGithubDestinationConfigPtrOutput)
}

type SecretSyncGithubDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncGithubDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGithubDestinationConfig)(nil)).Elem()
}

func (o SecretSyncGithubDestinationConfigOutput) ToSecretSyncGithubDestinationConfigOutput() SecretSyncGithubDestinationConfigOutput {
	return o
}

func (o SecretSyncGithubDestinationConfigOutput) ToSecretSyncGithubDestinationConfigOutputWithContext(ctx context.Context) SecretSyncGithubDestinationConfigOutput {
	return o
}

func (o SecretSyncGithubDestinationConfigOutput) ToSecretSyncGithubDestinationConfigPtrOutput() SecretSyncGithubDestinationConfigPtrOutput {
	return o.ToSecretSyncGithubDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncGithubDestinationConfigOutput) ToSecretSyncGithubDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGithubDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncGithubDestinationConfig) *SecretSyncGithubDestinationConfig {
		return &v
	}).(SecretSyncGithubDestinationConfigPtrOutput)
}

// The environment to sync the secrets to, required if scope is `repository-environment`
func (o SecretSyncGithubDestinationConfigOutput) RepositoryEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncGithubDestinationConfig) *string { return v.RepositoryEnvironment }).(pulumi.StringPtrOutput)
}

// The repository to sync the secrets to, required if scope is `repository` or `repository-environment`. This is only the name of the repository, without the repository owner included. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `go-sdk` here.
func (o SecretSyncGithubDestinationConfigOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncGithubDestinationConfig) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// The owner of the Github repository, required if scope is `repository`, `repository-environment`, or `organization`. This is the organization name, or the username for personal repositories. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `Infisical` here.
func (o SecretSyncGithubDestinationConfigOutput) RepositoryOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncGithubDestinationConfig) *string { return v.RepositoryOwner }).(pulumi.StringPtrOutput)
}

// The scope to sync the secrets to, repository|organization
func (o SecretSyncGithubDestinationConfigOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncGithubDestinationConfig) string { return v.Scope }).(pulumi.StringOutput)
}

// The repository ids to sync the secrets to, required if scope is `organization` and the visibility field is set to `selected`
func (o SecretSyncGithubDestinationConfigOutput) SelectedRepositoryIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SecretSyncGithubDestinationConfig) []int { return v.SelectedRepositoryIds }).(pulumi.IntArrayOutput)
}

// The visibility of the Github repository, required if scope is `organization`. Accepted values are: `all`|`private`|`selected`
func (o SecretSyncGithubDestinationConfigOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncGithubDestinationConfig) *string { return v.Visibility }).(pulumi.StringPtrOutput)
}

type SecretSyncGithubDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncGithubDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGithubDestinationConfig)(nil)).Elem()
}

func (o SecretSyncGithubDestinationConfigPtrOutput) ToSecretSyncGithubDestinationConfigPtrOutput() SecretSyncGithubDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncGithubDestinationConfigPtrOutput) ToSecretSyncGithubDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncGithubDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncGithubDestinationConfigPtrOutput) Elem() SecretSyncGithubDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncGithubDestinationConfig) SecretSyncGithubDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncGithubDestinationConfig
		return ret
	}).(SecretSyncGithubDestinationConfigOutput)
}

// The environment to sync the secrets to, required if scope is `repository-environment`
func (o SecretSyncGithubDestinationConfigPtrOutput) RepositoryEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryEnvironment
	}).(pulumi.StringPtrOutput)
}

// The repository to sync the secrets to, required if scope is `repository` or `repository-environment`. This is only the name of the repository, without the repository owner included. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `go-sdk` here.
func (o SecretSyncGithubDestinationConfigPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// The owner of the Github repository, required if scope is `repository`, `repository-environment`, or `organization`. This is the organization name, or the username for personal repositories. As an example if you have a repository called Infisical/go-sdk, you would only need to provide `Infisical` here.
func (o SecretSyncGithubDestinationConfigPtrOutput) RepositoryOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryOwner
	}).(pulumi.StringPtrOutput)
}

// The scope to sync the secrets to, repository|organization
func (o SecretSyncGithubDestinationConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

// The repository ids to sync the secrets to, required if scope is `organization` and the visibility field is set to `selected`
func (o SecretSyncGithubDestinationConfigPtrOutput) SelectedRepositoryIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SecretSyncGithubDestinationConfig) []int {
		if v == nil {
			return nil
		}
		return v.SelectedRepositoryIds
	}).(pulumi.IntArrayOutput)
}

// The visibility of the Github repository, required if scope is `organization`. Accepted values are: `all`|`private`|`selected`
func (o SecretSyncGithubDestinationConfigPtrOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.Visibility
	}).(pulumi.StringPtrOutput)
}

type SecretSyncGithubSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Github. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Github destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncGithubSyncOptionsInput is an input type that accepts SecretSyncGithubSyncOptionsArgs and SecretSyncGithubSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncGithubSyncOptionsInput` via:
//
//	SecretSyncGithubSyncOptionsArgs{...}
type SecretSyncGithubSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncGithubSyncOptionsOutput() SecretSyncGithubSyncOptionsOutput
	ToSecretSyncGithubSyncOptionsOutputWithContext(context.Context) SecretSyncGithubSyncOptionsOutput
}

type SecretSyncGithubSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Github. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Github destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncGithubSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGithubSyncOptions)(nil)).Elem()
}

func (i SecretSyncGithubSyncOptionsArgs) ToSecretSyncGithubSyncOptionsOutput() SecretSyncGithubSyncOptionsOutput {
	return i.ToSecretSyncGithubSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncGithubSyncOptionsArgs) ToSecretSyncGithubSyncOptionsOutputWithContext(ctx context.Context) SecretSyncGithubSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGithubSyncOptionsOutput)
}

func (i SecretSyncGithubSyncOptionsArgs) ToSecretSyncGithubSyncOptionsPtrOutput() SecretSyncGithubSyncOptionsPtrOutput {
	return i.ToSecretSyncGithubSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncGithubSyncOptionsArgs) ToSecretSyncGithubSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGithubSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGithubSyncOptionsOutput).ToSecretSyncGithubSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncGithubSyncOptionsPtrInput is an input type that accepts SecretSyncGithubSyncOptionsArgs, SecretSyncGithubSyncOptionsPtr and SecretSyncGithubSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncGithubSyncOptionsPtrInput` via:
//
//	        SecretSyncGithubSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncGithubSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncGithubSyncOptionsPtrOutput() SecretSyncGithubSyncOptionsPtrOutput
	ToSecretSyncGithubSyncOptionsPtrOutputWithContext(context.Context) SecretSyncGithubSyncOptionsPtrOutput
}

type secretSyncGithubSyncOptionsPtrType SecretSyncGithubSyncOptionsArgs

func SecretSyncGithubSyncOptionsPtr(v *SecretSyncGithubSyncOptionsArgs) SecretSyncGithubSyncOptionsPtrInput {
	return (*secretSyncGithubSyncOptionsPtrType)(v)
}

func (*secretSyncGithubSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGithubSyncOptions)(nil)).Elem()
}

func (i *secretSyncGithubSyncOptionsPtrType) ToSecretSyncGithubSyncOptionsPtrOutput() SecretSyncGithubSyncOptionsPtrOutput {
	return i.ToSecretSyncGithubSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncGithubSyncOptionsPtrType) ToSecretSyncGithubSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGithubSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncGithubSyncOptionsPtrOutput)
}

type SecretSyncGithubSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncGithubSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncGithubSyncOptions)(nil)).Elem()
}

func (o SecretSyncGithubSyncOptionsOutput) ToSecretSyncGithubSyncOptionsOutput() SecretSyncGithubSyncOptionsOutput {
	return o
}

func (o SecretSyncGithubSyncOptionsOutput) ToSecretSyncGithubSyncOptionsOutputWithContext(ctx context.Context) SecretSyncGithubSyncOptionsOutput {
	return o
}

func (o SecretSyncGithubSyncOptionsOutput) ToSecretSyncGithubSyncOptionsPtrOutput() SecretSyncGithubSyncOptionsPtrOutput {
	return o.ToSecretSyncGithubSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncGithubSyncOptionsOutput) ToSecretSyncGithubSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGithubSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncGithubSyncOptions) *SecretSyncGithubSyncOptions {
		return &v
	}).(SecretSyncGithubSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Github. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncGithubSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncGithubSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncGithubSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncGithubSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Github destination.
func (o SecretSyncGithubSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncGithubSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncGithubSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncGithubSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncGithubSyncOptions)(nil)).Elem()
}

func (o SecretSyncGithubSyncOptionsPtrOutput) ToSecretSyncGithubSyncOptionsPtrOutput() SecretSyncGithubSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncGithubSyncOptionsPtrOutput) ToSecretSyncGithubSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncGithubSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncGithubSyncOptionsPtrOutput) Elem() SecretSyncGithubSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncGithubSyncOptions) SecretSyncGithubSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncGithubSyncOptions
		return ret
	}).(SecretSyncGithubSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Github. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncGithubSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncGithubSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Github destination.
func (o SecretSyncGithubSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncGithubSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncRenderDestinationConfig struct {
	// The Render scope that secrets should be synced to. Supported options: service
	Scope string `pulumi:"scope"`
	// The ID of the Render service to sync secrets to.
	ServiceId string `pulumi:"serviceId"`
	// The Render resource type to sync secrets to. Supported options: env, file
	Type string `pulumi:"type"`
}

// SecretSyncRenderDestinationConfigInput is an input type that accepts SecretSyncRenderDestinationConfigArgs and SecretSyncRenderDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncRenderDestinationConfigInput` via:
//
//	SecretSyncRenderDestinationConfigArgs{...}
type SecretSyncRenderDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncRenderDestinationConfigOutput() SecretSyncRenderDestinationConfigOutput
	ToSecretSyncRenderDestinationConfigOutputWithContext(context.Context) SecretSyncRenderDestinationConfigOutput
}

type SecretSyncRenderDestinationConfigArgs struct {
	// The Render scope that secrets should be synced to. Supported options: service
	Scope pulumi.StringInput `pulumi:"scope"`
	// The ID of the Render service to sync secrets to.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// The Render resource type to sync secrets to. Supported options: env, file
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecretSyncRenderDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncRenderDestinationConfig)(nil)).Elem()
}

func (i SecretSyncRenderDestinationConfigArgs) ToSecretSyncRenderDestinationConfigOutput() SecretSyncRenderDestinationConfigOutput {
	return i.ToSecretSyncRenderDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncRenderDestinationConfigArgs) ToSecretSyncRenderDestinationConfigOutputWithContext(ctx context.Context) SecretSyncRenderDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncRenderDestinationConfigOutput)
}

func (i SecretSyncRenderDestinationConfigArgs) ToSecretSyncRenderDestinationConfigPtrOutput() SecretSyncRenderDestinationConfigPtrOutput {
	return i.ToSecretSyncRenderDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncRenderDestinationConfigArgs) ToSecretSyncRenderDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncRenderDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncRenderDestinationConfigOutput).ToSecretSyncRenderDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncRenderDestinationConfigPtrInput is an input type that accepts SecretSyncRenderDestinationConfigArgs, SecretSyncRenderDestinationConfigPtr and SecretSyncRenderDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncRenderDestinationConfigPtrInput` via:
//
//	        SecretSyncRenderDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncRenderDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncRenderDestinationConfigPtrOutput() SecretSyncRenderDestinationConfigPtrOutput
	ToSecretSyncRenderDestinationConfigPtrOutputWithContext(context.Context) SecretSyncRenderDestinationConfigPtrOutput
}

type secretSyncRenderDestinationConfigPtrType SecretSyncRenderDestinationConfigArgs

func SecretSyncRenderDestinationConfigPtr(v *SecretSyncRenderDestinationConfigArgs) SecretSyncRenderDestinationConfigPtrInput {
	return (*secretSyncRenderDestinationConfigPtrType)(v)
}

func (*secretSyncRenderDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncRenderDestinationConfig)(nil)).Elem()
}

func (i *secretSyncRenderDestinationConfigPtrType) ToSecretSyncRenderDestinationConfigPtrOutput() SecretSyncRenderDestinationConfigPtrOutput {
	return i.ToSecretSyncRenderDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncRenderDestinationConfigPtrType) ToSecretSyncRenderDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncRenderDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncRenderDestinationConfigPtrOutput)
}

type SecretSyncRenderDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncRenderDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncRenderDestinationConfig)(nil)).Elem()
}

func (o SecretSyncRenderDestinationConfigOutput) ToSecretSyncRenderDestinationConfigOutput() SecretSyncRenderDestinationConfigOutput {
	return o
}

func (o SecretSyncRenderDestinationConfigOutput) ToSecretSyncRenderDestinationConfigOutputWithContext(ctx context.Context) SecretSyncRenderDestinationConfigOutput {
	return o
}

func (o SecretSyncRenderDestinationConfigOutput) ToSecretSyncRenderDestinationConfigPtrOutput() SecretSyncRenderDestinationConfigPtrOutput {
	return o.ToSecretSyncRenderDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncRenderDestinationConfigOutput) ToSecretSyncRenderDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncRenderDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncRenderDestinationConfig) *SecretSyncRenderDestinationConfig {
		return &v
	}).(SecretSyncRenderDestinationConfigPtrOutput)
}

// The Render scope that secrets should be synced to. Supported options: service
func (o SecretSyncRenderDestinationConfigOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncRenderDestinationConfig) string { return v.Scope }).(pulumi.StringOutput)
}

// The ID of the Render service to sync secrets to.
func (o SecretSyncRenderDestinationConfigOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncRenderDestinationConfig) string { return v.ServiceId }).(pulumi.StringOutput)
}

// The Render resource type to sync secrets to. Supported options: env, file
func (o SecretSyncRenderDestinationConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncRenderDestinationConfig) string { return v.Type }).(pulumi.StringOutput)
}

type SecretSyncRenderDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncRenderDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncRenderDestinationConfig)(nil)).Elem()
}

func (o SecretSyncRenderDestinationConfigPtrOutput) ToSecretSyncRenderDestinationConfigPtrOutput() SecretSyncRenderDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncRenderDestinationConfigPtrOutput) ToSecretSyncRenderDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncRenderDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncRenderDestinationConfigPtrOutput) Elem() SecretSyncRenderDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncRenderDestinationConfig) SecretSyncRenderDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncRenderDestinationConfig
		return ret
	}).(SecretSyncRenderDestinationConfigOutput)
}

// The Render scope that secrets should be synced to. Supported options: service
func (o SecretSyncRenderDestinationConfigPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncRenderDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

// The ID of the Render service to sync secrets to.
func (o SecretSyncRenderDestinationConfigPtrOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncRenderDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceId
	}).(pulumi.StringPtrOutput)
}

// The Render resource type to sync secrets to. Supported options: env, file
func (o SecretSyncRenderDestinationConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncRenderDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SecretSyncRenderSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Render. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Render destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncRenderSyncOptionsInput is an input type that accepts SecretSyncRenderSyncOptionsArgs and SecretSyncRenderSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncRenderSyncOptionsInput` via:
//
//	SecretSyncRenderSyncOptionsArgs{...}
type SecretSyncRenderSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncRenderSyncOptionsOutput() SecretSyncRenderSyncOptionsOutput
	ToSecretSyncRenderSyncOptionsOutputWithContext(context.Context) SecretSyncRenderSyncOptionsOutput
}

type SecretSyncRenderSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Render. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Render destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncRenderSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncRenderSyncOptions)(nil)).Elem()
}

func (i SecretSyncRenderSyncOptionsArgs) ToSecretSyncRenderSyncOptionsOutput() SecretSyncRenderSyncOptionsOutput {
	return i.ToSecretSyncRenderSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncRenderSyncOptionsArgs) ToSecretSyncRenderSyncOptionsOutputWithContext(ctx context.Context) SecretSyncRenderSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncRenderSyncOptionsOutput)
}

func (i SecretSyncRenderSyncOptionsArgs) ToSecretSyncRenderSyncOptionsPtrOutput() SecretSyncRenderSyncOptionsPtrOutput {
	return i.ToSecretSyncRenderSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncRenderSyncOptionsArgs) ToSecretSyncRenderSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncRenderSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncRenderSyncOptionsOutput).ToSecretSyncRenderSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncRenderSyncOptionsPtrInput is an input type that accepts SecretSyncRenderSyncOptionsArgs, SecretSyncRenderSyncOptionsPtr and SecretSyncRenderSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncRenderSyncOptionsPtrInput` via:
//
//	        SecretSyncRenderSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncRenderSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncRenderSyncOptionsPtrOutput() SecretSyncRenderSyncOptionsPtrOutput
	ToSecretSyncRenderSyncOptionsPtrOutputWithContext(context.Context) SecretSyncRenderSyncOptionsPtrOutput
}

type secretSyncRenderSyncOptionsPtrType SecretSyncRenderSyncOptionsArgs

func SecretSyncRenderSyncOptionsPtr(v *SecretSyncRenderSyncOptionsArgs) SecretSyncRenderSyncOptionsPtrInput {
	return (*secretSyncRenderSyncOptionsPtrType)(v)
}

func (*secretSyncRenderSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncRenderSyncOptions)(nil)).Elem()
}

func (i *secretSyncRenderSyncOptionsPtrType) ToSecretSyncRenderSyncOptionsPtrOutput() SecretSyncRenderSyncOptionsPtrOutput {
	return i.ToSecretSyncRenderSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncRenderSyncOptionsPtrType) ToSecretSyncRenderSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncRenderSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncRenderSyncOptionsPtrOutput)
}

type SecretSyncRenderSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncRenderSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncRenderSyncOptions)(nil)).Elem()
}

func (o SecretSyncRenderSyncOptionsOutput) ToSecretSyncRenderSyncOptionsOutput() SecretSyncRenderSyncOptionsOutput {
	return o
}

func (o SecretSyncRenderSyncOptionsOutput) ToSecretSyncRenderSyncOptionsOutputWithContext(ctx context.Context) SecretSyncRenderSyncOptionsOutput {
	return o
}

func (o SecretSyncRenderSyncOptionsOutput) ToSecretSyncRenderSyncOptionsPtrOutput() SecretSyncRenderSyncOptionsPtrOutput {
	return o.ToSecretSyncRenderSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncRenderSyncOptionsOutput) ToSecretSyncRenderSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncRenderSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncRenderSyncOptions) *SecretSyncRenderSyncOptions {
		return &v
	}).(SecretSyncRenderSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Render. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncRenderSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncRenderSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncRenderSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncRenderSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Render destination.
func (o SecretSyncRenderSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncRenderSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncRenderSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncRenderSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncRenderSyncOptions)(nil)).Elem()
}

func (o SecretSyncRenderSyncOptionsPtrOutput) ToSecretSyncRenderSyncOptionsPtrOutput() SecretSyncRenderSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncRenderSyncOptionsPtrOutput) ToSecretSyncRenderSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncRenderSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncRenderSyncOptionsPtrOutput) Elem() SecretSyncRenderSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncRenderSyncOptions) SecretSyncRenderSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncRenderSyncOptions
		return ret
	}).(SecretSyncRenderSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Render. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncRenderSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncRenderSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncRenderSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncRenderSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Render destination.
func (o SecretSyncRenderSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncRenderSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type SecretSyncSupabaseDestinationConfig struct {
	// The Supabase project ID to sync secrets to.
	ProjectId string `pulumi:"projectId"`
	// The Supabase project name (optional).
	ProjectName *string `pulumi:"projectName"`
}

// SecretSyncSupabaseDestinationConfigInput is an input type that accepts SecretSyncSupabaseDestinationConfigArgs and SecretSyncSupabaseDestinationConfigOutput values.
// You can construct a concrete instance of `SecretSyncSupabaseDestinationConfigInput` via:
//
//	SecretSyncSupabaseDestinationConfigArgs{...}
type SecretSyncSupabaseDestinationConfigInput interface {
	pulumi.Input

	ToSecretSyncSupabaseDestinationConfigOutput() SecretSyncSupabaseDestinationConfigOutput
	ToSecretSyncSupabaseDestinationConfigOutputWithContext(context.Context) SecretSyncSupabaseDestinationConfigOutput
}

type SecretSyncSupabaseDestinationConfigArgs struct {
	// The Supabase project ID to sync secrets to.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The Supabase project name (optional).
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
}

func (SecretSyncSupabaseDestinationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncSupabaseDestinationConfig)(nil)).Elem()
}

func (i SecretSyncSupabaseDestinationConfigArgs) ToSecretSyncSupabaseDestinationConfigOutput() SecretSyncSupabaseDestinationConfigOutput {
	return i.ToSecretSyncSupabaseDestinationConfigOutputWithContext(context.Background())
}

func (i SecretSyncSupabaseDestinationConfigArgs) ToSecretSyncSupabaseDestinationConfigOutputWithContext(ctx context.Context) SecretSyncSupabaseDestinationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncSupabaseDestinationConfigOutput)
}

func (i SecretSyncSupabaseDestinationConfigArgs) ToSecretSyncSupabaseDestinationConfigPtrOutput() SecretSyncSupabaseDestinationConfigPtrOutput {
	return i.ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(context.Background())
}

func (i SecretSyncSupabaseDestinationConfigArgs) ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncSupabaseDestinationConfigOutput).ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(ctx)
}

// SecretSyncSupabaseDestinationConfigPtrInput is an input type that accepts SecretSyncSupabaseDestinationConfigArgs, SecretSyncSupabaseDestinationConfigPtr and SecretSyncSupabaseDestinationConfigPtrOutput values.
// You can construct a concrete instance of `SecretSyncSupabaseDestinationConfigPtrInput` via:
//
//	        SecretSyncSupabaseDestinationConfigArgs{...}
//
//	or:
//
//	        nil
type SecretSyncSupabaseDestinationConfigPtrInput interface {
	pulumi.Input

	ToSecretSyncSupabaseDestinationConfigPtrOutput() SecretSyncSupabaseDestinationConfigPtrOutput
	ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(context.Context) SecretSyncSupabaseDestinationConfigPtrOutput
}

type secretSyncSupabaseDestinationConfigPtrType SecretSyncSupabaseDestinationConfigArgs

func SecretSyncSupabaseDestinationConfigPtr(v *SecretSyncSupabaseDestinationConfigArgs) SecretSyncSupabaseDestinationConfigPtrInput {
	return (*secretSyncSupabaseDestinationConfigPtrType)(v)
}

func (*secretSyncSupabaseDestinationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncSupabaseDestinationConfig)(nil)).Elem()
}

func (i *secretSyncSupabaseDestinationConfigPtrType) ToSecretSyncSupabaseDestinationConfigPtrOutput() SecretSyncSupabaseDestinationConfigPtrOutput {
	return i.ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(context.Background())
}

func (i *secretSyncSupabaseDestinationConfigPtrType) ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseDestinationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncSupabaseDestinationConfigPtrOutput)
}

type SecretSyncSupabaseDestinationConfigOutput struct{ *pulumi.OutputState }

func (SecretSyncSupabaseDestinationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncSupabaseDestinationConfig)(nil)).Elem()
}

func (o SecretSyncSupabaseDestinationConfigOutput) ToSecretSyncSupabaseDestinationConfigOutput() SecretSyncSupabaseDestinationConfigOutput {
	return o
}

func (o SecretSyncSupabaseDestinationConfigOutput) ToSecretSyncSupabaseDestinationConfigOutputWithContext(ctx context.Context) SecretSyncSupabaseDestinationConfigOutput {
	return o
}

func (o SecretSyncSupabaseDestinationConfigOutput) ToSecretSyncSupabaseDestinationConfigPtrOutput() SecretSyncSupabaseDestinationConfigPtrOutput {
	return o.ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(context.Background())
}

func (o SecretSyncSupabaseDestinationConfigOutput) ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseDestinationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncSupabaseDestinationConfig) *SecretSyncSupabaseDestinationConfig {
		return &v
	}).(SecretSyncSupabaseDestinationConfigPtrOutput)
}

// The Supabase project ID to sync secrets to.
func (o SecretSyncSupabaseDestinationConfigOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncSupabaseDestinationConfig) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The Supabase project name (optional).
func (o SecretSyncSupabaseDestinationConfigOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncSupabaseDestinationConfig) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

type SecretSyncSupabaseDestinationConfigPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncSupabaseDestinationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncSupabaseDestinationConfig)(nil)).Elem()
}

func (o SecretSyncSupabaseDestinationConfigPtrOutput) ToSecretSyncSupabaseDestinationConfigPtrOutput() SecretSyncSupabaseDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncSupabaseDestinationConfigPtrOutput) ToSecretSyncSupabaseDestinationConfigPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseDestinationConfigPtrOutput {
	return o
}

func (o SecretSyncSupabaseDestinationConfigPtrOutput) Elem() SecretSyncSupabaseDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncSupabaseDestinationConfig) SecretSyncSupabaseDestinationConfig {
		if v != nil {
			return *v
		}
		var ret SecretSyncSupabaseDestinationConfig
		return ret
	}).(SecretSyncSupabaseDestinationConfigOutput)
}

// The Supabase project ID to sync secrets to.
func (o SecretSyncSupabaseDestinationConfigPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncSupabaseDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// The Supabase project name (optional).
func (o SecretSyncSupabaseDestinationConfigPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncSupabaseDestinationConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProjectName
	}).(pulumi.StringPtrOutput)
}

type SecretSyncSupabaseSyncOptions struct {
	// When set to true, Infisical will not remove secrets from Supabase. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion *bool `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior string `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Supabase destination.
	KeySchema *string `pulumi:"keySchema"`
}

// SecretSyncSupabaseSyncOptionsInput is an input type that accepts SecretSyncSupabaseSyncOptionsArgs and SecretSyncSupabaseSyncOptionsOutput values.
// You can construct a concrete instance of `SecretSyncSupabaseSyncOptionsInput` via:
//
//	SecretSyncSupabaseSyncOptionsArgs{...}
type SecretSyncSupabaseSyncOptionsInput interface {
	pulumi.Input

	ToSecretSyncSupabaseSyncOptionsOutput() SecretSyncSupabaseSyncOptionsOutput
	ToSecretSyncSupabaseSyncOptionsOutputWithContext(context.Context) SecretSyncSupabaseSyncOptionsOutput
}

type SecretSyncSupabaseSyncOptionsArgs struct {
	// When set to true, Infisical will not remove secrets from Supabase. Enable this option if you intend to manage some secrets manually outside of Infisical.
	DisableSecretDeletion pulumi.BoolPtrInput `pulumi:"disableSecretDeletion"`
	// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
	InitialSyncBehavior pulumi.StringInput `pulumi:"initialSyncBehavior"`
	// The format to use for structuring secret keys in the Supabase destination.
	KeySchema pulumi.StringPtrInput `pulumi:"keySchema"`
}

func (SecretSyncSupabaseSyncOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncSupabaseSyncOptions)(nil)).Elem()
}

func (i SecretSyncSupabaseSyncOptionsArgs) ToSecretSyncSupabaseSyncOptionsOutput() SecretSyncSupabaseSyncOptionsOutput {
	return i.ToSecretSyncSupabaseSyncOptionsOutputWithContext(context.Background())
}

func (i SecretSyncSupabaseSyncOptionsArgs) ToSecretSyncSupabaseSyncOptionsOutputWithContext(ctx context.Context) SecretSyncSupabaseSyncOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncSupabaseSyncOptionsOutput)
}

func (i SecretSyncSupabaseSyncOptionsArgs) ToSecretSyncSupabaseSyncOptionsPtrOutput() SecretSyncSupabaseSyncOptionsPtrOutput {
	return i.ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(context.Background())
}

func (i SecretSyncSupabaseSyncOptionsArgs) ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncSupabaseSyncOptionsOutput).ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(ctx)
}

// SecretSyncSupabaseSyncOptionsPtrInput is an input type that accepts SecretSyncSupabaseSyncOptionsArgs, SecretSyncSupabaseSyncOptionsPtr and SecretSyncSupabaseSyncOptionsPtrOutput values.
// You can construct a concrete instance of `SecretSyncSupabaseSyncOptionsPtrInput` via:
//
//	        SecretSyncSupabaseSyncOptionsArgs{...}
//
//	or:
//
//	        nil
type SecretSyncSupabaseSyncOptionsPtrInput interface {
	pulumi.Input

	ToSecretSyncSupabaseSyncOptionsPtrOutput() SecretSyncSupabaseSyncOptionsPtrOutput
	ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(context.Context) SecretSyncSupabaseSyncOptionsPtrOutput
}

type secretSyncSupabaseSyncOptionsPtrType SecretSyncSupabaseSyncOptionsArgs

func SecretSyncSupabaseSyncOptionsPtr(v *SecretSyncSupabaseSyncOptionsArgs) SecretSyncSupabaseSyncOptionsPtrInput {
	return (*secretSyncSupabaseSyncOptionsPtrType)(v)
}

func (*secretSyncSupabaseSyncOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncSupabaseSyncOptions)(nil)).Elem()
}

func (i *secretSyncSupabaseSyncOptionsPtrType) ToSecretSyncSupabaseSyncOptionsPtrOutput() SecretSyncSupabaseSyncOptionsPtrOutput {
	return i.ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(context.Background())
}

func (i *secretSyncSupabaseSyncOptionsPtrType) ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseSyncOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncSupabaseSyncOptionsPtrOutput)
}

type SecretSyncSupabaseSyncOptionsOutput struct{ *pulumi.OutputState }

func (SecretSyncSupabaseSyncOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSyncSupabaseSyncOptions)(nil)).Elem()
}

func (o SecretSyncSupabaseSyncOptionsOutput) ToSecretSyncSupabaseSyncOptionsOutput() SecretSyncSupabaseSyncOptionsOutput {
	return o
}

func (o SecretSyncSupabaseSyncOptionsOutput) ToSecretSyncSupabaseSyncOptionsOutputWithContext(ctx context.Context) SecretSyncSupabaseSyncOptionsOutput {
	return o
}

func (o SecretSyncSupabaseSyncOptionsOutput) ToSecretSyncSupabaseSyncOptionsPtrOutput() SecretSyncSupabaseSyncOptionsPtrOutput {
	return o.ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(context.Background())
}

func (o SecretSyncSupabaseSyncOptionsOutput) ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseSyncOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSyncSupabaseSyncOptions) *SecretSyncSupabaseSyncOptions {
		return &v
	}).(SecretSyncSupabaseSyncOptionsPtrOutput)
}

// When set to true, Infisical will not remove secrets from Supabase. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncSupabaseSyncOptionsOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretSyncSupabaseSyncOptions) *bool { return v.DisableSecretDeletion }).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncSupabaseSyncOptionsOutput) InitialSyncBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSyncSupabaseSyncOptions) string { return v.InitialSyncBehavior }).(pulumi.StringOutput)
}

// The format to use for structuring secret keys in the Supabase destination.
func (o SecretSyncSupabaseSyncOptionsOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSyncSupabaseSyncOptions) *string { return v.KeySchema }).(pulumi.StringPtrOutput)
}

type SecretSyncSupabaseSyncOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecretSyncSupabaseSyncOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncSupabaseSyncOptions)(nil)).Elem()
}

func (o SecretSyncSupabaseSyncOptionsPtrOutput) ToSecretSyncSupabaseSyncOptionsPtrOutput() SecretSyncSupabaseSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncSupabaseSyncOptionsPtrOutput) ToSecretSyncSupabaseSyncOptionsPtrOutputWithContext(ctx context.Context) SecretSyncSupabaseSyncOptionsPtrOutput {
	return o
}

func (o SecretSyncSupabaseSyncOptionsPtrOutput) Elem() SecretSyncSupabaseSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncSupabaseSyncOptions) SecretSyncSupabaseSyncOptions {
		if v != nil {
			return *v
		}
		var ret SecretSyncSupabaseSyncOptions
		return ret
	}).(SecretSyncSupabaseSyncOptionsOutput)
}

// When set to true, Infisical will not remove secrets from Supabase. Enable this option if you intend to manage some secrets manually outside of Infisical.
func (o SecretSyncSupabaseSyncOptionsPtrOutput) DisableSecretDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretSyncSupabaseSyncOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecretDeletion
	}).(pulumi.BoolPtrOutput)
}

// Specify how Infisical should resolve the initial sync to the destination. Supported options: overwrite-destination
func (o SecretSyncSupabaseSyncOptionsPtrOutput) InitialSyncBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncSupabaseSyncOptions) *string {
		if v == nil {
			return nil
		}
		return &v.InitialSyncBehavior
	}).(pulumi.StringPtrOutput)
}

// The format to use for structuring secret keys in the Supabase destination.
func (o SecretSyncSupabaseSyncOptionsPtrOutput) KeySchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncSupabaseSyncOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeySchema
	}).(pulumi.StringPtrOutput)
}

type GetGroupsGroup struct {
	// The ID of the group
	Id string `pulumi:"id"`
	// The name of the group
	Name string `pulumi:"name"`
	// The organization ID of the group
	OrgId string `pulumi:"orgId"`
	// The role of the group in the organization
	Role string `pulumi:"role"`
	// The role ID of the group in the organization
	RoleId string `pulumi:"roleId"`
}

// GetGroupsGroupInput is an input type that accepts GetGroupsGroupArgs and GetGroupsGroupOutput values.
// You can construct a concrete instance of `GetGroupsGroupInput` via:
//
//	GetGroupsGroupArgs{...}
type GetGroupsGroupInput interface {
	pulumi.Input

	ToGetGroupsGroupOutput() GetGroupsGroupOutput
	ToGetGroupsGroupOutputWithContext(context.Context) GetGroupsGroupOutput
}

type GetGroupsGroupArgs struct {
	// The ID of the group
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the group
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID of the group
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The role of the group in the organization
	Role pulumi.StringInput `pulumi:"role"`
	// The role ID of the group in the organization
	RoleId pulumi.StringInput `pulumi:"roleId"`
}

func (GetGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return i.ToGetGroupsGroupOutputWithContext(context.Background())
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupOutput)
}

// GetGroupsGroupArrayInput is an input type that accepts GetGroupsGroupArray and GetGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupArrayInput` via:
//
//	GetGroupsGroupArray{ GetGroupsGroupArgs{...} }
type GetGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput
	ToGetGroupsGroupArrayOutputWithContext(context.Context) GetGroupsGroupArrayOutput
}

type GetGroupsGroupArray []GetGroupsGroupInput

func (GetGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return i.ToGetGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupArrayOutput)
}

type GetGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return o
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return o
}

// The ID of the group
func (o GetGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the group
func (o GetGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID of the group
func (o GetGroupsGroupOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.OrgId }).(pulumi.StringOutput)
}

// The role of the group in the organization
func (o GetGroupsGroupOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.Role }).(pulumi.StringOutput)
}

// The role ID of the group in the organization
func (o GetGroupsGroupOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.RoleId }).(pulumi.StringOutput)
}

type GetGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroup {
		return vs[0].([]GetGroupsGroup)[vs[1].(int)]
	}).(GetGroupsGroupOutput)
}

type GetIdentityDetailsOrganization struct {
	// The ID of the organization
	Id string `pulumi:"id"`
	// The name of the organization
	Name string `pulumi:"name"`
	// The slug of the organization
	Slug string `pulumi:"slug"`
}

// GetIdentityDetailsOrganizationInput is an input type that accepts GetIdentityDetailsOrganizationArgs and GetIdentityDetailsOrganizationOutput values.
// You can construct a concrete instance of `GetIdentityDetailsOrganizationInput` via:
//
//	GetIdentityDetailsOrganizationArgs{...}
type GetIdentityDetailsOrganizationInput interface {
	pulumi.Input

	ToGetIdentityDetailsOrganizationOutput() GetIdentityDetailsOrganizationOutput
	ToGetIdentityDetailsOrganizationOutputWithContext(context.Context) GetIdentityDetailsOrganizationOutput
}

type GetIdentityDetailsOrganizationArgs struct {
	// The ID of the organization
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the organization
	Name pulumi.StringInput `pulumi:"name"`
	// The slug of the organization
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetIdentityDetailsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityDetailsOrganization)(nil)).Elem()
}

func (i GetIdentityDetailsOrganizationArgs) ToGetIdentityDetailsOrganizationOutput() GetIdentityDetailsOrganizationOutput {
	return i.ToGetIdentityDetailsOrganizationOutputWithContext(context.Background())
}

func (i GetIdentityDetailsOrganizationArgs) ToGetIdentityDetailsOrganizationOutputWithContext(ctx context.Context) GetIdentityDetailsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityDetailsOrganizationOutput)
}

type GetIdentityDetailsOrganizationOutput struct{ *pulumi.OutputState }

func (GetIdentityDetailsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityDetailsOrganization)(nil)).Elem()
}

func (o GetIdentityDetailsOrganizationOutput) ToGetIdentityDetailsOrganizationOutput() GetIdentityDetailsOrganizationOutput {
	return o
}

func (o GetIdentityDetailsOrganizationOutput) ToGetIdentityDetailsOrganizationOutputWithContext(ctx context.Context) GetIdentityDetailsOrganizationOutput {
	return o
}

// The ID of the organization
func (o GetIdentityDetailsOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityDetailsOrganization) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the organization
func (o GetIdentityDetailsOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityDetailsOrganization) string { return v.Name }).(pulumi.StringOutput)
}

// The slug of the organization
func (o GetIdentityDetailsOrganizationOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityDetailsOrganization) string { return v.Slug }).(pulumi.StringOutput)
}

type GetProjectsEnvironments struct {
	// The ID of the environment
	Id string `pulumi:"id"`
	// The name of the environment
	Name string `pulumi:"name"`
	// The slug of the environment
	Slug string `pulumi:"slug"`
}

// GetProjectsEnvironmentsInput is an input type that accepts GetProjectsEnvironmentsArgs and GetProjectsEnvironmentsOutput values.
// You can construct a concrete instance of `GetProjectsEnvironmentsInput` via:
//
//	GetProjectsEnvironmentsArgs{...}
type GetProjectsEnvironmentsInput interface {
	pulumi.Input

	ToGetProjectsEnvironmentsOutput() GetProjectsEnvironmentsOutput
	ToGetProjectsEnvironmentsOutputWithContext(context.Context) GetProjectsEnvironmentsOutput
}

type GetProjectsEnvironmentsArgs struct {
	// The ID of the environment
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the environment
	Name pulumi.StringInput `pulumi:"name"`
	// The slug of the environment
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetProjectsEnvironmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsEnvironments)(nil)).Elem()
}

func (i GetProjectsEnvironmentsArgs) ToGetProjectsEnvironmentsOutput() GetProjectsEnvironmentsOutput {
	return i.ToGetProjectsEnvironmentsOutputWithContext(context.Background())
}

func (i GetProjectsEnvironmentsArgs) ToGetProjectsEnvironmentsOutputWithContext(ctx context.Context) GetProjectsEnvironmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsEnvironmentsOutput)
}

// GetProjectsEnvironmentsMapInput is an input type that accepts GetProjectsEnvironmentsMap and GetProjectsEnvironmentsMapOutput values.
// You can construct a concrete instance of `GetProjectsEnvironmentsMapInput` via:
//
//	GetProjectsEnvironmentsMap{ "key": GetProjectsEnvironmentsArgs{...} }
type GetProjectsEnvironmentsMapInput interface {
	pulumi.Input

	ToGetProjectsEnvironmentsMapOutput() GetProjectsEnvironmentsMapOutput
	ToGetProjectsEnvironmentsMapOutputWithContext(context.Context) GetProjectsEnvironmentsMapOutput
}

type GetProjectsEnvironmentsMap map[string]GetProjectsEnvironmentsInput

func (GetProjectsEnvironmentsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetProjectsEnvironments)(nil)).Elem()
}

func (i GetProjectsEnvironmentsMap) ToGetProjectsEnvironmentsMapOutput() GetProjectsEnvironmentsMapOutput {
	return i.ToGetProjectsEnvironmentsMapOutputWithContext(context.Background())
}

func (i GetProjectsEnvironmentsMap) ToGetProjectsEnvironmentsMapOutputWithContext(ctx context.Context) GetProjectsEnvironmentsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsEnvironmentsMapOutput)
}

type GetProjectsEnvironmentsOutput struct{ *pulumi.OutputState }

func (GetProjectsEnvironmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsEnvironments)(nil)).Elem()
}

func (o GetProjectsEnvironmentsOutput) ToGetProjectsEnvironmentsOutput() GetProjectsEnvironmentsOutput {
	return o
}

func (o GetProjectsEnvironmentsOutput) ToGetProjectsEnvironmentsOutputWithContext(ctx context.Context) GetProjectsEnvironmentsOutput {
	return o
}

// The ID of the environment
func (o GetProjectsEnvironmentsOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsEnvironments) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the environment
func (o GetProjectsEnvironmentsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsEnvironments) string { return v.Name }).(pulumi.StringOutput)
}

// The slug of the environment
func (o GetProjectsEnvironmentsOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsEnvironments) string { return v.Slug }).(pulumi.StringOutput)
}

type GetProjectsEnvironmentsMapOutput struct{ *pulumi.OutputState }

func (GetProjectsEnvironmentsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetProjectsEnvironments)(nil)).Elem()
}

func (o GetProjectsEnvironmentsMapOutput) ToGetProjectsEnvironmentsMapOutput() GetProjectsEnvironmentsMapOutput {
	return o
}

func (o GetProjectsEnvironmentsMapOutput) ToGetProjectsEnvironmentsMapOutputWithContext(ctx context.Context) GetProjectsEnvironmentsMapOutput {
	return o
}

func (o GetProjectsEnvironmentsMapOutput) MapIndex(k pulumi.StringInput) GetProjectsEnvironmentsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetProjectsEnvironments {
		return vs[0].(map[string]GetProjectsEnvironments)[vs[1].(string)]
	}).(GetProjectsEnvironmentsOutput)
}

type GetSecretFoldersFolder struct {
	// The ID of the folder
	Id string `pulumi:"id"`
	// The name of the folder
	Name string `pulumi:"name"`
}

// GetSecretFoldersFolderInput is an input type that accepts GetSecretFoldersFolderArgs and GetSecretFoldersFolderOutput values.
// You can construct a concrete instance of `GetSecretFoldersFolderInput` via:
//
//	GetSecretFoldersFolderArgs{...}
type GetSecretFoldersFolderInput interface {
	pulumi.Input

	ToGetSecretFoldersFolderOutput() GetSecretFoldersFolderOutput
	ToGetSecretFoldersFolderOutputWithContext(context.Context) GetSecretFoldersFolderOutput
}

type GetSecretFoldersFolderArgs struct {
	// The ID of the folder
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the folder
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSecretFoldersFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretFoldersFolder)(nil)).Elem()
}

func (i GetSecretFoldersFolderArgs) ToGetSecretFoldersFolderOutput() GetSecretFoldersFolderOutput {
	return i.ToGetSecretFoldersFolderOutputWithContext(context.Background())
}

func (i GetSecretFoldersFolderArgs) ToGetSecretFoldersFolderOutputWithContext(ctx context.Context) GetSecretFoldersFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretFoldersFolderOutput)
}

// GetSecretFoldersFolderArrayInput is an input type that accepts GetSecretFoldersFolderArray and GetSecretFoldersFolderArrayOutput values.
// You can construct a concrete instance of `GetSecretFoldersFolderArrayInput` via:
//
//	GetSecretFoldersFolderArray{ GetSecretFoldersFolderArgs{...} }
type GetSecretFoldersFolderArrayInput interface {
	pulumi.Input

	ToGetSecretFoldersFolderArrayOutput() GetSecretFoldersFolderArrayOutput
	ToGetSecretFoldersFolderArrayOutputWithContext(context.Context) GetSecretFoldersFolderArrayOutput
}

type GetSecretFoldersFolderArray []GetSecretFoldersFolderInput

func (GetSecretFoldersFolderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretFoldersFolder)(nil)).Elem()
}

func (i GetSecretFoldersFolderArray) ToGetSecretFoldersFolderArrayOutput() GetSecretFoldersFolderArrayOutput {
	return i.ToGetSecretFoldersFolderArrayOutputWithContext(context.Background())
}

func (i GetSecretFoldersFolderArray) ToGetSecretFoldersFolderArrayOutputWithContext(ctx context.Context) GetSecretFoldersFolderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretFoldersFolderArrayOutput)
}

type GetSecretFoldersFolderOutput struct{ *pulumi.OutputState }

func (GetSecretFoldersFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretFoldersFolder)(nil)).Elem()
}

func (o GetSecretFoldersFolderOutput) ToGetSecretFoldersFolderOutput() GetSecretFoldersFolderOutput {
	return o
}

func (o GetSecretFoldersFolderOutput) ToGetSecretFoldersFolderOutputWithContext(ctx context.Context) GetSecretFoldersFolderOutput {
	return o
}

// The ID of the folder
func (o GetSecretFoldersFolderOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretFoldersFolder) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the folder
func (o GetSecretFoldersFolderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretFoldersFolder) string { return v.Name }).(pulumi.StringOutput)
}

type GetSecretFoldersFolderArrayOutput struct{ *pulumi.OutputState }

func (GetSecretFoldersFolderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretFoldersFolder)(nil)).Elem()
}

func (o GetSecretFoldersFolderArrayOutput) ToGetSecretFoldersFolderArrayOutput() GetSecretFoldersFolderArrayOutput {
	return o
}

func (o GetSecretFoldersFolderArrayOutput) ToGetSecretFoldersFolderArrayOutputWithContext(ctx context.Context) GetSecretFoldersFolderArrayOutput {
	return o
}

func (o GetSecretFoldersFolderArrayOutput) Index(i pulumi.IntInput) GetSecretFoldersFolderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretFoldersFolder {
		return vs[0].([]GetSecretFoldersFolder)[vs[1].(int)]
	}).(GetSecretFoldersFolderOutput)
}

type GetSecretsSecrets struct {
	// The secret comment
	Comment string `pulumi:"comment"`
	// The secret type (shared or personal)
	SecretType string `pulumi:"secretType"`
	// The secret value
	Value string `pulumi:"value"`
}

// GetSecretsSecretsInput is an input type that accepts GetSecretsSecretsArgs and GetSecretsSecretsOutput values.
// You can construct a concrete instance of `GetSecretsSecretsInput` via:
//
//	GetSecretsSecretsArgs{...}
type GetSecretsSecretsInput interface {
	pulumi.Input

	ToGetSecretsSecretsOutput() GetSecretsSecretsOutput
	ToGetSecretsSecretsOutputWithContext(context.Context) GetSecretsSecretsOutput
}

type GetSecretsSecretsArgs struct {
	// The secret comment
	Comment pulumi.StringInput `pulumi:"comment"`
	// The secret type (shared or personal)
	SecretType pulumi.StringInput `pulumi:"secretType"`
	// The secret value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSecretsSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecrets)(nil)).Elem()
}

func (i GetSecretsSecretsArgs) ToGetSecretsSecretsOutput() GetSecretsSecretsOutput {
	return i.ToGetSecretsSecretsOutputWithContext(context.Background())
}

func (i GetSecretsSecretsArgs) ToGetSecretsSecretsOutputWithContext(ctx context.Context) GetSecretsSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretsOutput)
}

// GetSecretsSecretsMapInput is an input type that accepts GetSecretsSecretsMap and GetSecretsSecretsMapOutput values.
// You can construct a concrete instance of `GetSecretsSecretsMapInput` via:
//
//	GetSecretsSecretsMap{ "key": GetSecretsSecretsArgs{...} }
type GetSecretsSecretsMapInput interface {
	pulumi.Input

	ToGetSecretsSecretsMapOutput() GetSecretsSecretsMapOutput
	ToGetSecretsSecretsMapOutputWithContext(context.Context) GetSecretsSecretsMapOutput
}

type GetSecretsSecretsMap map[string]GetSecretsSecretsInput

func (GetSecretsSecretsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSecretsSecrets)(nil)).Elem()
}

func (i GetSecretsSecretsMap) ToGetSecretsSecretsMapOutput() GetSecretsSecretsMapOutput {
	return i.ToGetSecretsSecretsMapOutputWithContext(context.Background())
}

func (i GetSecretsSecretsMap) ToGetSecretsSecretsMapOutputWithContext(ctx context.Context) GetSecretsSecretsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretsSecretsMapOutput)
}

type GetSecretsSecretsOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsSecrets)(nil)).Elem()
}

func (o GetSecretsSecretsOutput) ToGetSecretsSecretsOutput() GetSecretsSecretsOutput {
	return o
}

func (o GetSecretsSecretsOutput) ToGetSecretsSecretsOutputWithContext(ctx context.Context) GetSecretsSecretsOutput {
	return o
}

// The secret comment
func (o GetSecretsSecretsOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecrets) string { return v.Comment }).(pulumi.StringOutput)
}

// The secret type (shared or personal)
func (o GetSecretsSecretsOutput) SecretType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecrets) string { return v.SecretType }).(pulumi.StringOutput)
}

// The secret value
func (o GetSecretsSecretsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretsSecrets) string { return v.Value }).(pulumi.StringOutput)
}

type GetSecretsSecretsMapOutput struct{ *pulumi.OutputState }

func (GetSecretsSecretsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSecretsSecrets)(nil)).Elem()
}

func (o GetSecretsSecretsMapOutput) ToGetSecretsSecretsMapOutput() GetSecretsSecretsMapOutput {
	return o
}

func (o GetSecretsSecretsMapOutput) ToGetSecretsSecretsMapOutputWithContext(ctx context.Context) GetSecretsSecretsMapOutput {
	return o
}

func (o GetSecretsSecretsMapOutput) MapIndex(k pulumi.StringInput) GetSecretsSecretsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetSecretsSecrets {
		return vs[0].(map[string]GetSecretsSecrets)[vs[1].(string)]
	}).(GetSecretsSecretsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApprovalPolicyApproverInput)(nil)).Elem(), AccessApprovalPolicyApproverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessApprovalPolicyApproverArrayInput)(nil)).Elem(), AccessApprovalPolicyApproverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnection1passwordCredentialsInput)(nil)).Elem(), AppConnection1passwordCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnection1passwordCredentialsPtrInput)(nil)).Elem(), AppConnection1passwordCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionAwsCredentialsInput)(nil)).Elem(), AppConnectionAwsCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionAwsCredentialsPtrInput)(nil)).Elem(), AppConnectionAwsCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionAzureClientSecretsCredentialsInput)(nil)).Elem(), AppConnectionAzureClientSecretsCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionAzureClientSecretsCredentialsPtrInput)(nil)).Elem(), AppConnectionAzureClientSecretsCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionBitbucketCredentialsInput)(nil)).Elem(), AppConnectionBitbucketCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionBitbucketCredentialsPtrInput)(nil)).Elem(), AppConnectionBitbucketCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionCloudflareCredentialsInput)(nil)).Elem(), AppConnectionCloudflareCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionCloudflareCredentialsPtrInput)(nil)).Elem(), AppConnectionCloudflareCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionDatabricksCredentialsInput)(nil)).Elem(), AppConnectionDatabricksCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionDatabricksCredentialsPtrInput)(nil)).Elem(), AppConnectionDatabricksCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionFlyioCredentialsInput)(nil)).Elem(), AppConnectionFlyioCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionFlyioCredentialsPtrInput)(nil)).Elem(), AppConnectionFlyioCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionGcpCredentialsInput)(nil)).Elem(), AppConnectionGcpCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionGcpCredentialsPtrInput)(nil)).Elem(), AppConnectionGcpCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionLdapCredentialsInput)(nil)).Elem(), AppConnectionLdapCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionLdapCredentialsPtrInput)(nil)).Elem(), AppConnectionLdapCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionMssqlCredentialsInput)(nil)).Elem(), AppConnectionMssqlCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionMssqlCredentialsPtrInput)(nil)).Elem(), AppConnectionMssqlCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionMysqlCredentialsInput)(nil)).Elem(), AppConnectionMysqlCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionMysqlCredentialsPtrInput)(nil)).Elem(), AppConnectionMysqlCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionOracledbCredentialsInput)(nil)).Elem(), AppConnectionOracledbCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionOracledbCredentialsPtrInput)(nil)).Elem(), AppConnectionOracledbCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionPostgresCredentialsInput)(nil)).Elem(), AppConnectionPostgresCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionPostgresCredentialsPtrInput)(nil)).Elem(), AppConnectionPostgresCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionRenderCredentialsInput)(nil)).Elem(), AppConnectionRenderCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionRenderCredentialsPtrInput)(nil)).Elem(), AppConnectionRenderCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionSupabaseCredentialsInput)(nil)).Elem(), AppConnectionSupabaseCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionSupabaseCredentialsPtrInput)(nil)).Elem(), AppConnectionSupabaseCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamConfigurationInput)(nil)).Elem(), DynamicSecretAwsIamConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamConfigurationPtrInput)(nil)).Elem(), DynamicSecretAwsIamConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamConfigurationAccessKeyConfigInput)(nil)).Elem(), DynamicSecretAwsIamConfigurationAccessKeyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamConfigurationAccessKeyConfigPtrInput)(nil)).Elem(), DynamicSecretAwsIamConfigurationAccessKeyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamConfigurationAssumeRoleConfigInput)(nil)).Elem(), DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrInput)(nil)).Elem(), DynamicSecretAwsIamConfigurationAssumeRoleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamMetadataInput)(nil)).Elem(), DynamicSecretAwsIamMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretAwsIamMetadataArrayInput)(nil)).Elem(), DynamicSecretAwsIamMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationPtrInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationApiConfigInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationApiConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationApiConfigPtrInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationApiConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationDynamicConfigInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationDynamicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationDynamicConfigPtrInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationDynamicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationStaticConfigInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationStaticConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesConfigurationStaticConfigPtrInput)(nil)).Elem(), DynamicSecretKubernetesConfigurationStaticConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesMetadataInput)(nil)).Elem(), DynamicSecretKubernetesMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretKubernetesMetadataArrayInput)(nil)).Elem(), DynamicSecretKubernetesMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationInput)(nil)).Elem(), DynamicSecretSqlDatabaseConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPtrInput)(nil)).Elem(), DynamicSecretSqlDatabaseConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirementsInput)(nil)).Elem(), DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrInput)(nil)).Elem(), DynamicSecretSqlDatabaseConfigurationPasswordRequirementsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredInput)(nil)).Elem(), DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrInput)(nil)).Elem(), DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseMetadataInput)(nil)).Elem(), DynamicSecretSqlDatabaseMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DynamicSecretSqlDatabaseMetadataArrayInput)(nil)).Elem(), DynamicSecretSqlDatabaseMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAuthAccessTokenTrustedIpInput)(nil)).Elem(), IdentityAwsAuthAccessTokenTrustedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAuthAccessTokenTrustedIpArrayInput)(nil)).Elem(), IdentityAwsAuthAccessTokenTrustedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAuthAccessTokenTrustedIpInput)(nil)).Elem(), IdentityAzureAuthAccessTokenTrustedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAuthAccessTokenTrustedIpArrayInput)(nil)).Elem(), IdentityAzureAuthAccessTokenTrustedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAuthAccessTokenTrustedIpInput)(nil)).Elem(), IdentityGcpAuthAccessTokenTrustedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityGcpAuthAccessTokenTrustedIpArrayInput)(nil)).Elem(), IdentityGcpAuthAccessTokenTrustedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityKubernetesAuthAccessTokenTrustedIpInput)(nil)).Elem(), IdentityKubernetesAuthAccessTokenTrustedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityKubernetesAuthAccessTokenTrustedIpArrayInput)(nil)).Elem(), IdentityKubernetesAuthAccessTokenTrustedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityMetadataInput)(nil)).Elem(), IdentityMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityMetadataArrayInput)(nil)).Elem(), IdentityMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityOidcAuthAccessTokenTrustedIpInput)(nil)).Elem(), IdentityOidcAuthAccessTokenTrustedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityOidcAuthAccessTokenTrustedIpArrayInput)(nil)).Elem(), IdentityOidcAuthAccessTokenTrustedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUniversalAuthAccessTokenTrustedIpInput)(nil)).Elem(), IdentityUniversalAuthAccessTokenTrustedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUniversalAuthAccessTokenTrustedIpArrayInput)(nil)).Elem(), IdentityUniversalAuthAccessTokenTrustedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUniversalAuthClientSecretTrustedIpInput)(nil)).Elem(), IdentityUniversalAuthClientSecretTrustedIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUniversalAuthClientSecretTrustedIpArrayInput)(nil)).Elem(), IdentityUniversalAuthClientSecretTrustedIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsParameterStoreOptionsInput)(nil)).Elem(), IntegrationAwsParameterStoreOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsParameterStoreOptionsPtrInput)(nil)).Elem(), IntegrationAwsParameterStoreOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsParameterStoreOptionsAwsTagInput)(nil)).Elem(), IntegrationAwsParameterStoreOptionsAwsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsParameterStoreOptionsAwsTagArrayInput)(nil)).Elem(), IntegrationAwsParameterStoreOptionsAwsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsSecretsManagerOptionsInput)(nil)).Elem(), IntegrationAwsSecretsManagerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsSecretsManagerOptionsPtrInput)(nil)).Elem(), IntegrationAwsSecretsManagerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsSecretsManagerOptionsAwsTagInput)(nil)).Elem(), IntegrationAwsSecretsManagerOptionsAwsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAwsSecretsManagerOptionsAwsTagArrayInput)(nil)).Elem(), IntegrationAwsSecretsManagerOptionsAwsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationGcpSecretManagerOptionsInput)(nil)).Elem(), IntegrationGcpSecretManagerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationGcpSecretManagerOptionsPtrInput)(nil)).Elem(), IntegrationGcpSecretManagerOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGroupRoleInput)(nil)).Elem(), ProjectGroupRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectGroupRoleArrayInput)(nil)).Elem(), ProjectGroupRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentityIdentityInput)(nil)).Elem(), ProjectIdentityIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentityIdentityPtrInput)(nil)).Elem(), ProjectIdentityIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentityRoleInput)(nil)).Elem(), ProjectIdentityRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentityRoleArrayInput)(nil)).Elem(), ProjectIdentityRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionInput)(nil)).Elem(), ProjectIdentitySpecificPrivilegePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionPtrInput)(nil)).Elem(), ProjectIdentitySpecificPrivilegePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionConditionsInput)(nil)).Elem(), ProjectIdentitySpecificPrivilegePermissionConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionConditionsPtrInput)(nil)).Elem(), ProjectIdentitySpecificPrivilegePermissionConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionsV2Input)(nil)).Elem(), ProjectIdentitySpecificPrivilegePermissionsV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectIdentitySpecificPrivilegePermissionsV2ArrayInput)(nil)).Elem(), ProjectIdentitySpecificPrivilegePermissionsV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectRolePermissionInput)(nil)).Elem(), ProjectRolePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectRolePermissionArrayInput)(nil)).Elem(), ProjectRolePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectRolePermissionConditionsInput)(nil)).Elem(), ProjectRolePermissionConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectRolePermissionConditionsPtrInput)(nil)).Elem(), ProjectRolePermissionConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectRolePermissionsV2Input)(nil)).Elem(), ProjectRolePermissionsV2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectRolePermissionsV2ArrayInput)(nil)).Elem(), ProjectRolePermissionsV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateEnvironmentInput)(nil)).Elem(), ProjectTemplateEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateEnvironmentArrayInput)(nil)).Elem(), ProjectTemplateEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateRoleInput)(nil)).Elem(), ProjectTemplateRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateRoleArrayInput)(nil)).Elem(), ProjectTemplateRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateRolePermissionInput)(nil)).Elem(), ProjectTemplateRolePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTemplateRolePermissionArrayInput)(nil)).Elem(), ProjectTemplateRolePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserRoleInput)(nil)).Elem(), ProjectUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserRoleArrayInput)(nil)).Elem(), ProjectUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserUserInput)(nil)).Elem(), ProjectUserUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectUserUserPtrInput)(nil)).Elem(), ProjectUserUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthInput)(nil)).Elem(), ProviderAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthPtrInput)(nil)).Elem(), ProviderAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthAwsIamInput)(nil)).Elem(), ProviderAuthAwsIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthAwsIamPtrInput)(nil)).Elem(), ProviderAuthAwsIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthKubernetesInput)(nil)).Elem(), ProviderAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthKubernetesPtrInput)(nil)).Elem(), ProviderAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthOidcInput)(nil)).Elem(), ProviderAuthOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthOidcPtrInput)(nil)).Elem(), ProviderAuthOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthUniversalInput)(nil)).Elem(), ProviderAuthUniversalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAuthUniversalPtrInput)(nil)).Elem(), ProviderAuthUniversalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretApprovalPolicyApproverInput)(nil)).Elem(), SecretApprovalPolicyApproverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretApprovalPolicyApproverArrayInput)(nil)).Elem(), SecretApprovalPolicyApproverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretParametersInput)(nil)).Elem(), SecretRotationAwsIamUserSecretParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretParametersPtrInput)(nil)).Elem(), SecretRotationAwsIamUserSecretParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretRotateAtUtcInput)(nil)).Elem(), SecretRotationAwsIamUserSecretRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretRotateAtUtcPtrInput)(nil)).Elem(), SecretRotationAwsIamUserSecretRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretSecretsMappingInput)(nil)).Elem(), SecretRotationAwsIamUserSecretSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretSecretsMappingPtrInput)(nil)).Elem(), SecretRotationAwsIamUserSecretSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretTemporaryParametersInput)(nil)).Elem(), SecretRotationAwsIamUserSecretTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAwsIamUserSecretTemporaryParametersPtrInput)(nil)).Elem(), SecretRotationAwsIamUserSecretTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretParametersInput)(nil)).Elem(), SecretRotationAzureClientSecretParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretParametersPtrInput)(nil)).Elem(), SecretRotationAzureClientSecretParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretRotateAtUtcInput)(nil)).Elem(), SecretRotationAzureClientSecretRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretRotateAtUtcPtrInput)(nil)).Elem(), SecretRotationAzureClientSecretRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretSecretsMappingInput)(nil)).Elem(), SecretRotationAzureClientSecretSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretSecretsMappingPtrInput)(nil)).Elem(), SecretRotationAzureClientSecretSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretTemporaryParametersInput)(nil)).Elem(), SecretRotationAzureClientSecretTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationAzureClientSecretTemporaryParametersPtrInput)(nil)).Elem(), SecretRotationAzureClientSecretTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordParametersInput)(nil)).Elem(), SecretRotationLdapPasswordParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordParametersPtrInput)(nil)).Elem(), SecretRotationLdapPasswordParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirementsInput)(nil)).Elem(), SecretRotationLdapPasswordParametersPasswordRequirementsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirementsPtrInput)(nil)).Elem(), SecretRotationLdapPasswordParametersPasswordRequirementsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirementsRequiredInput)(nil)).Elem(), SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrInput)(nil)).Elem(), SecretRotationLdapPasswordParametersPasswordRequirementsRequiredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordRotateAtUtcInput)(nil)).Elem(), SecretRotationLdapPasswordRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordRotateAtUtcPtrInput)(nil)).Elem(), SecretRotationLdapPasswordRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordSecretsMappingInput)(nil)).Elem(), SecretRotationLdapPasswordSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordSecretsMappingPtrInput)(nil)).Elem(), SecretRotationLdapPasswordSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordTemporaryParametersInput)(nil)).Elem(), SecretRotationLdapPasswordTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationLdapPasswordTemporaryParametersPtrInput)(nil)).Elem(), SecretRotationLdapPasswordTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsParametersInput)(nil)).Elem(), SecretRotationMssqlCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsParametersPtrInput)(nil)).Elem(), SecretRotationMssqlCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsRotateAtUtcInput)(nil)).Elem(), SecretRotationMssqlCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsRotateAtUtcPtrInput)(nil)).Elem(), SecretRotationMssqlCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsSecretsMappingInput)(nil)).Elem(), SecretRotationMssqlCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsSecretsMappingPtrInput)(nil)).Elem(), SecretRotationMssqlCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsTemporaryParametersInput)(nil)).Elem(), SecretRotationMssqlCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMssqlCredentialsTemporaryParametersPtrInput)(nil)).Elem(), SecretRotationMssqlCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsParametersInput)(nil)).Elem(), SecretRotationMysqlCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsParametersPtrInput)(nil)).Elem(), SecretRotationMysqlCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsRotateAtUtcInput)(nil)).Elem(), SecretRotationMysqlCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsRotateAtUtcPtrInput)(nil)).Elem(), SecretRotationMysqlCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsSecretsMappingInput)(nil)).Elem(), SecretRotationMysqlCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsSecretsMappingPtrInput)(nil)).Elem(), SecretRotationMysqlCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsTemporaryParametersInput)(nil)).Elem(), SecretRotationMysqlCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationMysqlCredentialsTemporaryParametersPtrInput)(nil)).Elem(), SecretRotationMysqlCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsParametersInput)(nil)).Elem(), SecretRotationOracledbCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsParametersPtrInput)(nil)).Elem(), SecretRotationOracledbCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsRotateAtUtcInput)(nil)).Elem(), SecretRotationOracledbCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsRotateAtUtcPtrInput)(nil)).Elem(), SecretRotationOracledbCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsSecretsMappingInput)(nil)).Elem(), SecretRotationOracledbCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsSecretsMappingPtrInput)(nil)).Elem(), SecretRotationOracledbCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsTemporaryParametersInput)(nil)).Elem(), SecretRotationOracledbCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationOracledbCredentialsTemporaryParametersPtrInput)(nil)).Elem(), SecretRotationOracledbCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsParametersInput)(nil)).Elem(), SecretRotationPostgresCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsParametersPtrInput)(nil)).Elem(), SecretRotationPostgresCredentialsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsRotateAtUtcInput)(nil)).Elem(), SecretRotationPostgresCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsRotateAtUtcPtrInput)(nil)).Elem(), SecretRotationPostgresCredentialsRotateAtUtcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsSecretsMappingInput)(nil)).Elem(), SecretRotationPostgresCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsSecretsMappingPtrInput)(nil)).Elem(), SecretRotationPostgresCredentialsSecretsMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsTemporaryParametersInput)(nil)).Elem(), SecretRotationPostgresCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretRotationPostgresCredentialsTemporaryParametersPtrInput)(nil)).Elem(), SecretRotationPostgresCredentialsTemporaryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSecretReminderInput)(nil)).Elem(), SecretSecretReminderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSecretReminderPtrInput)(nil)).Elem(), SecretSecretReminderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSync1passwordDestinationConfigInput)(nil)).Elem(), SecretSync1passwordDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSync1passwordDestinationConfigPtrInput)(nil)).Elem(), SecretSync1passwordDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSync1passwordSyncOptionsInput)(nil)).Elem(), SecretSync1passwordSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSync1passwordSyncOptionsPtrInput)(nil)).Elem(), SecretSync1passwordSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreDestinationConfigInput)(nil)).Elem(), SecretSyncAwsParameterStoreDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreDestinationConfigPtrInput)(nil)).Elem(), SecretSyncAwsParameterStoreDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptionsInput)(nil)).Elem(), SecretSyncAwsParameterStoreSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptionsPtrInput)(nil)).Elem(), SecretSyncAwsParameterStoreSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptionsTagInput)(nil)).Elem(), SecretSyncAwsParameterStoreSyncOptionsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreSyncOptionsTagArrayInput)(nil)).Elem(), SecretSyncAwsParameterStoreSyncOptionsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerDestinationConfigInput)(nil)).Elem(), SecretSyncAwsSecretsManagerDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerDestinationConfigPtrInput)(nil)).Elem(), SecretSyncAwsSecretsManagerDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptionsInput)(nil)).Elem(), SecretSyncAwsSecretsManagerSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptionsPtrInput)(nil)).Elem(), SecretSyncAwsSecretsManagerSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptionsTagInput)(nil)).Elem(), SecretSyncAwsSecretsManagerSyncOptionsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsSecretsManagerSyncOptionsTagArrayInput)(nil)).Elem(), SecretSyncAwsSecretsManagerSyncOptionsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureAppConfigurationDestinationConfigInput)(nil)).Elem(), SecretSyncAzureAppConfigurationDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureAppConfigurationDestinationConfigPtrInput)(nil)).Elem(), SecretSyncAzureAppConfigurationDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureAppConfigurationSyncOptionsInput)(nil)).Elem(), SecretSyncAzureAppConfigurationSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureAppConfigurationSyncOptionsPtrInput)(nil)).Elem(), SecretSyncAzureAppConfigurationSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureDevopsDestinationConfigInput)(nil)).Elem(), SecretSyncAzureDevopsDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureDevopsDestinationConfigPtrInput)(nil)).Elem(), SecretSyncAzureDevopsDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureDevopsSyncOptionsInput)(nil)).Elem(), SecretSyncAzureDevopsSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureDevopsSyncOptionsPtrInput)(nil)).Elem(), SecretSyncAzureDevopsSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureKeyVaultDestinationConfigInput)(nil)).Elem(), SecretSyncAzureKeyVaultDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureKeyVaultDestinationConfigPtrInput)(nil)).Elem(), SecretSyncAzureKeyVaultDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureKeyVaultSyncOptionsInput)(nil)).Elem(), SecretSyncAzureKeyVaultSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureKeyVaultSyncOptionsPtrInput)(nil)).Elem(), SecretSyncAzureKeyVaultSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncBitbucketDestinationConfigInput)(nil)).Elem(), SecretSyncBitbucketDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncBitbucketDestinationConfigPtrInput)(nil)).Elem(), SecretSyncBitbucketDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncBitbucketSyncOptionsInput)(nil)).Elem(), SecretSyncBitbucketSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncBitbucketSyncOptionsPtrInput)(nil)).Elem(), SecretSyncBitbucketSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflarePagesDestinationConfigInput)(nil)).Elem(), SecretSyncCloudflarePagesDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflarePagesDestinationConfigPtrInput)(nil)).Elem(), SecretSyncCloudflarePagesDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflarePagesSyncOptionsInput)(nil)).Elem(), SecretSyncCloudflarePagesSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflarePagesSyncOptionsPtrInput)(nil)).Elem(), SecretSyncCloudflarePagesSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflareWorkersDestinationConfigInput)(nil)).Elem(), SecretSyncCloudflareWorkersDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflareWorkersDestinationConfigPtrInput)(nil)).Elem(), SecretSyncCloudflareWorkersDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflareWorkersSyncOptionsInput)(nil)).Elem(), SecretSyncCloudflareWorkersSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncCloudflareWorkersSyncOptionsPtrInput)(nil)).Elem(), SecretSyncCloudflareWorkersSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncDatabricksDestinationConfigInput)(nil)).Elem(), SecretSyncDatabricksDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncDatabricksDestinationConfigPtrInput)(nil)).Elem(), SecretSyncDatabricksDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncDatabricksSyncOptionsInput)(nil)).Elem(), SecretSyncDatabricksSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncDatabricksSyncOptionsPtrInput)(nil)).Elem(), SecretSyncDatabricksSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncFlyioDestinationConfigInput)(nil)).Elem(), SecretSyncFlyioDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncFlyioDestinationConfigPtrInput)(nil)).Elem(), SecretSyncFlyioDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncFlyioSyncOptionsInput)(nil)).Elem(), SecretSyncFlyioSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncFlyioSyncOptionsPtrInput)(nil)).Elem(), SecretSyncFlyioSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGcpSecretManagerDestinationConfigInput)(nil)).Elem(), SecretSyncGcpSecretManagerDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGcpSecretManagerDestinationConfigPtrInput)(nil)).Elem(), SecretSyncGcpSecretManagerDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGcpSecretManagerSyncOptionsInput)(nil)).Elem(), SecretSyncGcpSecretManagerSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGcpSecretManagerSyncOptionsPtrInput)(nil)).Elem(), SecretSyncGcpSecretManagerSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGithubDestinationConfigInput)(nil)).Elem(), SecretSyncGithubDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGithubDestinationConfigPtrInput)(nil)).Elem(), SecretSyncGithubDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGithubSyncOptionsInput)(nil)).Elem(), SecretSyncGithubSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncGithubSyncOptionsPtrInput)(nil)).Elem(), SecretSyncGithubSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncRenderDestinationConfigInput)(nil)).Elem(), SecretSyncRenderDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncRenderDestinationConfigPtrInput)(nil)).Elem(), SecretSyncRenderDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncRenderSyncOptionsInput)(nil)).Elem(), SecretSyncRenderSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncRenderSyncOptionsPtrInput)(nil)).Elem(), SecretSyncRenderSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncSupabaseDestinationConfigInput)(nil)).Elem(), SecretSyncSupabaseDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncSupabaseDestinationConfigPtrInput)(nil)).Elem(), SecretSyncSupabaseDestinationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncSupabaseSyncOptionsInput)(nil)).Elem(), SecretSyncSupabaseSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncSupabaseSyncOptionsPtrInput)(nil)).Elem(), SecretSyncSupabaseSyncOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupInput)(nil)).Elem(), GetGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupsGroupArrayInput)(nil)).Elem(), GetGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityDetailsOrganizationInput)(nil)).Elem(), GetIdentityDetailsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsEnvironmentsInput)(nil)).Elem(), GetProjectsEnvironmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsEnvironmentsMapInput)(nil)).Elem(), GetProjectsEnvironmentsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretFoldersFolderInput)(nil)).Elem(), GetSecretFoldersFolderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretFoldersFolderArrayInput)(nil)).Elem(), GetSecretFoldersFolderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretsInput)(nil)).Elem(), GetSecretsSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretsSecretsMapInput)(nil)).Elem(), GetSecretsSecretsMap{})
	pulumi.RegisterOutputType(AccessApprovalPolicyApproverOutput{})
	pulumi.RegisterOutputType(AccessApprovalPolicyApproverArrayOutput{})
	pulumi.RegisterOutputType(AppConnection1passwordCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnection1passwordCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionAwsCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionAwsCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionAzureClientSecretsCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionAzureClientSecretsCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionBitbucketCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionBitbucketCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionCloudflareCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionCloudflareCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionDatabricksCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionDatabricksCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionFlyioCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionFlyioCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionGcpCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionGcpCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionLdapCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionLdapCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionMssqlCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionMssqlCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionMysqlCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionMysqlCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionOracledbCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionOracledbCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionPostgresCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionPostgresCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionRenderCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionRenderCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AppConnectionSupabaseCredentialsOutput{})
	pulumi.RegisterOutputType(AppConnectionSupabaseCredentialsPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamConfigurationOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamConfigurationAccessKeyConfigOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamConfigurationAccessKeyConfigPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamConfigurationAssumeRoleConfigOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamConfigurationAssumeRoleConfigPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamMetadataOutput{})
	pulumi.RegisterOutputType(DynamicSecretAwsIamMetadataArrayOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationApiConfigOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationApiConfigPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationDynamicConfigOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationDynamicConfigPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationStaticConfigOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesConfigurationStaticConfigPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesMetadataOutput{})
	pulumi.RegisterOutputType(DynamicSecretKubernetesMetadataArrayOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseConfigurationOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseConfigurationPasswordRequirementsRequiredPtrOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseMetadataOutput{})
	pulumi.RegisterOutputType(DynamicSecretSqlDatabaseMetadataArrayOutput{})
	pulumi.RegisterOutputType(IdentityAwsAuthAccessTokenTrustedIpOutput{})
	pulumi.RegisterOutputType(IdentityAwsAuthAccessTokenTrustedIpArrayOutput{})
	pulumi.RegisterOutputType(IdentityAzureAuthAccessTokenTrustedIpOutput{})
	pulumi.RegisterOutputType(IdentityAzureAuthAccessTokenTrustedIpArrayOutput{})
	pulumi.RegisterOutputType(IdentityGcpAuthAccessTokenTrustedIpOutput{})
	pulumi.RegisterOutputType(IdentityGcpAuthAccessTokenTrustedIpArrayOutput{})
	pulumi.RegisterOutputType(IdentityKubernetesAuthAccessTokenTrustedIpOutput{})
	pulumi.RegisterOutputType(IdentityKubernetesAuthAccessTokenTrustedIpArrayOutput{})
	pulumi.RegisterOutputType(IdentityMetadataOutput{})
	pulumi.RegisterOutputType(IdentityMetadataArrayOutput{})
	pulumi.RegisterOutputType(IdentityOidcAuthAccessTokenTrustedIpOutput{})
	pulumi.RegisterOutputType(IdentityOidcAuthAccessTokenTrustedIpArrayOutput{})
	pulumi.RegisterOutputType(IdentityUniversalAuthAccessTokenTrustedIpOutput{})
	pulumi.RegisterOutputType(IdentityUniversalAuthAccessTokenTrustedIpArrayOutput{})
	pulumi.RegisterOutputType(IdentityUniversalAuthClientSecretTrustedIpOutput{})
	pulumi.RegisterOutputType(IdentityUniversalAuthClientSecretTrustedIpArrayOutput{})
	pulumi.RegisterOutputType(IntegrationAwsParameterStoreOptionsOutput{})
	pulumi.RegisterOutputType(IntegrationAwsParameterStoreOptionsPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAwsParameterStoreOptionsAwsTagOutput{})
	pulumi.RegisterOutputType(IntegrationAwsParameterStoreOptionsAwsTagArrayOutput{})
	pulumi.RegisterOutputType(IntegrationAwsSecretsManagerOptionsOutput{})
	pulumi.RegisterOutputType(IntegrationAwsSecretsManagerOptionsPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAwsSecretsManagerOptionsAwsTagOutput{})
	pulumi.RegisterOutputType(IntegrationAwsSecretsManagerOptionsAwsTagArrayOutput{})
	pulumi.RegisterOutputType(IntegrationGcpSecretManagerOptionsOutput{})
	pulumi.RegisterOutputType(IntegrationGcpSecretManagerOptionsPtrOutput{})
	pulumi.RegisterOutputType(ProjectGroupRoleOutput{})
	pulumi.RegisterOutputType(ProjectGroupRoleArrayOutput{})
	pulumi.RegisterOutputType(ProjectIdentityIdentityOutput{})
	pulumi.RegisterOutputType(ProjectIdentityIdentityPtrOutput{})
	pulumi.RegisterOutputType(ProjectIdentityRoleOutput{})
	pulumi.RegisterOutputType(ProjectIdentityRoleArrayOutput{})
	pulumi.RegisterOutputType(ProjectIdentitySpecificPrivilegePermissionOutput{})
	pulumi.RegisterOutputType(ProjectIdentitySpecificPrivilegePermissionPtrOutput{})
	pulumi.RegisterOutputType(ProjectIdentitySpecificPrivilegePermissionConditionsOutput{})
	pulumi.RegisterOutputType(ProjectIdentitySpecificPrivilegePermissionConditionsPtrOutput{})
	pulumi.RegisterOutputType(ProjectIdentitySpecificPrivilegePermissionsV2Output{})
	pulumi.RegisterOutputType(ProjectIdentitySpecificPrivilegePermissionsV2ArrayOutput{})
	pulumi.RegisterOutputType(ProjectRolePermissionOutput{})
	pulumi.RegisterOutputType(ProjectRolePermissionArrayOutput{})
	pulumi.RegisterOutputType(ProjectRolePermissionConditionsOutput{})
	pulumi.RegisterOutputType(ProjectRolePermissionConditionsPtrOutput{})
	pulumi.RegisterOutputType(ProjectRolePermissionsV2Output{})
	pulumi.RegisterOutputType(ProjectRolePermissionsV2ArrayOutput{})
	pulumi.RegisterOutputType(ProjectTemplateEnvironmentOutput{})
	pulumi.RegisterOutputType(ProjectTemplateEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ProjectTemplateRoleOutput{})
	pulumi.RegisterOutputType(ProjectTemplateRoleArrayOutput{})
	pulumi.RegisterOutputType(ProjectTemplateRolePermissionOutput{})
	pulumi.RegisterOutputType(ProjectTemplateRolePermissionArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserRoleOutput{})
	pulumi.RegisterOutputType(ProjectUserRoleArrayOutput{})
	pulumi.RegisterOutputType(ProjectUserUserOutput{})
	pulumi.RegisterOutputType(ProjectUserUserPtrOutput{})
	pulumi.RegisterOutputType(ProviderAuthOutput{})
	pulumi.RegisterOutputType(ProviderAuthPtrOutput{})
	pulumi.RegisterOutputType(ProviderAuthAwsIamOutput{})
	pulumi.RegisterOutputType(ProviderAuthAwsIamPtrOutput{})
	pulumi.RegisterOutputType(ProviderAuthKubernetesOutput{})
	pulumi.RegisterOutputType(ProviderAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ProviderAuthOidcOutput{})
	pulumi.RegisterOutputType(ProviderAuthOidcPtrOutput{})
	pulumi.RegisterOutputType(ProviderAuthUniversalOutput{})
	pulumi.RegisterOutputType(ProviderAuthUniversalPtrOutput{})
	pulumi.RegisterOutputType(SecretApprovalPolicyApproverOutput{})
	pulumi.RegisterOutputType(SecretApprovalPolicyApproverArrayOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretRotateAtUtcOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretRotateAtUtcPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretSecretsMappingOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretSecretsMappingPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretTemporaryParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationAwsIamUserSecretTemporaryParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretRotateAtUtcOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretRotateAtUtcPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretSecretsMappingOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretSecretsMappingPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretTemporaryParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationAzureClientSecretTemporaryParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordParametersPasswordRequirementsOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordParametersPasswordRequirementsPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordParametersPasswordRequirementsRequiredPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordRotateAtUtcOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordRotateAtUtcPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordSecretsMappingOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordSecretsMappingPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordTemporaryParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationLdapPasswordTemporaryParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsRotateAtUtcOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsRotateAtUtcPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsSecretsMappingOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsSecretsMappingPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsTemporaryParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationMssqlCredentialsTemporaryParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsRotateAtUtcOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsRotateAtUtcPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsSecretsMappingOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsSecretsMappingPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsTemporaryParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationMysqlCredentialsTemporaryParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsRotateAtUtcOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsRotateAtUtcPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsSecretsMappingOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsSecretsMappingPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsTemporaryParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationOracledbCredentialsTemporaryParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsRotateAtUtcOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsRotateAtUtcPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsSecretsMappingOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsSecretsMappingPtrOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsTemporaryParametersOutput{})
	pulumi.RegisterOutputType(SecretRotationPostgresCredentialsTemporaryParametersPtrOutput{})
	pulumi.RegisterOutputType(SecretSecretReminderOutput{})
	pulumi.RegisterOutputType(SecretSecretReminderPtrOutput{})
	pulumi.RegisterOutputType(SecretSync1passwordDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSync1passwordDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSync1passwordSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSync1passwordSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreSyncOptionsTagOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreSyncOptionsTagArrayOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerSyncOptionsTagOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsSecretsManagerSyncOptionsTagArrayOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureAppConfigurationDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureAppConfigurationDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureAppConfigurationSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureAppConfigurationSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureDevopsDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureDevopsDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureDevopsSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureDevopsSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureKeyVaultDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureKeyVaultDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureKeyVaultSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureKeyVaultSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncBitbucketDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncBitbucketDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncBitbucketSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncBitbucketSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflarePagesDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflarePagesDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflarePagesSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflarePagesSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflareWorkersDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflareWorkersDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflareWorkersSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncCloudflareWorkersSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncDatabricksDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncDatabricksDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncDatabricksSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncDatabricksSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncFlyioDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncFlyioDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncFlyioSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncFlyioSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncGcpSecretManagerDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncGcpSecretManagerDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncGcpSecretManagerSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncGcpSecretManagerSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncGithubDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncGithubDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncGithubSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncGithubSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncRenderDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncRenderDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncRenderSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncRenderSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncSupabaseDestinationConfigOutput{})
	pulumi.RegisterOutputType(SecretSyncSupabaseDestinationConfigPtrOutput{})
	pulumi.RegisterOutputType(SecretSyncSupabaseSyncOptionsOutput{})
	pulumi.RegisterOutputType(SecretSyncSupabaseSyncOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetIdentityDetailsOrganizationOutput{})
	pulumi.RegisterOutputType(GetProjectsEnvironmentsOutput{})
	pulumi.RegisterOutputType(GetProjectsEnvironmentsMapOutput{})
	pulumi.RegisterOutputType(GetSecretFoldersFolderOutput{})
	pulumi.RegisterOutputType(GetSecretFoldersFolderArrayOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretsOutput{})
	pulumi.RegisterOutputType(GetSecretsSecretsMapOutput{})
}
