// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type AppConnectionBitbucket struct {
	pulumi.CustomResourceState

	// The credentials for the Bitbucket App Connection
	Credentials AppConnectionBitbucketCredentialsOutput `pulumi:"credentials"`
	// The hash of the Bitbucket App Connection credentials
	CredentialsHash pulumi.StringOutput `pulumi:"credentialsHash"`
	// An optional description for the Bitbucket App Connection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The method used to authenticate with Bitbucket. Possible values are: api-token
	Method pulumi.StringOutput `pulumi:"method"`
	// The name of the Bitbucket App Connection to create. Must be slug-friendly
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAppConnectionBitbucket registers a new resource with the given unique name, arguments, and options.
func NewAppConnectionBitbucket(ctx *pulumi.Context,
	name string, args *AppConnectionBitbucketArgs, opts ...pulumi.ResourceOption) (*AppConnectionBitbucket, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.Method == nil {
		return nil, errors.New("invalid value for required argument 'Method'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppConnectionBitbucket
	err := ctx.RegisterResource("infisical:index/appConnectionBitbucket:AppConnectionBitbucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppConnectionBitbucket gets an existing AppConnectionBitbucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppConnectionBitbucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppConnectionBitbucketState, opts ...pulumi.ResourceOption) (*AppConnectionBitbucket, error) {
	var resource AppConnectionBitbucket
	err := ctx.ReadResource("infisical:index/appConnectionBitbucket:AppConnectionBitbucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppConnectionBitbucket resources.
type appConnectionBitbucketState struct {
	// The credentials for the Bitbucket App Connection
	Credentials *AppConnectionBitbucketCredentials `pulumi:"credentials"`
	// The hash of the Bitbucket App Connection credentials
	CredentialsHash *string `pulumi:"credentialsHash"`
	// An optional description for the Bitbucket App Connection.
	Description *string `pulumi:"description"`
	// The method used to authenticate with Bitbucket. Possible values are: api-token
	Method *string `pulumi:"method"`
	// The name of the Bitbucket App Connection to create. Must be slug-friendly
	Name *string `pulumi:"name"`
}

type AppConnectionBitbucketState struct {
	// The credentials for the Bitbucket App Connection
	Credentials AppConnectionBitbucketCredentialsPtrInput
	// The hash of the Bitbucket App Connection credentials
	CredentialsHash pulumi.StringPtrInput
	// An optional description for the Bitbucket App Connection.
	Description pulumi.StringPtrInput
	// The method used to authenticate with Bitbucket. Possible values are: api-token
	Method pulumi.StringPtrInput
	// The name of the Bitbucket App Connection to create. Must be slug-friendly
	Name pulumi.StringPtrInput
}

func (AppConnectionBitbucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectionBitbucketState)(nil)).Elem()
}

type appConnectionBitbucketArgs struct {
	// The credentials for the Bitbucket App Connection
	Credentials AppConnectionBitbucketCredentials `pulumi:"credentials"`
	// An optional description for the Bitbucket App Connection.
	Description *string `pulumi:"description"`
	// The method used to authenticate with Bitbucket. Possible values are: api-token
	Method string `pulumi:"method"`
	// The name of the Bitbucket App Connection to create. Must be slug-friendly
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AppConnectionBitbucket resource.
type AppConnectionBitbucketArgs struct {
	// The credentials for the Bitbucket App Connection
	Credentials AppConnectionBitbucketCredentialsInput
	// An optional description for the Bitbucket App Connection.
	Description pulumi.StringPtrInput
	// The method used to authenticate with Bitbucket. Possible values are: api-token
	Method pulumi.StringInput
	// The name of the Bitbucket App Connection to create. Must be slug-friendly
	Name pulumi.StringPtrInput
}

func (AppConnectionBitbucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectionBitbucketArgs)(nil)).Elem()
}

type AppConnectionBitbucketInput interface {
	pulumi.Input

	ToAppConnectionBitbucketOutput() AppConnectionBitbucketOutput
	ToAppConnectionBitbucketOutputWithContext(ctx context.Context) AppConnectionBitbucketOutput
}

func (*AppConnectionBitbucket) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionBitbucket)(nil)).Elem()
}

func (i *AppConnectionBitbucket) ToAppConnectionBitbucketOutput() AppConnectionBitbucketOutput {
	return i.ToAppConnectionBitbucketOutputWithContext(context.Background())
}

func (i *AppConnectionBitbucket) ToAppConnectionBitbucketOutputWithContext(ctx context.Context) AppConnectionBitbucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionBitbucketOutput)
}

// AppConnectionBitbucketArrayInput is an input type that accepts AppConnectionBitbucketArray and AppConnectionBitbucketArrayOutput values.
// You can construct a concrete instance of `AppConnectionBitbucketArrayInput` via:
//
//	AppConnectionBitbucketArray{ AppConnectionBitbucketArgs{...} }
type AppConnectionBitbucketArrayInput interface {
	pulumi.Input

	ToAppConnectionBitbucketArrayOutput() AppConnectionBitbucketArrayOutput
	ToAppConnectionBitbucketArrayOutputWithContext(context.Context) AppConnectionBitbucketArrayOutput
}

type AppConnectionBitbucketArray []AppConnectionBitbucketInput

func (AppConnectionBitbucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectionBitbucket)(nil)).Elem()
}

func (i AppConnectionBitbucketArray) ToAppConnectionBitbucketArrayOutput() AppConnectionBitbucketArrayOutput {
	return i.ToAppConnectionBitbucketArrayOutputWithContext(context.Background())
}

func (i AppConnectionBitbucketArray) ToAppConnectionBitbucketArrayOutputWithContext(ctx context.Context) AppConnectionBitbucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionBitbucketArrayOutput)
}

// AppConnectionBitbucketMapInput is an input type that accepts AppConnectionBitbucketMap and AppConnectionBitbucketMapOutput values.
// You can construct a concrete instance of `AppConnectionBitbucketMapInput` via:
//
//	AppConnectionBitbucketMap{ "key": AppConnectionBitbucketArgs{...} }
type AppConnectionBitbucketMapInput interface {
	pulumi.Input

	ToAppConnectionBitbucketMapOutput() AppConnectionBitbucketMapOutput
	ToAppConnectionBitbucketMapOutputWithContext(context.Context) AppConnectionBitbucketMapOutput
}

type AppConnectionBitbucketMap map[string]AppConnectionBitbucketInput

func (AppConnectionBitbucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectionBitbucket)(nil)).Elem()
}

func (i AppConnectionBitbucketMap) ToAppConnectionBitbucketMapOutput() AppConnectionBitbucketMapOutput {
	return i.ToAppConnectionBitbucketMapOutputWithContext(context.Background())
}

func (i AppConnectionBitbucketMap) ToAppConnectionBitbucketMapOutputWithContext(ctx context.Context) AppConnectionBitbucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionBitbucketMapOutput)
}

type AppConnectionBitbucketOutput struct{ *pulumi.OutputState }

func (AppConnectionBitbucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionBitbucket)(nil)).Elem()
}

func (o AppConnectionBitbucketOutput) ToAppConnectionBitbucketOutput() AppConnectionBitbucketOutput {
	return o
}

func (o AppConnectionBitbucketOutput) ToAppConnectionBitbucketOutputWithContext(ctx context.Context) AppConnectionBitbucketOutput {
	return o
}

// The credentials for the Bitbucket App Connection
func (o AppConnectionBitbucketOutput) Credentials() AppConnectionBitbucketCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionBitbucket) AppConnectionBitbucketCredentialsOutput { return v.Credentials }).(AppConnectionBitbucketCredentialsOutput)
}

// The hash of the Bitbucket App Connection credentials
func (o AppConnectionBitbucketOutput) CredentialsHash() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionBitbucket) pulumi.StringOutput { return v.CredentialsHash }).(pulumi.StringOutput)
}

// An optional description for the Bitbucket App Connection.
func (o AppConnectionBitbucketOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionBitbucket) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The method used to authenticate with Bitbucket. Possible values are: api-token
func (o AppConnectionBitbucketOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionBitbucket) pulumi.StringOutput { return v.Method }).(pulumi.StringOutput)
}

// The name of the Bitbucket App Connection to create. Must be slug-friendly
func (o AppConnectionBitbucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionBitbucket) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AppConnectionBitbucketArrayOutput struct{ *pulumi.OutputState }

func (AppConnectionBitbucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectionBitbucket)(nil)).Elem()
}

func (o AppConnectionBitbucketArrayOutput) ToAppConnectionBitbucketArrayOutput() AppConnectionBitbucketArrayOutput {
	return o
}

func (o AppConnectionBitbucketArrayOutput) ToAppConnectionBitbucketArrayOutputWithContext(ctx context.Context) AppConnectionBitbucketArrayOutput {
	return o
}

func (o AppConnectionBitbucketArrayOutput) Index(i pulumi.IntInput) AppConnectionBitbucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppConnectionBitbucket {
		return vs[0].([]*AppConnectionBitbucket)[vs[1].(int)]
	}).(AppConnectionBitbucketOutput)
}

type AppConnectionBitbucketMapOutput struct{ *pulumi.OutputState }

func (AppConnectionBitbucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectionBitbucket)(nil)).Elem()
}

func (o AppConnectionBitbucketMapOutput) ToAppConnectionBitbucketMapOutput() AppConnectionBitbucketMapOutput {
	return o
}

func (o AppConnectionBitbucketMapOutput) ToAppConnectionBitbucketMapOutputWithContext(ctx context.Context) AppConnectionBitbucketMapOutput {
	return o
}

func (o AppConnectionBitbucketMapOutput) MapIndex(k pulumi.StringInput) AppConnectionBitbucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppConnectionBitbucket {
		return vs[0].(map[string]*AppConnectionBitbucket)[vs[1].(string)]
	}).(AppConnectionBitbucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionBitbucketInput)(nil)).Elem(), &AppConnectionBitbucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionBitbucketArrayInput)(nil)).Elem(), AppConnectionBitbucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionBitbucketMapInput)(nil)).Elem(), AppConnectionBitbucketMap{})
	pulumi.RegisterOutputType(AppConnectionBitbucketOutput{})
	pulumi.RegisterOutputType(AppConnectionBitbucketArrayOutput{})
	pulumi.RegisterOutputType(AppConnectionBitbucketMapOutput{})
}
