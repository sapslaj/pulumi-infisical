// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type IdentityAzureAuth struct {
	pulumi.CustomResourceState

	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl pulumi.IntOutput `pulumi:"accessTokenMaxTtl"`
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit pulumi.IntOutput `pulumi:"accessTokenNumUsesLimit"`
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps IdentityAzureAuthAccessTokenTrustedIpArrayOutput `pulumi:"accessTokenTrustedIps"`
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl pulumi.IntOutput `pulumi:"accessTokenTtl"`
	// List of Azure AD service principal IDs that are allowed to authenticate with Infisical
	AllowedServicePrincipalIds pulumi.StringArrayOutput `pulumi:"allowedServicePrincipalIds"`
	// The ID of the identity to attach the configuration onto.
	IdentityId pulumi.StringOutput `pulumi:"identityId"`
	// The resource URL for the application registered in Azure AD. The value is expected to match the `aud` claim of the access token JWT later used in the login operation against Infisical. See the [resource](https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http) parameter for how the audience is set when requesting a JWT access token from the Azure Instance Metadata Service (IMDS) endpoint. In most cases, this value should be `https://management.azure.com/` which is the default
	ResourceUrl pulumi.StringOutput `pulumi:"resourceUrl"`
	// The [tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant) for the Azure AD organization.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewIdentityAzureAuth registers a new resource with the given unique name, arguments, and options.
func NewIdentityAzureAuth(ctx *pulumi.Context,
	name string, args *IdentityAzureAuthArgs, opts ...pulumi.ResourceOption) (*IdentityAzureAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityAzureAuth
	err := ctx.RegisterResource("infisical:index/identityAzureAuth:IdentityAzureAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityAzureAuth gets an existing IdentityAzureAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityAzureAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityAzureAuthState, opts ...pulumi.ResourceOption) (*IdentityAzureAuth, error) {
	var resource IdentityAzureAuth
	err := ctx.ReadResource("infisical:index/identityAzureAuth:IdentityAzureAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityAzureAuth resources.
type identityAzureAuthState struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl *int `pulumi:"accessTokenMaxTtl"`
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit *int `pulumi:"accessTokenNumUsesLimit"`
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps []IdentityAzureAuthAccessTokenTrustedIp `pulumi:"accessTokenTrustedIps"`
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl *int `pulumi:"accessTokenTtl"`
	// List of Azure AD service principal IDs that are allowed to authenticate with Infisical
	AllowedServicePrincipalIds []string `pulumi:"allowedServicePrincipalIds"`
	// The ID of the identity to attach the configuration onto.
	IdentityId *string `pulumi:"identityId"`
	// The resource URL for the application registered in Azure AD. The value is expected to match the `aud` claim of the access token JWT later used in the login operation against Infisical. See the [resource](https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http) parameter for how the audience is set when requesting a JWT access token from the Azure Instance Metadata Service (IMDS) endpoint. In most cases, this value should be `https://management.azure.com/` which is the default
	ResourceUrl *string `pulumi:"resourceUrl"`
	// The [tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant) for the Azure AD organization.
	TenantId *string `pulumi:"tenantId"`
}

type IdentityAzureAuthState struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl pulumi.IntPtrInput
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit pulumi.IntPtrInput
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps IdentityAzureAuthAccessTokenTrustedIpArrayInput
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl pulumi.IntPtrInput
	// List of Azure AD service principal IDs that are allowed to authenticate with Infisical
	AllowedServicePrincipalIds pulumi.StringArrayInput
	// The ID of the identity to attach the configuration onto.
	IdentityId pulumi.StringPtrInput
	// The resource URL for the application registered in Azure AD. The value is expected to match the `aud` claim of the access token JWT later used in the login operation against Infisical. See the [resource](https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http) parameter for how the audience is set when requesting a JWT access token from the Azure Instance Metadata Service (IMDS) endpoint. In most cases, this value should be `https://management.azure.com/` which is the default
	ResourceUrl pulumi.StringPtrInput
	// The [tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant) for the Azure AD organization.
	TenantId pulumi.StringPtrInput
}

func (IdentityAzureAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityAzureAuthState)(nil)).Elem()
}

type identityAzureAuthArgs struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl *int `pulumi:"accessTokenMaxTtl"`
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit *int `pulumi:"accessTokenNumUsesLimit"`
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps []IdentityAzureAuthAccessTokenTrustedIp `pulumi:"accessTokenTrustedIps"`
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl *int `pulumi:"accessTokenTtl"`
	// List of Azure AD service principal IDs that are allowed to authenticate with Infisical
	AllowedServicePrincipalIds []string `pulumi:"allowedServicePrincipalIds"`
	// The ID of the identity to attach the configuration onto.
	IdentityId string `pulumi:"identityId"`
	// The resource URL for the application registered in Azure AD. The value is expected to match the `aud` claim of the access token JWT later used in the login operation against Infisical. See the [resource](https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http) parameter for how the audience is set when requesting a JWT access token from the Azure Instance Metadata Service (IMDS) endpoint. In most cases, this value should be `https://management.azure.com/` which is the default
	ResourceUrl *string `pulumi:"resourceUrl"`
	// The [tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant) for the Azure AD organization.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a IdentityAzureAuth resource.
type IdentityAzureAuthArgs struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl pulumi.IntPtrInput
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit pulumi.IntPtrInput
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps IdentityAzureAuthAccessTokenTrustedIpArrayInput
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl pulumi.IntPtrInput
	// List of Azure AD service principal IDs that are allowed to authenticate with Infisical
	AllowedServicePrincipalIds pulumi.StringArrayInput
	// The ID of the identity to attach the configuration onto.
	IdentityId pulumi.StringInput
	// The resource URL for the application registered in Azure AD. The value is expected to match the `aud` claim of the access token JWT later used in the login operation against Infisical. See the [resource](https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http) parameter for how the audience is set when requesting a JWT access token from the Azure Instance Metadata Service (IMDS) endpoint. In most cases, this value should be `https://management.azure.com/` which is the default
	ResourceUrl pulumi.StringPtrInput
	// The [tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant) for the Azure AD organization.
	TenantId pulumi.StringInput
}

func (IdentityAzureAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityAzureAuthArgs)(nil)).Elem()
}

type IdentityAzureAuthInput interface {
	pulumi.Input

	ToIdentityAzureAuthOutput() IdentityAzureAuthOutput
	ToIdentityAzureAuthOutputWithContext(ctx context.Context) IdentityAzureAuthOutput
}

func (*IdentityAzureAuth) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAzureAuth)(nil)).Elem()
}

func (i *IdentityAzureAuth) ToIdentityAzureAuthOutput() IdentityAzureAuthOutput {
	return i.ToIdentityAzureAuthOutputWithContext(context.Background())
}

func (i *IdentityAzureAuth) ToIdentityAzureAuthOutputWithContext(ctx context.Context) IdentityAzureAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAuthOutput)
}

// IdentityAzureAuthArrayInput is an input type that accepts IdentityAzureAuthArray and IdentityAzureAuthArrayOutput values.
// You can construct a concrete instance of `IdentityAzureAuthArrayInput` via:
//
//	IdentityAzureAuthArray{ IdentityAzureAuthArgs{...} }
type IdentityAzureAuthArrayInput interface {
	pulumi.Input

	ToIdentityAzureAuthArrayOutput() IdentityAzureAuthArrayOutput
	ToIdentityAzureAuthArrayOutputWithContext(context.Context) IdentityAzureAuthArrayOutput
}

type IdentityAzureAuthArray []IdentityAzureAuthInput

func (IdentityAzureAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityAzureAuth)(nil)).Elem()
}

func (i IdentityAzureAuthArray) ToIdentityAzureAuthArrayOutput() IdentityAzureAuthArrayOutput {
	return i.ToIdentityAzureAuthArrayOutputWithContext(context.Background())
}

func (i IdentityAzureAuthArray) ToIdentityAzureAuthArrayOutputWithContext(ctx context.Context) IdentityAzureAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAuthArrayOutput)
}

// IdentityAzureAuthMapInput is an input type that accepts IdentityAzureAuthMap and IdentityAzureAuthMapOutput values.
// You can construct a concrete instance of `IdentityAzureAuthMapInput` via:
//
//	IdentityAzureAuthMap{ "key": IdentityAzureAuthArgs{...} }
type IdentityAzureAuthMapInput interface {
	pulumi.Input

	ToIdentityAzureAuthMapOutput() IdentityAzureAuthMapOutput
	ToIdentityAzureAuthMapOutputWithContext(context.Context) IdentityAzureAuthMapOutput
}

type IdentityAzureAuthMap map[string]IdentityAzureAuthInput

func (IdentityAzureAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityAzureAuth)(nil)).Elem()
}

func (i IdentityAzureAuthMap) ToIdentityAzureAuthMapOutput() IdentityAzureAuthMapOutput {
	return i.ToIdentityAzureAuthMapOutputWithContext(context.Background())
}

func (i IdentityAzureAuthMap) ToIdentityAzureAuthMapOutputWithContext(ctx context.Context) IdentityAzureAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAzureAuthMapOutput)
}

type IdentityAzureAuthOutput struct{ *pulumi.OutputState }

func (IdentityAzureAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAzureAuth)(nil)).Elem()
}

func (o IdentityAzureAuthOutput) ToIdentityAzureAuthOutput() IdentityAzureAuthOutput {
	return o
}

func (o IdentityAzureAuthOutput) ToIdentityAzureAuthOutputWithContext(ctx context.Context) IdentityAzureAuthOutput {
	return o
}

// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
func (o IdentityAzureAuthOutput) AccessTokenMaxTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) pulumi.IntOutput { return v.AccessTokenMaxTtl }).(pulumi.IntOutput)
}

// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
func (o IdentityAzureAuthOutput) AccessTokenNumUsesLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) pulumi.IntOutput { return v.AccessTokenNumUsesLimit }).(pulumi.IntOutput)
}

// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
func (o IdentityAzureAuthOutput) AccessTokenTrustedIps() IdentityAzureAuthAccessTokenTrustedIpArrayOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) IdentityAzureAuthAccessTokenTrustedIpArrayOutput {
		return v.AccessTokenTrustedIps
	}).(IdentityAzureAuthAccessTokenTrustedIpArrayOutput)
}

// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
func (o IdentityAzureAuthOutput) AccessTokenTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) pulumi.IntOutput { return v.AccessTokenTtl }).(pulumi.IntOutput)
}

// List of Azure AD service principal IDs that are allowed to authenticate with Infisical
func (o IdentityAzureAuthOutput) AllowedServicePrincipalIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) pulumi.StringArrayOutput { return v.AllowedServicePrincipalIds }).(pulumi.StringArrayOutput)
}

// The ID of the identity to attach the configuration onto.
func (o IdentityAzureAuthOutput) IdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) pulumi.StringOutput { return v.IdentityId }).(pulumi.StringOutput)
}

// The resource URL for the application registered in Azure AD. The value is expected to match the `aud` claim of the access token JWT later used in the login operation against Infisical. See the [resource](https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http) parameter for how the audience is set when requesting a JWT access token from the Azure Instance Metadata Service (IMDS) endpoint. In most cases, this value should be `https://management.azure.com/` which is the default
func (o IdentityAzureAuthOutput) ResourceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) pulumi.StringOutput { return v.ResourceUrl }).(pulumi.StringOutput)
}

// The [tenant ID](https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant) for the Azure AD organization.
func (o IdentityAzureAuthOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAzureAuth) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type IdentityAzureAuthArrayOutput struct{ *pulumi.OutputState }

func (IdentityAzureAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityAzureAuth)(nil)).Elem()
}

func (o IdentityAzureAuthArrayOutput) ToIdentityAzureAuthArrayOutput() IdentityAzureAuthArrayOutput {
	return o
}

func (o IdentityAzureAuthArrayOutput) ToIdentityAzureAuthArrayOutputWithContext(ctx context.Context) IdentityAzureAuthArrayOutput {
	return o
}

func (o IdentityAzureAuthArrayOutput) Index(i pulumi.IntInput) IdentityAzureAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityAzureAuth {
		return vs[0].([]*IdentityAzureAuth)[vs[1].(int)]
	}).(IdentityAzureAuthOutput)
}

type IdentityAzureAuthMapOutput struct{ *pulumi.OutputState }

func (IdentityAzureAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityAzureAuth)(nil)).Elem()
}

func (o IdentityAzureAuthMapOutput) ToIdentityAzureAuthMapOutput() IdentityAzureAuthMapOutput {
	return o
}

func (o IdentityAzureAuthMapOutput) ToIdentityAzureAuthMapOutputWithContext(ctx context.Context) IdentityAzureAuthMapOutput {
	return o
}

func (o IdentityAzureAuthMapOutput) MapIndex(k pulumi.StringInput) IdentityAzureAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityAzureAuth {
		return vs[0].(map[string]*IdentityAzureAuth)[vs[1].(string)]
	}).(IdentityAzureAuthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAuthInput)(nil)).Elem(), &IdentityAzureAuth{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAuthArrayInput)(nil)).Elem(), IdentityAzureAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAzureAuthMapInput)(nil)).Elem(), IdentityAzureAuthMap{})
	pulumi.RegisterOutputType(IdentityAzureAuthOutput{})
	pulumi.RegisterOutputType(IdentityAzureAuthArrayOutput{})
	pulumi.RegisterOutputType(IdentityAzureAuthMapOutput{})
}
