// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type IdentityAwsAuth struct {
	pulumi.CustomResourceState

	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl pulumi.IntOutput `pulumi:"accessTokenMaxTtl"`
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit pulumi.IntOutput `pulumi:"accessTokenNumUsesLimit"`
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps IdentityAwsAuthAccessTokenTrustedIpArrayOutput `pulumi:"accessTokenTrustedIps"`
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl pulumi.IntOutput `pulumi:"accessTokenTtl"`
	// List of trusted AWS account IDs that are allowed to authenticate with Infisical.
	AllowedAccountIds pulumi.StringArrayOutput `pulumi:"allowedAccountIds"`
	// List of trusted IAM principal ARNs that are allowed to authenticate with Infisical. The values should take one of three forms: `arn:aws:iam::123456789012:user/MyUserName`, `arn:aws:iam::123456789012:role/MyRoleName`, or `arn:aws:iam::123456789012:*`. Using a wildcard in this case allows any IAM principal in the account `123456789012` to authenticate with Infisical under the identity
	AllowedPrincipalArns pulumi.StringArrayOutput `pulumi:"allowedPrincipalArns"`
	// The ID of the identity to attach the configuration onto.
	IdentityId pulumi.StringOutput `pulumi:"identityId"`
	// The endpoint URL for the AWS STS API. This value should be adjusted based on the AWS region you are operating in (e.g. `https://sts.us-east-1.amazonaws.com/`); refer to the list of regional STS endpoints [here](https://docs.aws.amazon.com/general/latest/gr/sts.html).
	StsEndpoint pulumi.StringOutput `pulumi:"stsEndpoint"`
}

// NewIdentityAwsAuth registers a new resource with the given unique name, arguments, and options.
func NewIdentityAwsAuth(ctx *pulumi.Context,
	name string, args *IdentityAwsAuthArgs, opts ...pulumi.ResourceOption) (*IdentityAwsAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityAwsAuth
	err := ctx.RegisterResource("infisical:index/identityAwsAuth:IdentityAwsAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityAwsAuth gets an existing IdentityAwsAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityAwsAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityAwsAuthState, opts ...pulumi.ResourceOption) (*IdentityAwsAuth, error) {
	var resource IdentityAwsAuth
	err := ctx.ReadResource("infisical:index/identityAwsAuth:IdentityAwsAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityAwsAuth resources.
type identityAwsAuthState struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl *int `pulumi:"accessTokenMaxTtl"`
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit *int `pulumi:"accessTokenNumUsesLimit"`
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps []IdentityAwsAuthAccessTokenTrustedIp `pulumi:"accessTokenTrustedIps"`
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl *int `pulumi:"accessTokenTtl"`
	// List of trusted AWS account IDs that are allowed to authenticate with Infisical.
	AllowedAccountIds []string `pulumi:"allowedAccountIds"`
	// List of trusted IAM principal ARNs that are allowed to authenticate with Infisical. The values should take one of three forms: `arn:aws:iam::123456789012:user/MyUserName`, `arn:aws:iam::123456789012:role/MyRoleName`, or `arn:aws:iam::123456789012:*`. Using a wildcard in this case allows any IAM principal in the account `123456789012` to authenticate with Infisical under the identity
	AllowedPrincipalArns []string `pulumi:"allowedPrincipalArns"`
	// The ID of the identity to attach the configuration onto.
	IdentityId *string `pulumi:"identityId"`
	// The endpoint URL for the AWS STS API. This value should be adjusted based on the AWS region you are operating in (e.g. `https://sts.us-east-1.amazonaws.com/`); refer to the list of regional STS endpoints [here](https://docs.aws.amazon.com/general/latest/gr/sts.html).
	StsEndpoint *string `pulumi:"stsEndpoint"`
}

type IdentityAwsAuthState struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl pulumi.IntPtrInput
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit pulumi.IntPtrInput
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps IdentityAwsAuthAccessTokenTrustedIpArrayInput
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl pulumi.IntPtrInput
	// List of trusted AWS account IDs that are allowed to authenticate with Infisical.
	AllowedAccountIds pulumi.StringArrayInput
	// List of trusted IAM principal ARNs that are allowed to authenticate with Infisical. The values should take one of three forms: `arn:aws:iam::123456789012:user/MyUserName`, `arn:aws:iam::123456789012:role/MyRoleName`, or `arn:aws:iam::123456789012:*`. Using a wildcard in this case allows any IAM principal in the account `123456789012` to authenticate with Infisical under the identity
	AllowedPrincipalArns pulumi.StringArrayInput
	// The ID of the identity to attach the configuration onto.
	IdentityId pulumi.StringPtrInput
	// The endpoint URL for the AWS STS API. This value should be adjusted based on the AWS region you are operating in (e.g. `https://sts.us-east-1.amazonaws.com/`); refer to the list of regional STS endpoints [here](https://docs.aws.amazon.com/general/latest/gr/sts.html).
	StsEndpoint pulumi.StringPtrInput
}

func (IdentityAwsAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityAwsAuthState)(nil)).Elem()
}

type identityAwsAuthArgs struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl *int `pulumi:"accessTokenMaxTtl"`
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit *int `pulumi:"accessTokenNumUsesLimit"`
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps []IdentityAwsAuthAccessTokenTrustedIp `pulumi:"accessTokenTrustedIps"`
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl *int `pulumi:"accessTokenTtl"`
	// List of trusted AWS account IDs that are allowed to authenticate with Infisical.
	AllowedAccountIds []string `pulumi:"allowedAccountIds"`
	// List of trusted IAM principal ARNs that are allowed to authenticate with Infisical. The values should take one of three forms: `arn:aws:iam::123456789012:user/MyUserName`, `arn:aws:iam::123456789012:role/MyRoleName`, or `arn:aws:iam::123456789012:*`. Using a wildcard in this case allows any IAM principal in the account `123456789012` to authenticate with Infisical under the identity
	AllowedPrincipalArns []string `pulumi:"allowedPrincipalArns"`
	// The ID of the identity to attach the configuration onto.
	IdentityId string `pulumi:"identityId"`
	// The endpoint URL for the AWS STS API. This value should be adjusted based on the AWS region you are operating in (e.g. `https://sts.us-east-1.amazonaws.com/`); refer to the list of regional STS endpoints [here](https://docs.aws.amazon.com/general/latest/gr/sts.html).
	StsEndpoint *string `pulumi:"stsEndpoint"`
}

// The set of arguments for constructing a IdentityAwsAuth resource.
type IdentityAwsAuthArgs struct {
	// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenMaxTtl pulumi.IntPtrInput
	// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
	AccessTokenNumUsesLimit pulumi.IntPtrInput
	// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
	AccessTokenTrustedIps IdentityAwsAuthAccessTokenTrustedIpArrayInput
	// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
	AccessTokenTtl pulumi.IntPtrInput
	// List of trusted AWS account IDs that are allowed to authenticate with Infisical.
	AllowedAccountIds pulumi.StringArrayInput
	// List of trusted IAM principal ARNs that are allowed to authenticate with Infisical. The values should take one of three forms: `arn:aws:iam::123456789012:user/MyUserName`, `arn:aws:iam::123456789012:role/MyRoleName`, or `arn:aws:iam::123456789012:*`. Using a wildcard in this case allows any IAM principal in the account `123456789012` to authenticate with Infisical under the identity
	AllowedPrincipalArns pulumi.StringArrayInput
	// The ID of the identity to attach the configuration onto.
	IdentityId pulumi.StringInput
	// The endpoint URL for the AWS STS API. This value should be adjusted based on the AWS region you are operating in (e.g. `https://sts.us-east-1.amazonaws.com/`); refer to the list of regional STS endpoints [here](https://docs.aws.amazon.com/general/latest/gr/sts.html).
	StsEndpoint pulumi.StringPtrInput
}

func (IdentityAwsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityAwsAuthArgs)(nil)).Elem()
}

type IdentityAwsAuthInput interface {
	pulumi.Input

	ToIdentityAwsAuthOutput() IdentityAwsAuthOutput
	ToIdentityAwsAuthOutputWithContext(ctx context.Context) IdentityAwsAuthOutput
}

func (*IdentityAwsAuth) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAwsAuth)(nil)).Elem()
}

func (i *IdentityAwsAuth) ToIdentityAwsAuthOutput() IdentityAwsAuthOutput {
	return i.ToIdentityAwsAuthOutputWithContext(context.Background())
}

func (i *IdentityAwsAuth) ToIdentityAwsAuthOutputWithContext(ctx context.Context) IdentityAwsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAuthOutput)
}

// IdentityAwsAuthArrayInput is an input type that accepts IdentityAwsAuthArray and IdentityAwsAuthArrayOutput values.
// You can construct a concrete instance of `IdentityAwsAuthArrayInput` via:
//
//	IdentityAwsAuthArray{ IdentityAwsAuthArgs{...} }
type IdentityAwsAuthArrayInput interface {
	pulumi.Input

	ToIdentityAwsAuthArrayOutput() IdentityAwsAuthArrayOutput
	ToIdentityAwsAuthArrayOutputWithContext(context.Context) IdentityAwsAuthArrayOutput
}

type IdentityAwsAuthArray []IdentityAwsAuthInput

func (IdentityAwsAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityAwsAuth)(nil)).Elem()
}

func (i IdentityAwsAuthArray) ToIdentityAwsAuthArrayOutput() IdentityAwsAuthArrayOutput {
	return i.ToIdentityAwsAuthArrayOutputWithContext(context.Background())
}

func (i IdentityAwsAuthArray) ToIdentityAwsAuthArrayOutputWithContext(ctx context.Context) IdentityAwsAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAuthArrayOutput)
}

// IdentityAwsAuthMapInput is an input type that accepts IdentityAwsAuthMap and IdentityAwsAuthMapOutput values.
// You can construct a concrete instance of `IdentityAwsAuthMapInput` via:
//
//	IdentityAwsAuthMap{ "key": IdentityAwsAuthArgs{...} }
type IdentityAwsAuthMapInput interface {
	pulumi.Input

	ToIdentityAwsAuthMapOutput() IdentityAwsAuthMapOutput
	ToIdentityAwsAuthMapOutputWithContext(context.Context) IdentityAwsAuthMapOutput
}

type IdentityAwsAuthMap map[string]IdentityAwsAuthInput

func (IdentityAwsAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityAwsAuth)(nil)).Elem()
}

func (i IdentityAwsAuthMap) ToIdentityAwsAuthMapOutput() IdentityAwsAuthMapOutput {
	return i.ToIdentityAwsAuthMapOutputWithContext(context.Background())
}

func (i IdentityAwsAuthMap) ToIdentityAwsAuthMapOutputWithContext(ctx context.Context) IdentityAwsAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityAwsAuthMapOutput)
}

type IdentityAwsAuthOutput struct{ *pulumi.OutputState }

func (IdentityAwsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityAwsAuth)(nil)).Elem()
}

func (o IdentityAwsAuthOutput) ToIdentityAwsAuthOutput() IdentityAwsAuthOutput {
	return o
}

func (o IdentityAwsAuthOutput) ToIdentityAwsAuthOutputWithContext(ctx context.Context) IdentityAwsAuthOutput {
	return o
}

// The maximum lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
func (o IdentityAwsAuthOutput) AccessTokenMaxTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) pulumi.IntOutput { return v.AccessTokenMaxTtl }).(pulumi.IntOutput)
}

// The maximum number of times that an access token can be used; a value of 0 implies infinite number of uses. Default:0
func (o IdentityAwsAuthOutput) AccessTokenNumUsesLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) pulumi.IntOutput { return v.AccessTokenNumUsesLimit }).(pulumi.IntOutput)
}

// A list of IPs or CIDR ranges that access tokens can be used from. You can use 0.0.0.0/0, to allow usage from any network address..
func (o IdentityAwsAuthOutput) AccessTokenTrustedIps() IdentityAwsAuthAccessTokenTrustedIpArrayOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) IdentityAwsAuthAccessTokenTrustedIpArrayOutput {
		return v.AccessTokenTrustedIps
	}).(IdentityAwsAuthAccessTokenTrustedIpArrayOutput)
}

// The lifetime for an access token in seconds. This value will be referenced at renewal time. Default: 2592000
func (o IdentityAwsAuthOutput) AccessTokenTtl() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) pulumi.IntOutput { return v.AccessTokenTtl }).(pulumi.IntOutput)
}

// List of trusted AWS account IDs that are allowed to authenticate with Infisical.
func (o IdentityAwsAuthOutput) AllowedAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) pulumi.StringArrayOutput { return v.AllowedAccountIds }).(pulumi.StringArrayOutput)
}

// List of trusted IAM principal ARNs that are allowed to authenticate with Infisical. The values should take one of three forms: `arn:aws:iam::123456789012:user/MyUserName`, `arn:aws:iam::123456789012:role/MyRoleName`, or `arn:aws:iam::123456789012:*`. Using a wildcard in this case allows any IAM principal in the account `123456789012` to authenticate with Infisical under the identity
func (o IdentityAwsAuthOutput) AllowedPrincipalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) pulumi.StringArrayOutput { return v.AllowedPrincipalArns }).(pulumi.StringArrayOutput)
}

// The ID of the identity to attach the configuration onto.
func (o IdentityAwsAuthOutput) IdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) pulumi.StringOutput { return v.IdentityId }).(pulumi.StringOutput)
}

// The endpoint URL for the AWS STS API. This value should be adjusted based on the AWS region you are operating in (e.g. `https://sts.us-east-1.amazonaws.com/`); refer to the list of regional STS endpoints [here](https://docs.aws.amazon.com/general/latest/gr/sts.html).
func (o IdentityAwsAuthOutput) StsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityAwsAuth) pulumi.StringOutput { return v.StsEndpoint }).(pulumi.StringOutput)
}

type IdentityAwsAuthArrayOutput struct{ *pulumi.OutputState }

func (IdentityAwsAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityAwsAuth)(nil)).Elem()
}

func (o IdentityAwsAuthArrayOutput) ToIdentityAwsAuthArrayOutput() IdentityAwsAuthArrayOutput {
	return o
}

func (o IdentityAwsAuthArrayOutput) ToIdentityAwsAuthArrayOutputWithContext(ctx context.Context) IdentityAwsAuthArrayOutput {
	return o
}

func (o IdentityAwsAuthArrayOutput) Index(i pulumi.IntInput) IdentityAwsAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityAwsAuth {
		return vs[0].([]*IdentityAwsAuth)[vs[1].(int)]
	}).(IdentityAwsAuthOutput)
}

type IdentityAwsAuthMapOutput struct{ *pulumi.OutputState }

func (IdentityAwsAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityAwsAuth)(nil)).Elem()
}

func (o IdentityAwsAuthMapOutput) ToIdentityAwsAuthMapOutput() IdentityAwsAuthMapOutput {
	return o
}

func (o IdentityAwsAuthMapOutput) ToIdentityAwsAuthMapOutputWithContext(ctx context.Context) IdentityAwsAuthMapOutput {
	return o
}

func (o IdentityAwsAuthMapOutput) MapIndex(k pulumi.StringInput) IdentityAwsAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityAwsAuth {
		return vs[0].(map[string]*IdentityAwsAuth)[vs[1].(string)]
	}).(IdentityAwsAuthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAuthInput)(nil)).Elem(), &IdentityAwsAuth{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAuthArrayInput)(nil)).Elem(), IdentityAwsAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityAwsAuthMapInput)(nil)).Elem(), IdentityAwsAuthMap{})
	pulumi.RegisterOutputType(IdentityAwsAuthOutput{})
	pulumi.RegisterOutputType(IdentityAwsAuthArrayOutput{})
	pulumi.RegisterOutputType(IdentityAwsAuthMapOutput{})
}
