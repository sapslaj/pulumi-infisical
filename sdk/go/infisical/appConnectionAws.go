// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type AppConnectionAws struct {
	pulumi.CustomResourceState

	// The credentials for the AWS App Connection
	Credentials AppConnectionAwsCredentialsOutput `pulumi:"credentials"`
	// The hash of the AWS App Connection credentials
	CredentialsHash pulumi.StringOutput `pulumi:"credentialsHash"`
	// An optional description for the AWS App Connection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The method used to authenticate with AWS. Possible values are: assume-role, access-key
	Method pulumi.StringOutput `pulumi:"method"`
	// The name of the AWS App Connection to create. Must be slug-friendly
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAppConnectionAws registers a new resource with the given unique name, arguments, and options.
func NewAppConnectionAws(ctx *pulumi.Context,
	name string, args *AppConnectionAwsArgs, opts ...pulumi.ResourceOption) (*AppConnectionAws, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.Method == nil {
		return nil, errors.New("invalid value for required argument 'Method'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppConnectionAws
	err := ctx.RegisterResource("infisical:index/appConnectionAws:AppConnectionAws", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppConnectionAws gets an existing AppConnectionAws resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppConnectionAws(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppConnectionAwsState, opts ...pulumi.ResourceOption) (*AppConnectionAws, error) {
	var resource AppConnectionAws
	err := ctx.ReadResource("infisical:index/appConnectionAws:AppConnectionAws", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppConnectionAws resources.
type appConnectionAwsState struct {
	// The credentials for the AWS App Connection
	Credentials *AppConnectionAwsCredentials `pulumi:"credentials"`
	// The hash of the AWS App Connection credentials
	CredentialsHash *string `pulumi:"credentialsHash"`
	// An optional description for the AWS App Connection.
	Description *string `pulumi:"description"`
	// The method used to authenticate with AWS. Possible values are: assume-role, access-key
	Method *string `pulumi:"method"`
	// The name of the AWS App Connection to create. Must be slug-friendly
	Name *string `pulumi:"name"`
}

type AppConnectionAwsState struct {
	// The credentials for the AWS App Connection
	Credentials AppConnectionAwsCredentialsPtrInput
	// The hash of the AWS App Connection credentials
	CredentialsHash pulumi.StringPtrInput
	// An optional description for the AWS App Connection.
	Description pulumi.StringPtrInput
	// The method used to authenticate with AWS. Possible values are: assume-role, access-key
	Method pulumi.StringPtrInput
	// The name of the AWS App Connection to create. Must be slug-friendly
	Name pulumi.StringPtrInput
}

func (AppConnectionAwsState) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectionAwsState)(nil)).Elem()
}

type appConnectionAwsArgs struct {
	// The credentials for the AWS App Connection
	Credentials AppConnectionAwsCredentials `pulumi:"credentials"`
	// An optional description for the AWS App Connection.
	Description *string `pulumi:"description"`
	// The method used to authenticate with AWS. Possible values are: assume-role, access-key
	Method string `pulumi:"method"`
	// The name of the AWS App Connection to create. Must be slug-friendly
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AppConnectionAws resource.
type AppConnectionAwsArgs struct {
	// The credentials for the AWS App Connection
	Credentials AppConnectionAwsCredentialsInput
	// An optional description for the AWS App Connection.
	Description pulumi.StringPtrInput
	// The method used to authenticate with AWS. Possible values are: assume-role, access-key
	Method pulumi.StringInput
	// The name of the AWS App Connection to create. Must be slug-friendly
	Name pulumi.StringPtrInput
}

func (AppConnectionAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectionAwsArgs)(nil)).Elem()
}

type AppConnectionAwsInput interface {
	pulumi.Input

	ToAppConnectionAwsOutput() AppConnectionAwsOutput
	ToAppConnectionAwsOutputWithContext(ctx context.Context) AppConnectionAwsOutput
}

func (*AppConnectionAws) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionAws)(nil)).Elem()
}

func (i *AppConnectionAws) ToAppConnectionAwsOutput() AppConnectionAwsOutput {
	return i.ToAppConnectionAwsOutputWithContext(context.Background())
}

func (i *AppConnectionAws) ToAppConnectionAwsOutputWithContext(ctx context.Context) AppConnectionAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAwsOutput)
}

// AppConnectionAwsArrayInput is an input type that accepts AppConnectionAwsArray and AppConnectionAwsArrayOutput values.
// You can construct a concrete instance of `AppConnectionAwsArrayInput` via:
//
//	AppConnectionAwsArray{ AppConnectionAwsArgs{...} }
type AppConnectionAwsArrayInput interface {
	pulumi.Input

	ToAppConnectionAwsArrayOutput() AppConnectionAwsArrayOutput
	ToAppConnectionAwsArrayOutputWithContext(context.Context) AppConnectionAwsArrayOutput
}

type AppConnectionAwsArray []AppConnectionAwsInput

func (AppConnectionAwsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectionAws)(nil)).Elem()
}

func (i AppConnectionAwsArray) ToAppConnectionAwsArrayOutput() AppConnectionAwsArrayOutput {
	return i.ToAppConnectionAwsArrayOutputWithContext(context.Background())
}

func (i AppConnectionAwsArray) ToAppConnectionAwsArrayOutputWithContext(ctx context.Context) AppConnectionAwsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAwsArrayOutput)
}

// AppConnectionAwsMapInput is an input type that accepts AppConnectionAwsMap and AppConnectionAwsMapOutput values.
// You can construct a concrete instance of `AppConnectionAwsMapInput` via:
//
//	AppConnectionAwsMap{ "key": AppConnectionAwsArgs{...} }
type AppConnectionAwsMapInput interface {
	pulumi.Input

	ToAppConnectionAwsMapOutput() AppConnectionAwsMapOutput
	ToAppConnectionAwsMapOutputWithContext(context.Context) AppConnectionAwsMapOutput
}

type AppConnectionAwsMap map[string]AppConnectionAwsInput

func (AppConnectionAwsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectionAws)(nil)).Elem()
}

func (i AppConnectionAwsMap) ToAppConnectionAwsMapOutput() AppConnectionAwsMapOutput {
	return i.ToAppConnectionAwsMapOutputWithContext(context.Background())
}

func (i AppConnectionAwsMap) ToAppConnectionAwsMapOutputWithContext(ctx context.Context) AppConnectionAwsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionAwsMapOutput)
}

type AppConnectionAwsOutput struct{ *pulumi.OutputState }

func (AppConnectionAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionAws)(nil)).Elem()
}

func (o AppConnectionAwsOutput) ToAppConnectionAwsOutput() AppConnectionAwsOutput {
	return o
}

func (o AppConnectionAwsOutput) ToAppConnectionAwsOutputWithContext(ctx context.Context) AppConnectionAwsOutput {
	return o
}

// The credentials for the AWS App Connection
func (o AppConnectionAwsOutput) Credentials() AppConnectionAwsCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionAws) AppConnectionAwsCredentialsOutput { return v.Credentials }).(AppConnectionAwsCredentialsOutput)
}

// The hash of the AWS App Connection credentials
func (o AppConnectionAwsOutput) CredentialsHash() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionAws) pulumi.StringOutput { return v.CredentialsHash }).(pulumi.StringOutput)
}

// An optional description for the AWS App Connection.
func (o AppConnectionAwsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionAws) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The method used to authenticate with AWS. Possible values are: assume-role, access-key
func (o AppConnectionAwsOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionAws) pulumi.StringOutput { return v.Method }).(pulumi.StringOutput)
}

// The name of the AWS App Connection to create. Must be slug-friendly
func (o AppConnectionAwsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionAws) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AppConnectionAwsArrayOutput struct{ *pulumi.OutputState }

func (AppConnectionAwsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectionAws)(nil)).Elem()
}

func (o AppConnectionAwsArrayOutput) ToAppConnectionAwsArrayOutput() AppConnectionAwsArrayOutput {
	return o
}

func (o AppConnectionAwsArrayOutput) ToAppConnectionAwsArrayOutputWithContext(ctx context.Context) AppConnectionAwsArrayOutput {
	return o
}

func (o AppConnectionAwsArrayOutput) Index(i pulumi.IntInput) AppConnectionAwsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppConnectionAws {
		return vs[0].([]*AppConnectionAws)[vs[1].(int)]
	}).(AppConnectionAwsOutput)
}

type AppConnectionAwsMapOutput struct{ *pulumi.OutputState }

func (AppConnectionAwsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectionAws)(nil)).Elem()
}

func (o AppConnectionAwsMapOutput) ToAppConnectionAwsMapOutput() AppConnectionAwsMapOutput {
	return o
}

func (o AppConnectionAwsMapOutput) ToAppConnectionAwsMapOutputWithContext(ctx context.Context) AppConnectionAwsMapOutput {
	return o
}

func (o AppConnectionAwsMapOutput) MapIndex(k pulumi.StringInput) AppConnectionAwsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppConnectionAws {
		return vs[0].(map[string]*AppConnectionAws)[vs[1].(string)]
	}).(AppConnectionAwsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionAwsInput)(nil)).Elem(), &AppConnectionAws{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionAwsArrayInput)(nil)).Elem(), AppConnectionAwsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionAwsMapInput)(nil)).Elem(), AppConnectionAwsMap{})
	pulumi.RegisterOutputType(AppConnectionAwsOutput{})
	pulumi.RegisterOutputType(AppConnectionAwsArrayOutput{})
	pulumi.RegisterOutputType(AppConnectionAwsMapOutput{})
}
