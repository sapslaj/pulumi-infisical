// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type SecretSyncAwsParameterStore struct {
	pulumi.CustomResourceState

	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolOutput `pulumi:"autoSyncEnabled"`
	// The ID of the aws Connection to use for syncing.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// An optional description for the AWS Parameter Store sync.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsParameterStoreDestinationConfigOutput `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The name of the AWS Parameter Store sync to create. Must be slug-friendly.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath pulumi.StringOutput `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsParameterStoreSyncOptionsOutput `pulumi:"syncOptions"`
}

// NewSecretSyncAwsParameterStore registers a new resource with the given unique name, arguments, and options.
func NewSecretSyncAwsParameterStore(ctx *pulumi.Context,
	name string, args *SecretSyncAwsParameterStoreArgs, opts ...pulumi.ResourceOption) (*SecretSyncAwsParameterStore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.DestinationConfig == nil {
		return nil, errors.New("invalid value for required argument 'DestinationConfig'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.SecretPath == nil {
		return nil, errors.New("invalid value for required argument 'SecretPath'")
	}
	if args.SyncOptions == nil {
		return nil, errors.New("invalid value for required argument 'SyncOptions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretSyncAwsParameterStore
	err := ctx.RegisterResource("infisical:index/secretSyncAwsParameterStore:SecretSyncAwsParameterStore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretSyncAwsParameterStore gets an existing SecretSyncAwsParameterStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretSyncAwsParameterStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretSyncAwsParameterStoreState, opts ...pulumi.ResourceOption) (*SecretSyncAwsParameterStore, error) {
	var resource SecretSyncAwsParameterStore
	err := ctx.ReadResource("infisical:index/secretSyncAwsParameterStore:SecretSyncAwsParameterStore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretSyncAwsParameterStore resources.
type secretSyncAwsParameterStoreState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the aws Connection to use for syncing.
	ConnectionId *string `pulumi:"connectionId"`
	// An optional description for the AWS Parameter Store sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig *SecretSyncAwsParameterStoreDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment *string `pulumi:"environment"`
	// The name of the AWS Parameter Store sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId *string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath *string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions *SecretSyncAwsParameterStoreSyncOptions `pulumi:"syncOptions"`
}

type SecretSyncAwsParameterStoreState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the aws Connection to use for syncing.
	ConnectionId pulumi.StringPtrInput
	// An optional description for the AWS Parameter Store sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsParameterStoreDestinationConfigPtrInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringPtrInput
	// The name of the AWS Parameter Store sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringPtrInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringPtrInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsParameterStoreSyncOptionsPtrInput
}

func (SecretSyncAwsParameterStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAwsParameterStoreState)(nil)).Elem()
}

type secretSyncAwsParameterStoreArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the aws Connection to use for syncing.
	ConnectionId string `pulumi:"connectionId"`
	// An optional description for the AWS Parameter Store sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsParameterStoreDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment string `pulumi:"environment"`
	// The name of the AWS Parameter Store sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsParameterStoreSyncOptions `pulumi:"syncOptions"`
}

// The set of arguments for constructing a SecretSyncAwsParameterStore resource.
type SecretSyncAwsParameterStoreArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the aws Connection to use for syncing.
	ConnectionId pulumi.StringInput
	// An optional description for the AWS Parameter Store sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAwsParameterStoreDestinationConfigInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringInput
	// The name of the AWS Parameter Store sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAwsParameterStoreSyncOptionsInput
}

func (SecretSyncAwsParameterStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAwsParameterStoreArgs)(nil)).Elem()
}

type SecretSyncAwsParameterStoreInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreOutput() SecretSyncAwsParameterStoreOutput
	ToSecretSyncAwsParameterStoreOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreOutput
}

func (*SecretSyncAwsParameterStore) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsParameterStore)(nil)).Elem()
}

func (i *SecretSyncAwsParameterStore) ToSecretSyncAwsParameterStoreOutput() SecretSyncAwsParameterStoreOutput {
	return i.ToSecretSyncAwsParameterStoreOutputWithContext(context.Background())
}

func (i *SecretSyncAwsParameterStore) ToSecretSyncAwsParameterStoreOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreOutput)
}

// SecretSyncAwsParameterStoreArrayInput is an input type that accepts SecretSyncAwsParameterStoreArray and SecretSyncAwsParameterStoreArrayOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreArrayInput` via:
//
//	SecretSyncAwsParameterStoreArray{ SecretSyncAwsParameterStoreArgs{...} }
type SecretSyncAwsParameterStoreArrayInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreArrayOutput() SecretSyncAwsParameterStoreArrayOutput
	ToSecretSyncAwsParameterStoreArrayOutputWithContext(context.Context) SecretSyncAwsParameterStoreArrayOutput
}

type SecretSyncAwsParameterStoreArray []SecretSyncAwsParameterStoreInput

func (SecretSyncAwsParameterStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAwsParameterStore)(nil)).Elem()
}

func (i SecretSyncAwsParameterStoreArray) ToSecretSyncAwsParameterStoreArrayOutput() SecretSyncAwsParameterStoreArrayOutput {
	return i.ToSecretSyncAwsParameterStoreArrayOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreArray) ToSecretSyncAwsParameterStoreArrayOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreArrayOutput)
}

// SecretSyncAwsParameterStoreMapInput is an input type that accepts SecretSyncAwsParameterStoreMap and SecretSyncAwsParameterStoreMapOutput values.
// You can construct a concrete instance of `SecretSyncAwsParameterStoreMapInput` via:
//
//	SecretSyncAwsParameterStoreMap{ "key": SecretSyncAwsParameterStoreArgs{...} }
type SecretSyncAwsParameterStoreMapInput interface {
	pulumi.Input

	ToSecretSyncAwsParameterStoreMapOutput() SecretSyncAwsParameterStoreMapOutput
	ToSecretSyncAwsParameterStoreMapOutputWithContext(context.Context) SecretSyncAwsParameterStoreMapOutput
}

type SecretSyncAwsParameterStoreMap map[string]SecretSyncAwsParameterStoreInput

func (SecretSyncAwsParameterStoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAwsParameterStore)(nil)).Elem()
}

func (i SecretSyncAwsParameterStoreMap) ToSecretSyncAwsParameterStoreMapOutput() SecretSyncAwsParameterStoreMapOutput {
	return i.ToSecretSyncAwsParameterStoreMapOutputWithContext(context.Background())
}

func (i SecretSyncAwsParameterStoreMap) ToSecretSyncAwsParameterStoreMapOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAwsParameterStoreMapOutput)
}

type SecretSyncAwsParameterStoreOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAwsParameterStore)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreOutput) ToSecretSyncAwsParameterStoreOutput() SecretSyncAwsParameterStoreOutput {
	return o
}

func (o SecretSyncAwsParameterStoreOutput) ToSecretSyncAwsParameterStoreOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreOutput {
	return o
}

// Whether secrets should be automatically synced when changes occur at the source location or not.
func (o SecretSyncAwsParameterStoreOutput) AutoSyncEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) pulumi.BoolOutput { return v.AutoSyncEnabled }).(pulumi.BoolOutput)
}

// The ID of the aws Connection to use for syncing.
func (o SecretSyncAwsParameterStoreOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// An optional description for the AWS Parameter Store sync.
func (o SecretSyncAwsParameterStoreOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination configuration for the secret sync.
func (o SecretSyncAwsParameterStoreOutput) DestinationConfig() SecretSyncAwsParameterStoreDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) SecretSyncAwsParameterStoreDestinationConfigOutput {
		return v.DestinationConfig
	}).(SecretSyncAwsParameterStoreDestinationConfigOutput)
}

// The slug of the project environment to sync secrets from.
func (o SecretSyncAwsParameterStoreOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The name of the AWS Parameter Store sync to create. Must be slug-friendly.
func (o SecretSyncAwsParameterStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Infisical project to create the sync in.
func (o SecretSyncAwsParameterStoreOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The folder path to sync secrets from.
func (o SecretSyncAwsParameterStoreOutput) SecretPath() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) pulumi.StringOutput { return v.SecretPath }).(pulumi.StringOutput)
}

// Parameters to modify how secrets are synced.
func (o SecretSyncAwsParameterStoreOutput) SyncOptions() SecretSyncAwsParameterStoreSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAwsParameterStore) SecretSyncAwsParameterStoreSyncOptionsOutput {
		return v.SyncOptions
	}).(SecretSyncAwsParameterStoreSyncOptionsOutput)
}

type SecretSyncAwsParameterStoreArrayOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAwsParameterStore)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreArrayOutput) ToSecretSyncAwsParameterStoreArrayOutput() SecretSyncAwsParameterStoreArrayOutput {
	return o
}

func (o SecretSyncAwsParameterStoreArrayOutput) ToSecretSyncAwsParameterStoreArrayOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreArrayOutput {
	return o
}

func (o SecretSyncAwsParameterStoreArrayOutput) Index(i pulumi.IntInput) SecretSyncAwsParameterStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretSyncAwsParameterStore {
		return vs[0].([]*SecretSyncAwsParameterStore)[vs[1].(int)]
	}).(SecretSyncAwsParameterStoreOutput)
}

type SecretSyncAwsParameterStoreMapOutput struct{ *pulumi.OutputState }

func (SecretSyncAwsParameterStoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAwsParameterStore)(nil)).Elem()
}

func (o SecretSyncAwsParameterStoreMapOutput) ToSecretSyncAwsParameterStoreMapOutput() SecretSyncAwsParameterStoreMapOutput {
	return o
}

func (o SecretSyncAwsParameterStoreMapOutput) ToSecretSyncAwsParameterStoreMapOutputWithContext(ctx context.Context) SecretSyncAwsParameterStoreMapOutput {
	return o
}

func (o SecretSyncAwsParameterStoreMapOutput) MapIndex(k pulumi.StringInput) SecretSyncAwsParameterStoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretSyncAwsParameterStore {
		return vs[0].(map[string]*SecretSyncAwsParameterStore)[vs[1].(string)]
	}).(SecretSyncAwsParameterStoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreInput)(nil)).Elem(), &SecretSyncAwsParameterStore{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreArrayInput)(nil)).Elem(), SecretSyncAwsParameterStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAwsParameterStoreMapInput)(nil)).Elem(), SecretSyncAwsParameterStoreMap{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreArrayOutput{})
	pulumi.RegisterOutputType(SecretSyncAwsParameterStoreMapOutput{})
}
