// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type SecretSyncAzureAppConfiguration struct {
	pulumi.CustomResourceState

	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolOutput `pulumi:"autoSyncEnabled"`
	// The ID of the azure Connection to use for syncing.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// An optional description for the Azure App Configuration sync.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureAppConfigurationDestinationConfigOutput `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The name of the Azure App Configuration sync to create. Must be slug-friendly.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath pulumi.StringOutput `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureAppConfigurationSyncOptionsOutput `pulumi:"syncOptions"`
}

// NewSecretSyncAzureAppConfiguration registers a new resource with the given unique name, arguments, and options.
func NewSecretSyncAzureAppConfiguration(ctx *pulumi.Context,
	name string, args *SecretSyncAzureAppConfigurationArgs, opts ...pulumi.ResourceOption) (*SecretSyncAzureAppConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.DestinationConfig == nil {
		return nil, errors.New("invalid value for required argument 'DestinationConfig'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.SecretPath == nil {
		return nil, errors.New("invalid value for required argument 'SecretPath'")
	}
	if args.SyncOptions == nil {
		return nil, errors.New("invalid value for required argument 'SyncOptions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecretSyncAzureAppConfiguration
	err := ctx.RegisterResource("infisical:index/secretSyncAzureAppConfiguration:SecretSyncAzureAppConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretSyncAzureAppConfiguration gets an existing SecretSyncAzureAppConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretSyncAzureAppConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretSyncAzureAppConfigurationState, opts ...pulumi.ResourceOption) (*SecretSyncAzureAppConfiguration, error) {
	var resource SecretSyncAzureAppConfiguration
	err := ctx.ReadResource("infisical:index/secretSyncAzureAppConfiguration:SecretSyncAzureAppConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretSyncAzureAppConfiguration resources.
type secretSyncAzureAppConfigurationState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the azure Connection to use for syncing.
	ConnectionId *string `pulumi:"connectionId"`
	// An optional description for the Azure App Configuration sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig *SecretSyncAzureAppConfigurationDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment *string `pulumi:"environment"`
	// The name of the Azure App Configuration sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId *string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath *string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions *SecretSyncAzureAppConfigurationSyncOptions `pulumi:"syncOptions"`
}

type SecretSyncAzureAppConfigurationState struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the azure Connection to use for syncing.
	ConnectionId pulumi.StringPtrInput
	// An optional description for the Azure App Configuration sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureAppConfigurationDestinationConfigPtrInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringPtrInput
	// The name of the Azure App Configuration sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringPtrInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringPtrInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureAppConfigurationSyncOptionsPtrInput
}

func (SecretSyncAzureAppConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAzureAppConfigurationState)(nil)).Elem()
}

type secretSyncAzureAppConfigurationArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled *bool `pulumi:"autoSyncEnabled"`
	// The ID of the azure Connection to use for syncing.
	ConnectionId string `pulumi:"connectionId"`
	// An optional description for the Azure App Configuration sync.
	Description *string `pulumi:"description"`
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureAppConfigurationDestinationConfig `pulumi:"destinationConfig"`
	// The slug of the project environment to sync secrets from.
	Environment string `pulumi:"environment"`
	// The name of the Azure App Configuration sync to create. Must be slug-friendly.
	Name *string `pulumi:"name"`
	// The ID of the Infisical project to create the sync in.
	ProjectId string `pulumi:"projectId"`
	// The folder path to sync secrets from.
	SecretPath string `pulumi:"secretPath"`
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureAppConfigurationSyncOptions `pulumi:"syncOptions"`
}

// The set of arguments for constructing a SecretSyncAzureAppConfiguration resource.
type SecretSyncAzureAppConfigurationArgs struct {
	// Whether secrets should be automatically synced when changes occur at the source location or not.
	AutoSyncEnabled pulumi.BoolPtrInput
	// The ID of the azure Connection to use for syncing.
	ConnectionId pulumi.StringInput
	// An optional description for the Azure App Configuration sync.
	Description pulumi.StringPtrInput
	// The destination configuration for the secret sync.
	DestinationConfig SecretSyncAzureAppConfigurationDestinationConfigInput
	// The slug of the project environment to sync secrets from.
	Environment pulumi.StringInput
	// The name of the Azure App Configuration sync to create. Must be slug-friendly.
	Name pulumi.StringPtrInput
	// The ID of the Infisical project to create the sync in.
	ProjectId pulumi.StringInput
	// The folder path to sync secrets from.
	SecretPath pulumi.StringInput
	// Parameters to modify how secrets are synced.
	SyncOptions SecretSyncAzureAppConfigurationSyncOptionsInput
}

func (SecretSyncAzureAppConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretSyncAzureAppConfigurationArgs)(nil)).Elem()
}

type SecretSyncAzureAppConfigurationInput interface {
	pulumi.Input

	ToSecretSyncAzureAppConfigurationOutput() SecretSyncAzureAppConfigurationOutput
	ToSecretSyncAzureAppConfigurationOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationOutput
}

func (*SecretSyncAzureAppConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureAppConfiguration)(nil)).Elem()
}

func (i *SecretSyncAzureAppConfiguration) ToSecretSyncAzureAppConfigurationOutput() SecretSyncAzureAppConfigurationOutput {
	return i.ToSecretSyncAzureAppConfigurationOutputWithContext(context.Background())
}

func (i *SecretSyncAzureAppConfiguration) ToSecretSyncAzureAppConfigurationOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationOutput)
}

// SecretSyncAzureAppConfigurationArrayInput is an input type that accepts SecretSyncAzureAppConfigurationArray and SecretSyncAzureAppConfigurationArrayOutput values.
// You can construct a concrete instance of `SecretSyncAzureAppConfigurationArrayInput` via:
//
//	SecretSyncAzureAppConfigurationArray{ SecretSyncAzureAppConfigurationArgs{...} }
type SecretSyncAzureAppConfigurationArrayInput interface {
	pulumi.Input

	ToSecretSyncAzureAppConfigurationArrayOutput() SecretSyncAzureAppConfigurationArrayOutput
	ToSecretSyncAzureAppConfigurationArrayOutputWithContext(context.Context) SecretSyncAzureAppConfigurationArrayOutput
}

type SecretSyncAzureAppConfigurationArray []SecretSyncAzureAppConfigurationInput

func (SecretSyncAzureAppConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAzureAppConfiguration)(nil)).Elem()
}

func (i SecretSyncAzureAppConfigurationArray) ToSecretSyncAzureAppConfigurationArrayOutput() SecretSyncAzureAppConfigurationArrayOutput {
	return i.ToSecretSyncAzureAppConfigurationArrayOutputWithContext(context.Background())
}

func (i SecretSyncAzureAppConfigurationArray) ToSecretSyncAzureAppConfigurationArrayOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationArrayOutput)
}

// SecretSyncAzureAppConfigurationMapInput is an input type that accepts SecretSyncAzureAppConfigurationMap and SecretSyncAzureAppConfigurationMapOutput values.
// You can construct a concrete instance of `SecretSyncAzureAppConfigurationMapInput` via:
//
//	SecretSyncAzureAppConfigurationMap{ "key": SecretSyncAzureAppConfigurationArgs{...} }
type SecretSyncAzureAppConfigurationMapInput interface {
	pulumi.Input

	ToSecretSyncAzureAppConfigurationMapOutput() SecretSyncAzureAppConfigurationMapOutput
	ToSecretSyncAzureAppConfigurationMapOutputWithContext(context.Context) SecretSyncAzureAppConfigurationMapOutput
}

type SecretSyncAzureAppConfigurationMap map[string]SecretSyncAzureAppConfigurationInput

func (SecretSyncAzureAppConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAzureAppConfiguration)(nil)).Elem()
}

func (i SecretSyncAzureAppConfigurationMap) ToSecretSyncAzureAppConfigurationMapOutput() SecretSyncAzureAppConfigurationMapOutput {
	return i.ToSecretSyncAzureAppConfigurationMapOutputWithContext(context.Background())
}

func (i SecretSyncAzureAppConfigurationMap) ToSecretSyncAzureAppConfigurationMapOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSyncAzureAppConfigurationMapOutput)
}

type SecretSyncAzureAppConfigurationOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureAppConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSyncAzureAppConfiguration)(nil)).Elem()
}

func (o SecretSyncAzureAppConfigurationOutput) ToSecretSyncAzureAppConfigurationOutput() SecretSyncAzureAppConfigurationOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationOutput) ToSecretSyncAzureAppConfigurationOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationOutput {
	return o
}

// Whether secrets should be automatically synced when changes occur at the source location or not.
func (o SecretSyncAzureAppConfigurationOutput) AutoSyncEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) pulumi.BoolOutput { return v.AutoSyncEnabled }).(pulumi.BoolOutput)
}

// The ID of the azure Connection to use for syncing.
func (o SecretSyncAzureAppConfigurationOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// An optional description for the Azure App Configuration sync.
func (o SecretSyncAzureAppConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination configuration for the secret sync.
func (o SecretSyncAzureAppConfigurationOutput) DestinationConfig() SecretSyncAzureAppConfigurationDestinationConfigOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) SecretSyncAzureAppConfigurationDestinationConfigOutput {
		return v.DestinationConfig
	}).(SecretSyncAzureAppConfigurationDestinationConfigOutput)
}

// The slug of the project environment to sync secrets from.
func (o SecretSyncAzureAppConfigurationOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The name of the Azure App Configuration sync to create. Must be slug-friendly.
func (o SecretSyncAzureAppConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Infisical project to create the sync in.
func (o SecretSyncAzureAppConfigurationOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The folder path to sync secrets from.
func (o SecretSyncAzureAppConfigurationOutput) SecretPath() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) pulumi.StringOutput { return v.SecretPath }).(pulumi.StringOutput)
}

// Parameters to modify how secrets are synced.
func (o SecretSyncAzureAppConfigurationOutput) SyncOptions() SecretSyncAzureAppConfigurationSyncOptionsOutput {
	return o.ApplyT(func(v *SecretSyncAzureAppConfiguration) SecretSyncAzureAppConfigurationSyncOptionsOutput {
		return v.SyncOptions
	}).(SecretSyncAzureAppConfigurationSyncOptionsOutput)
}

type SecretSyncAzureAppConfigurationArrayOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureAppConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecretSyncAzureAppConfiguration)(nil)).Elem()
}

func (o SecretSyncAzureAppConfigurationArrayOutput) ToSecretSyncAzureAppConfigurationArrayOutput() SecretSyncAzureAppConfigurationArrayOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationArrayOutput) ToSecretSyncAzureAppConfigurationArrayOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationArrayOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationArrayOutput) Index(i pulumi.IntInput) SecretSyncAzureAppConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecretSyncAzureAppConfiguration {
		return vs[0].([]*SecretSyncAzureAppConfiguration)[vs[1].(int)]
	}).(SecretSyncAzureAppConfigurationOutput)
}

type SecretSyncAzureAppConfigurationMapOutput struct{ *pulumi.OutputState }

func (SecretSyncAzureAppConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecretSyncAzureAppConfiguration)(nil)).Elem()
}

func (o SecretSyncAzureAppConfigurationMapOutput) ToSecretSyncAzureAppConfigurationMapOutput() SecretSyncAzureAppConfigurationMapOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationMapOutput) ToSecretSyncAzureAppConfigurationMapOutputWithContext(ctx context.Context) SecretSyncAzureAppConfigurationMapOutput {
	return o
}

func (o SecretSyncAzureAppConfigurationMapOutput) MapIndex(k pulumi.StringInput) SecretSyncAzureAppConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecretSyncAzureAppConfiguration {
		return vs[0].(map[string]*SecretSyncAzureAppConfiguration)[vs[1].(string)]
	}).(SecretSyncAzureAppConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureAppConfigurationInput)(nil)).Elem(), &SecretSyncAzureAppConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureAppConfigurationArrayInput)(nil)).Elem(), SecretSyncAzureAppConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSyncAzureAppConfigurationMapInput)(nil)).Elem(), SecretSyncAzureAppConfigurationMap{})
	pulumi.RegisterOutputType(SecretSyncAzureAppConfigurationOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureAppConfigurationArrayOutput{})
	pulumi.RegisterOutputType(SecretSyncAzureAppConfigurationMapOutput{})
}
