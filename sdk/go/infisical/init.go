// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "infisical:index/accessApprovalPolicy:AccessApprovalPolicy":
		r = &AccessApprovalPolicy{}
	case "infisical:index/appConnection1password:AppConnection1password":
		r = &AppConnection1password{}
	case "infisical:index/appConnectionAws:AppConnectionAws":
		r = &AppConnectionAws{}
	case "infisical:index/appConnectionAzureClientSecrets:AppConnectionAzureClientSecrets":
		r = &AppConnectionAzureClientSecrets{}
	case "infisical:index/appConnectionBitbucket:AppConnectionBitbucket":
		r = &AppConnectionBitbucket{}
	case "infisical:index/appConnectionCloudflare:AppConnectionCloudflare":
		r = &AppConnectionCloudflare{}
	case "infisical:index/appConnectionDatabricks:AppConnectionDatabricks":
		r = &AppConnectionDatabricks{}
	case "infisical:index/appConnectionFlyio:AppConnectionFlyio":
		r = &AppConnectionFlyio{}
	case "infisical:index/appConnectionGcp:AppConnectionGcp":
		r = &AppConnectionGcp{}
	case "infisical:index/appConnectionLdap:AppConnectionLdap":
		r = &AppConnectionLdap{}
	case "infisical:index/appConnectionMssql:AppConnectionMssql":
		r = &AppConnectionMssql{}
	case "infisical:index/appConnectionMysql:AppConnectionMysql":
		r = &AppConnectionMysql{}
	case "infisical:index/appConnectionOracledb:AppConnectionOracledb":
		r = &AppConnectionOracledb{}
	case "infisical:index/appConnectionPostgres:AppConnectionPostgres":
		r = &AppConnectionPostgres{}
	case "infisical:index/appConnectionRender:AppConnectionRender":
		r = &AppConnectionRender{}
	case "infisical:index/appConnectionSupabase:AppConnectionSupabase":
		r = &AppConnectionSupabase{}
	case "infisical:index/dynamicSecretAwsIam:DynamicSecretAwsIam":
		r = &DynamicSecretAwsIam{}
	case "infisical:index/dynamicSecretKubernetes:DynamicSecretKubernetes":
		r = &DynamicSecretKubernetes{}
	case "infisical:index/dynamicSecretSqlDatabase:DynamicSecretSqlDatabase":
		r = &DynamicSecretSqlDatabase{}
	case "infisical:index/group:Group":
		r = &Group{}
	case "infisical:index/identity:Identity":
		r = &Identity{}
	case "infisical:index/identityAwsAuth:IdentityAwsAuth":
		r = &IdentityAwsAuth{}
	case "infisical:index/identityAzureAuth:IdentityAzureAuth":
		r = &IdentityAzureAuth{}
	case "infisical:index/identityGcpAuth:IdentityGcpAuth":
		r = &IdentityGcpAuth{}
	case "infisical:index/identityKubernetesAuth:IdentityKubernetesAuth":
		r = &IdentityKubernetesAuth{}
	case "infisical:index/identityOidcAuth:IdentityOidcAuth":
		r = &IdentityOidcAuth{}
	case "infisical:index/identityUniversalAuth:IdentityUniversalAuth":
		r = &IdentityUniversalAuth{}
	case "infisical:index/identityUniversalAuthClientSecret:IdentityUniversalAuthClientSecret":
		r = &IdentityUniversalAuthClientSecret{}
	case "infisical:index/integrationAwsParameterStore:IntegrationAwsParameterStore":
		r = &IntegrationAwsParameterStore{}
	case "infisical:index/integrationAwsSecretsManager:IntegrationAwsSecretsManager":
		r = &IntegrationAwsSecretsManager{}
	case "infisical:index/integrationCircleci:IntegrationCircleci":
		r = &IntegrationCircleci{}
	case "infisical:index/integrationDatabricks:IntegrationDatabricks":
		r = &IntegrationDatabricks{}
	case "infisical:index/integrationGcpSecretManager:IntegrationGcpSecretManager":
		r = &IntegrationGcpSecretManager{}
	case "infisical:index/project:Project":
		r = &Project{}
	case "infisical:index/projectEnvironment:ProjectEnvironment":
		r = &ProjectEnvironment{}
	case "infisical:index/projectGroup:ProjectGroup":
		r = &ProjectGroup{}
	case "infisical:index/projectIdentity:ProjectIdentity":
		r = &ProjectIdentity{}
	case "infisical:index/projectIdentitySpecificPrivilege:ProjectIdentitySpecificPrivilege":
		r = &ProjectIdentitySpecificPrivilege{}
	case "infisical:index/projectRole:ProjectRole":
		r = &ProjectRole{}
	case "infisical:index/projectTemplate:ProjectTemplate":
		r = &ProjectTemplate{}
	case "infisical:index/projectUser:ProjectUser":
		r = &ProjectUser{}
	case "infisical:index/secret:Secret":
		r = &Secret{}
	case "infisical:index/secretApprovalPolicy:SecretApprovalPolicy":
		r = &SecretApprovalPolicy{}
	case "infisical:index/secretFolder:SecretFolder":
		r = &SecretFolder{}
	case "infisical:index/secretImport:SecretImport":
		r = &SecretImport{}
	case "infisical:index/secretRotationAwsIamUserSecret:SecretRotationAwsIamUserSecret":
		r = &SecretRotationAwsIamUserSecret{}
	case "infisical:index/secretRotationAzureClientSecret:SecretRotationAzureClientSecret":
		r = &SecretRotationAzureClientSecret{}
	case "infisical:index/secretRotationLdapPassword:SecretRotationLdapPassword":
		r = &SecretRotationLdapPassword{}
	case "infisical:index/secretRotationMssqlCredentials:SecretRotationMssqlCredentials":
		r = &SecretRotationMssqlCredentials{}
	case "infisical:index/secretRotationMysqlCredentials:SecretRotationMysqlCredentials":
		r = &SecretRotationMysqlCredentials{}
	case "infisical:index/secretRotationOracledbCredentials:SecretRotationOracledbCredentials":
		r = &SecretRotationOracledbCredentials{}
	case "infisical:index/secretRotationPostgresCredentials:SecretRotationPostgresCredentials":
		r = &SecretRotationPostgresCredentials{}
	case "infisical:index/secretSync1password:SecretSync1password":
		r = &SecretSync1password{}
	case "infisical:index/secretSyncAwsParameterStore:SecretSyncAwsParameterStore":
		r = &SecretSyncAwsParameterStore{}
	case "infisical:index/secretSyncAwsSecretsManager:SecretSyncAwsSecretsManager":
		r = &SecretSyncAwsSecretsManager{}
	case "infisical:index/secretSyncAzureAppConfiguration:SecretSyncAzureAppConfiguration":
		r = &SecretSyncAzureAppConfiguration{}
	case "infisical:index/secretSyncAzureDevops:SecretSyncAzureDevops":
		r = &SecretSyncAzureDevops{}
	case "infisical:index/secretSyncAzureKeyVault:SecretSyncAzureKeyVault":
		r = &SecretSyncAzureKeyVault{}
	case "infisical:index/secretSyncBitbucket:SecretSyncBitbucket":
		r = &SecretSyncBitbucket{}
	case "infisical:index/secretSyncCloudflarePages:SecretSyncCloudflarePages":
		r = &SecretSyncCloudflarePages{}
	case "infisical:index/secretSyncCloudflareWorkers:SecretSyncCloudflareWorkers":
		r = &SecretSyncCloudflareWorkers{}
	case "infisical:index/secretSyncDatabricks:SecretSyncDatabricks":
		r = &SecretSyncDatabricks{}
	case "infisical:index/secretSyncFlyio:SecretSyncFlyio":
		r = &SecretSyncFlyio{}
	case "infisical:index/secretSyncGcpSecretManager:SecretSyncGcpSecretManager":
		r = &SecretSyncGcpSecretManager{}
	case "infisical:index/secretSyncGithub:SecretSyncGithub":
		r = &SecretSyncGithub{}
	case "infisical:index/secretSyncRender:SecretSyncRender":
		r = &SecretSyncRender{}
	case "infisical:index/secretSyncSupabase:SecretSyncSupabase":
		r = &SecretSyncSupabase{}
	case "infisical:index/secretTag:SecretTag":
		r = &SecretTag{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:infisical" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"infisical",
		"index/accessApprovalPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnection1password",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionAws",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionAzureClientSecrets",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionBitbucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionCloudflare",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionDatabricks",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionFlyio",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionGcp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionLdap",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionMssql",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionMysql",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionOracledb",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionPostgres",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionRender",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/appConnectionSupabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/dynamicSecretAwsIam",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/dynamicSecretKubernetes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/dynamicSecretSqlDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/group",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identityAwsAuth",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identityAzureAuth",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identityGcpAuth",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identityKubernetesAuth",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identityOidcAuth",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identityUniversalAuth",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/identityUniversalAuthClientSecret",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/integrationAwsParameterStore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/integrationAwsSecretsManager",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/integrationCircleci",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/integrationDatabricks",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/integrationGcpSecretManager",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/projectEnvironment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/projectGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/projectIdentity",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/projectIdentitySpecificPrivilege",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/projectRole",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/projectTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/projectUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secret",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretApprovalPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretFolder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretImport",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretRotationAwsIamUserSecret",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretRotationAzureClientSecret",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretRotationLdapPassword",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretRotationMssqlCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretRotationMysqlCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretRotationOracledbCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretRotationPostgresCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSync1password",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncAwsParameterStore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncAwsSecretsManager",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncAzureAppConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncAzureDevops",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncAzureKeyVault",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncBitbucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncCloudflarePages",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncCloudflareWorkers",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncDatabricks",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncFlyio",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncGcpSecretManager",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncGithub",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncRender",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretSyncSupabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"infisical",
		"index/secretTag",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"infisical",
		&pkg{version},
	)
}
