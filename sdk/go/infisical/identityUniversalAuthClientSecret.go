// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type IdentityUniversalAuthClientSecret struct {
	pulumi.CustomResourceState

	// The client ID of the secret.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The client secret.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// The UTC timestamp of the created at.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the client secret.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the identity to create a client secret for
	IdentityId pulumi.StringOutput `pulumi:"identityId"`
	// A flag indicating token has been revoked
	IsRevoked pulumi.BoolOutput `pulumi:"isRevoked"`
	// The number of times that the client secret is used
	NumberOfUses pulumi.IntOutput `pulumi:"numberOfUses"`
	// The maximum number of times that the client secret can be used; a value of 0 implies infinite number of uses. Default: 0
	NumberOfUsesLimit pulumi.IntOutput `pulumi:"numberOfUsesLimit"`
	// The lifetime for the client secret in seconds. Default: 0 - not expiring
	Ttl pulumi.IntOutput `pulumi:"ttl"`
}

// NewIdentityUniversalAuthClientSecret registers a new resource with the given unique name, arguments, and options.
func NewIdentityUniversalAuthClientSecret(ctx *pulumi.Context,
	name string, args *IdentityUniversalAuthClientSecretArgs, opts ...pulumi.ResourceOption) (*IdentityUniversalAuthClientSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityUniversalAuthClientSecret
	err := ctx.RegisterResource("infisical:index/identityUniversalAuthClientSecret:IdentityUniversalAuthClientSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityUniversalAuthClientSecret gets an existing IdentityUniversalAuthClientSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityUniversalAuthClientSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityUniversalAuthClientSecretState, opts ...pulumi.ResourceOption) (*IdentityUniversalAuthClientSecret, error) {
	var resource IdentityUniversalAuthClientSecret
	err := ctx.ReadResource("infisical:index/identityUniversalAuthClientSecret:IdentityUniversalAuthClientSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityUniversalAuthClientSecret resources.
type identityUniversalAuthClientSecretState struct {
	// The client ID of the secret.
	ClientId *string `pulumi:"clientId"`
	// The client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// The UTC timestamp of the created at.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the client secret.
	Description *string `pulumi:"description"`
	// The ID of the identity to create a client secret for
	IdentityId *string `pulumi:"identityId"`
	// A flag indicating token has been revoked
	IsRevoked *bool `pulumi:"isRevoked"`
	// The number of times that the client secret is used
	NumberOfUses *int `pulumi:"numberOfUses"`
	// The maximum number of times that the client secret can be used; a value of 0 implies infinite number of uses. Default: 0
	NumberOfUsesLimit *int `pulumi:"numberOfUsesLimit"`
	// The lifetime for the client secret in seconds. Default: 0 - not expiring
	Ttl *int `pulumi:"ttl"`
}

type IdentityUniversalAuthClientSecretState struct {
	// The client ID of the secret.
	ClientId pulumi.StringPtrInput
	// The client secret.
	ClientSecret pulumi.StringPtrInput
	// The UTC timestamp of the created at.
	CreatedAt pulumi.StringPtrInput
	// The description of the client secret.
	Description pulumi.StringPtrInput
	// The ID of the identity to create a client secret for
	IdentityId pulumi.StringPtrInput
	// A flag indicating token has been revoked
	IsRevoked pulumi.BoolPtrInput
	// The number of times that the client secret is used
	NumberOfUses pulumi.IntPtrInput
	// The maximum number of times that the client secret can be used; a value of 0 implies infinite number of uses. Default: 0
	NumberOfUsesLimit pulumi.IntPtrInput
	// The lifetime for the client secret in seconds. Default: 0 - not expiring
	Ttl pulumi.IntPtrInput
}

func (IdentityUniversalAuthClientSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUniversalAuthClientSecretState)(nil)).Elem()
}

type identityUniversalAuthClientSecretArgs struct {
	// The description of the client secret.
	Description *string `pulumi:"description"`
	// The ID of the identity to create a client secret for
	IdentityId string `pulumi:"identityId"`
	// The maximum number of times that the client secret can be used; a value of 0 implies infinite number of uses. Default: 0
	NumberOfUsesLimit *int `pulumi:"numberOfUsesLimit"`
	// The lifetime for the client secret in seconds. Default: 0 - not expiring
	Ttl *int `pulumi:"ttl"`
}

// The set of arguments for constructing a IdentityUniversalAuthClientSecret resource.
type IdentityUniversalAuthClientSecretArgs struct {
	// The description of the client secret.
	Description pulumi.StringPtrInput
	// The ID of the identity to create a client secret for
	IdentityId pulumi.StringInput
	// The maximum number of times that the client secret can be used; a value of 0 implies infinite number of uses. Default: 0
	NumberOfUsesLimit pulumi.IntPtrInput
	// The lifetime for the client secret in seconds. Default: 0 - not expiring
	Ttl pulumi.IntPtrInput
}

func (IdentityUniversalAuthClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityUniversalAuthClientSecretArgs)(nil)).Elem()
}

type IdentityUniversalAuthClientSecretInput interface {
	pulumi.Input

	ToIdentityUniversalAuthClientSecretOutput() IdentityUniversalAuthClientSecretOutput
	ToIdentityUniversalAuthClientSecretOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretOutput
}

func (*IdentityUniversalAuthClientSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUniversalAuthClientSecret)(nil)).Elem()
}

func (i *IdentityUniversalAuthClientSecret) ToIdentityUniversalAuthClientSecretOutput() IdentityUniversalAuthClientSecretOutput {
	return i.ToIdentityUniversalAuthClientSecretOutputWithContext(context.Background())
}

func (i *IdentityUniversalAuthClientSecret) ToIdentityUniversalAuthClientSecretOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUniversalAuthClientSecretOutput)
}

// IdentityUniversalAuthClientSecretArrayInput is an input type that accepts IdentityUniversalAuthClientSecretArray and IdentityUniversalAuthClientSecretArrayOutput values.
// You can construct a concrete instance of `IdentityUniversalAuthClientSecretArrayInput` via:
//
//	IdentityUniversalAuthClientSecretArray{ IdentityUniversalAuthClientSecretArgs{...} }
type IdentityUniversalAuthClientSecretArrayInput interface {
	pulumi.Input

	ToIdentityUniversalAuthClientSecretArrayOutput() IdentityUniversalAuthClientSecretArrayOutput
	ToIdentityUniversalAuthClientSecretArrayOutputWithContext(context.Context) IdentityUniversalAuthClientSecretArrayOutput
}

type IdentityUniversalAuthClientSecretArray []IdentityUniversalAuthClientSecretInput

func (IdentityUniversalAuthClientSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityUniversalAuthClientSecret)(nil)).Elem()
}

func (i IdentityUniversalAuthClientSecretArray) ToIdentityUniversalAuthClientSecretArrayOutput() IdentityUniversalAuthClientSecretArrayOutput {
	return i.ToIdentityUniversalAuthClientSecretArrayOutputWithContext(context.Background())
}

func (i IdentityUniversalAuthClientSecretArray) ToIdentityUniversalAuthClientSecretArrayOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUniversalAuthClientSecretArrayOutput)
}

// IdentityUniversalAuthClientSecretMapInput is an input type that accepts IdentityUniversalAuthClientSecretMap and IdentityUniversalAuthClientSecretMapOutput values.
// You can construct a concrete instance of `IdentityUniversalAuthClientSecretMapInput` via:
//
//	IdentityUniversalAuthClientSecretMap{ "key": IdentityUniversalAuthClientSecretArgs{...} }
type IdentityUniversalAuthClientSecretMapInput interface {
	pulumi.Input

	ToIdentityUniversalAuthClientSecretMapOutput() IdentityUniversalAuthClientSecretMapOutput
	ToIdentityUniversalAuthClientSecretMapOutputWithContext(context.Context) IdentityUniversalAuthClientSecretMapOutput
}

type IdentityUniversalAuthClientSecretMap map[string]IdentityUniversalAuthClientSecretInput

func (IdentityUniversalAuthClientSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityUniversalAuthClientSecret)(nil)).Elem()
}

func (i IdentityUniversalAuthClientSecretMap) ToIdentityUniversalAuthClientSecretMapOutput() IdentityUniversalAuthClientSecretMapOutput {
	return i.ToIdentityUniversalAuthClientSecretMapOutputWithContext(context.Background())
}

func (i IdentityUniversalAuthClientSecretMap) ToIdentityUniversalAuthClientSecretMapOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityUniversalAuthClientSecretMapOutput)
}

type IdentityUniversalAuthClientSecretOutput struct{ *pulumi.OutputState }

func (IdentityUniversalAuthClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityUniversalAuthClientSecret)(nil)).Elem()
}

func (o IdentityUniversalAuthClientSecretOutput) ToIdentityUniversalAuthClientSecretOutput() IdentityUniversalAuthClientSecretOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretOutput) ToIdentityUniversalAuthClientSecretOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretOutput {
	return o
}

// The client ID of the secret.
func (o IdentityUniversalAuthClientSecretOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret.
func (o IdentityUniversalAuthClientSecretOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// The UTC timestamp of the created at.
func (o IdentityUniversalAuthClientSecretOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the client secret.
func (o IdentityUniversalAuthClientSecretOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the identity to create a client secret for
func (o IdentityUniversalAuthClientSecretOutput) IdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.StringOutput { return v.IdentityId }).(pulumi.StringOutput)
}

// A flag indicating token has been revoked
func (o IdentityUniversalAuthClientSecretOutput) IsRevoked() pulumi.BoolOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.BoolOutput { return v.IsRevoked }).(pulumi.BoolOutput)
}

// The number of times that the client secret is used
func (o IdentityUniversalAuthClientSecretOutput) NumberOfUses() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.IntOutput { return v.NumberOfUses }).(pulumi.IntOutput)
}

// The maximum number of times that the client secret can be used; a value of 0 implies infinite number of uses. Default: 0
func (o IdentityUniversalAuthClientSecretOutput) NumberOfUsesLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.IntOutput { return v.NumberOfUsesLimit }).(pulumi.IntOutput)
}

// The lifetime for the client secret in seconds. Default: 0 - not expiring
func (o IdentityUniversalAuthClientSecretOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v *IdentityUniversalAuthClientSecret) pulumi.IntOutput { return v.Ttl }).(pulumi.IntOutput)
}

type IdentityUniversalAuthClientSecretArrayOutput struct{ *pulumi.OutputState }

func (IdentityUniversalAuthClientSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityUniversalAuthClientSecret)(nil)).Elem()
}

func (o IdentityUniversalAuthClientSecretArrayOutput) ToIdentityUniversalAuthClientSecretArrayOutput() IdentityUniversalAuthClientSecretArrayOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretArrayOutput) ToIdentityUniversalAuthClientSecretArrayOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretArrayOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretArrayOutput) Index(i pulumi.IntInput) IdentityUniversalAuthClientSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityUniversalAuthClientSecret {
		return vs[0].([]*IdentityUniversalAuthClientSecret)[vs[1].(int)]
	}).(IdentityUniversalAuthClientSecretOutput)
}

type IdentityUniversalAuthClientSecretMapOutput struct{ *pulumi.OutputState }

func (IdentityUniversalAuthClientSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityUniversalAuthClientSecret)(nil)).Elem()
}

func (o IdentityUniversalAuthClientSecretMapOutput) ToIdentityUniversalAuthClientSecretMapOutput() IdentityUniversalAuthClientSecretMapOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretMapOutput) ToIdentityUniversalAuthClientSecretMapOutputWithContext(ctx context.Context) IdentityUniversalAuthClientSecretMapOutput {
	return o
}

func (o IdentityUniversalAuthClientSecretMapOutput) MapIndex(k pulumi.StringInput) IdentityUniversalAuthClientSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityUniversalAuthClientSecret {
		return vs[0].(map[string]*IdentityUniversalAuthClientSecret)[vs[1].(string)]
	}).(IdentityUniversalAuthClientSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUniversalAuthClientSecretInput)(nil)).Elem(), &IdentityUniversalAuthClientSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUniversalAuthClientSecretArrayInput)(nil)).Elem(), IdentityUniversalAuthClientSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityUniversalAuthClientSecretMapInput)(nil)).Elem(), IdentityUniversalAuthClientSecretMap{})
	pulumi.RegisterOutputType(IdentityUniversalAuthClientSecretOutput{})
	pulumi.RegisterOutputType(IdentityUniversalAuthClientSecretArrayOutput{})
	pulumi.RegisterOutputType(IdentityUniversalAuthClientSecretMapOutput{})
}
