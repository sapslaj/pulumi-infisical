// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package infisical

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sapslaj/pulumi-infisical/sdk/go/infisical/internal"
)

type AppConnectionDatabricks struct {
	pulumi.CustomResourceState

	// The credentials for the Databricks App Connection
	Credentials AppConnectionDatabricksCredentialsOutput `pulumi:"credentials"`
	// The hash of the Databricks App Connection credentials
	CredentialsHash pulumi.StringOutput `pulumi:"credentialsHash"`
	// An optional description for the Databricks App Connection.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The method used to authenticate with Databricks. Possible values are: service-principal
	Method pulumi.StringOutput `pulumi:"method"`
	// The name of the Databricks App Connection to create. Must be slug-friendly
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAppConnectionDatabricks registers a new resource with the given unique name, arguments, and options.
func NewAppConnectionDatabricks(ctx *pulumi.Context,
	name string, args *AppConnectionDatabricksArgs, opts ...pulumi.ResourceOption) (*AppConnectionDatabricks, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.Method == nil {
		return nil, errors.New("invalid value for required argument 'Method'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppConnectionDatabricks
	err := ctx.RegisterResource("infisical:index/appConnectionDatabricks:AppConnectionDatabricks", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppConnectionDatabricks gets an existing AppConnectionDatabricks resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppConnectionDatabricks(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppConnectionDatabricksState, opts ...pulumi.ResourceOption) (*AppConnectionDatabricks, error) {
	var resource AppConnectionDatabricks
	err := ctx.ReadResource("infisical:index/appConnectionDatabricks:AppConnectionDatabricks", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppConnectionDatabricks resources.
type appConnectionDatabricksState struct {
	// The credentials for the Databricks App Connection
	Credentials *AppConnectionDatabricksCredentials `pulumi:"credentials"`
	// The hash of the Databricks App Connection credentials
	CredentialsHash *string `pulumi:"credentialsHash"`
	// An optional description for the Databricks App Connection.
	Description *string `pulumi:"description"`
	// The method used to authenticate with Databricks. Possible values are: service-principal
	Method *string `pulumi:"method"`
	// The name of the Databricks App Connection to create. Must be slug-friendly
	Name *string `pulumi:"name"`
}

type AppConnectionDatabricksState struct {
	// The credentials for the Databricks App Connection
	Credentials AppConnectionDatabricksCredentialsPtrInput
	// The hash of the Databricks App Connection credentials
	CredentialsHash pulumi.StringPtrInput
	// An optional description for the Databricks App Connection.
	Description pulumi.StringPtrInput
	// The method used to authenticate with Databricks. Possible values are: service-principal
	Method pulumi.StringPtrInput
	// The name of the Databricks App Connection to create. Must be slug-friendly
	Name pulumi.StringPtrInput
}

func (AppConnectionDatabricksState) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectionDatabricksState)(nil)).Elem()
}

type appConnectionDatabricksArgs struct {
	// The credentials for the Databricks App Connection
	Credentials AppConnectionDatabricksCredentials `pulumi:"credentials"`
	// An optional description for the Databricks App Connection.
	Description *string `pulumi:"description"`
	// The method used to authenticate with Databricks. Possible values are: service-principal
	Method string `pulumi:"method"`
	// The name of the Databricks App Connection to create. Must be slug-friendly
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AppConnectionDatabricks resource.
type AppConnectionDatabricksArgs struct {
	// The credentials for the Databricks App Connection
	Credentials AppConnectionDatabricksCredentialsInput
	// An optional description for the Databricks App Connection.
	Description pulumi.StringPtrInput
	// The method used to authenticate with Databricks. Possible values are: service-principal
	Method pulumi.StringInput
	// The name of the Databricks App Connection to create. Must be slug-friendly
	Name pulumi.StringPtrInput
}

func (AppConnectionDatabricksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appConnectionDatabricksArgs)(nil)).Elem()
}

type AppConnectionDatabricksInput interface {
	pulumi.Input

	ToAppConnectionDatabricksOutput() AppConnectionDatabricksOutput
	ToAppConnectionDatabricksOutputWithContext(ctx context.Context) AppConnectionDatabricksOutput
}

func (*AppConnectionDatabricks) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionDatabricks)(nil)).Elem()
}

func (i *AppConnectionDatabricks) ToAppConnectionDatabricksOutput() AppConnectionDatabricksOutput {
	return i.ToAppConnectionDatabricksOutputWithContext(context.Background())
}

func (i *AppConnectionDatabricks) ToAppConnectionDatabricksOutputWithContext(ctx context.Context) AppConnectionDatabricksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionDatabricksOutput)
}

// AppConnectionDatabricksArrayInput is an input type that accepts AppConnectionDatabricksArray and AppConnectionDatabricksArrayOutput values.
// You can construct a concrete instance of `AppConnectionDatabricksArrayInput` via:
//
//	AppConnectionDatabricksArray{ AppConnectionDatabricksArgs{...} }
type AppConnectionDatabricksArrayInput interface {
	pulumi.Input

	ToAppConnectionDatabricksArrayOutput() AppConnectionDatabricksArrayOutput
	ToAppConnectionDatabricksArrayOutputWithContext(context.Context) AppConnectionDatabricksArrayOutput
}

type AppConnectionDatabricksArray []AppConnectionDatabricksInput

func (AppConnectionDatabricksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectionDatabricks)(nil)).Elem()
}

func (i AppConnectionDatabricksArray) ToAppConnectionDatabricksArrayOutput() AppConnectionDatabricksArrayOutput {
	return i.ToAppConnectionDatabricksArrayOutputWithContext(context.Background())
}

func (i AppConnectionDatabricksArray) ToAppConnectionDatabricksArrayOutputWithContext(ctx context.Context) AppConnectionDatabricksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionDatabricksArrayOutput)
}

// AppConnectionDatabricksMapInput is an input type that accepts AppConnectionDatabricksMap and AppConnectionDatabricksMapOutput values.
// You can construct a concrete instance of `AppConnectionDatabricksMapInput` via:
//
//	AppConnectionDatabricksMap{ "key": AppConnectionDatabricksArgs{...} }
type AppConnectionDatabricksMapInput interface {
	pulumi.Input

	ToAppConnectionDatabricksMapOutput() AppConnectionDatabricksMapOutput
	ToAppConnectionDatabricksMapOutputWithContext(context.Context) AppConnectionDatabricksMapOutput
}

type AppConnectionDatabricksMap map[string]AppConnectionDatabricksInput

func (AppConnectionDatabricksMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectionDatabricks)(nil)).Elem()
}

func (i AppConnectionDatabricksMap) ToAppConnectionDatabricksMapOutput() AppConnectionDatabricksMapOutput {
	return i.ToAppConnectionDatabricksMapOutputWithContext(context.Background())
}

func (i AppConnectionDatabricksMap) ToAppConnectionDatabricksMapOutputWithContext(ctx context.Context) AppConnectionDatabricksMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppConnectionDatabricksMapOutput)
}

type AppConnectionDatabricksOutput struct{ *pulumi.OutputState }

func (AppConnectionDatabricksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppConnectionDatabricks)(nil)).Elem()
}

func (o AppConnectionDatabricksOutput) ToAppConnectionDatabricksOutput() AppConnectionDatabricksOutput {
	return o
}

func (o AppConnectionDatabricksOutput) ToAppConnectionDatabricksOutputWithContext(ctx context.Context) AppConnectionDatabricksOutput {
	return o
}

// The credentials for the Databricks App Connection
func (o AppConnectionDatabricksOutput) Credentials() AppConnectionDatabricksCredentialsOutput {
	return o.ApplyT(func(v *AppConnectionDatabricks) AppConnectionDatabricksCredentialsOutput { return v.Credentials }).(AppConnectionDatabricksCredentialsOutput)
}

// The hash of the Databricks App Connection credentials
func (o AppConnectionDatabricksOutput) CredentialsHash() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionDatabricks) pulumi.StringOutput { return v.CredentialsHash }).(pulumi.StringOutput)
}

// An optional description for the Databricks App Connection.
func (o AppConnectionDatabricksOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppConnectionDatabricks) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The method used to authenticate with Databricks. Possible values are: service-principal
func (o AppConnectionDatabricksOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionDatabricks) pulumi.StringOutput { return v.Method }).(pulumi.StringOutput)
}

// The name of the Databricks App Connection to create. Must be slug-friendly
func (o AppConnectionDatabricksOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppConnectionDatabricks) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AppConnectionDatabricksArrayOutput struct{ *pulumi.OutputState }

func (AppConnectionDatabricksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppConnectionDatabricks)(nil)).Elem()
}

func (o AppConnectionDatabricksArrayOutput) ToAppConnectionDatabricksArrayOutput() AppConnectionDatabricksArrayOutput {
	return o
}

func (o AppConnectionDatabricksArrayOutput) ToAppConnectionDatabricksArrayOutputWithContext(ctx context.Context) AppConnectionDatabricksArrayOutput {
	return o
}

func (o AppConnectionDatabricksArrayOutput) Index(i pulumi.IntInput) AppConnectionDatabricksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppConnectionDatabricks {
		return vs[0].([]*AppConnectionDatabricks)[vs[1].(int)]
	}).(AppConnectionDatabricksOutput)
}

type AppConnectionDatabricksMapOutput struct{ *pulumi.OutputState }

func (AppConnectionDatabricksMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppConnectionDatabricks)(nil)).Elem()
}

func (o AppConnectionDatabricksMapOutput) ToAppConnectionDatabricksMapOutput() AppConnectionDatabricksMapOutput {
	return o
}

func (o AppConnectionDatabricksMapOutput) ToAppConnectionDatabricksMapOutputWithContext(ctx context.Context) AppConnectionDatabricksMapOutput {
	return o
}

func (o AppConnectionDatabricksMapOutput) MapIndex(k pulumi.StringInput) AppConnectionDatabricksOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppConnectionDatabricks {
		return vs[0].(map[string]*AppConnectionDatabricks)[vs[1].(string)]
	}).(AppConnectionDatabricksOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionDatabricksInput)(nil)).Elem(), &AppConnectionDatabricks{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionDatabricksArrayInput)(nil)).Elem(), AppConnectionDatabricksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppConnectionDatabricksMapInput)(nil)).Elem(), AppConnectionDatabricksMap{})
	pulumi.RegisterOutputType(AppConnectionDatabricksOutput{})
	pulumi.RegisterOutputType(AppConnectionDatabricksArrayOutput{})
	pulumi.RegisterOutputType(AppConnectionDatabricksMapOutput{})
}
