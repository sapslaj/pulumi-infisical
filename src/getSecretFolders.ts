// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecretFolders(args: GetSecretFoldersArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretFoldersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("infisical:index/getSecretFolders:getSecretFolders", {
        "environmentSlug": args.environmentSlug,
        "folderPath": args.folderPath,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretFolders.
 */
export interface GetSecretFoldersArgs {
    environmentSlug: string;
    folderPath: string;
    projectId: string;
}

/**
 * A collection of values returned by getSecretFolders.
 */
export interface GetSecretFoldersResult {
    readonly environmentSlug: string;
    readonly folderPath: string;
    readonly folders: outputs.GetSecretFoldersFolder[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly projectId: string;
}
export function getSecretFoldersOutput(args: GetSecretFoldersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecretFoldersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("infisical:index/getSecretFolders:getSecretFolders", {
        "environmentSlug": args.environmentSlug,
        "folderPath": args.folderPath,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretFolders.
 */
export interface GetSecretFoldersOutputArgs {
    environmentSlug: pulumi.Input<string>;
    folderPath: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
