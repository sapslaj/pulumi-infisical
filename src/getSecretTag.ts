// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecretTag(args: GetSecretTagArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretTagResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("infisical:index/getSecretTag:getSecretTag", {
        "projectId": args.projectId,
        "slug": args.slug,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretTag.
 */
export interface GetSecretTagArgs {
    projectId: string;
    slug: string;
}

/**
 * A collection of values returned by getSecretTag.
 */
export interface GetSecretTagResult {
    readonly color: string;
    readonly id: string;
    readonly name: string;
    readonly projectId: string;
    readonly slug: string;
}
export function getSecretTagOutput(args: GetSecretTagOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecretTagResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("infisical:index/getSecretTag:getSecretTag", {
        "projectId": args.projectId,
        "slug": args.slug,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretTag.
 */
export interface GetSecretTagOutputArgs {
    projectId: pulumi.Input<string>;
    slug: pulumi.Input<string>;
}
