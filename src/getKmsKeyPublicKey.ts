// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKmsKeyPublicKey(args: GetKmsKeyPublicKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsKeyPublicKeyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("infisical:index/getKmsKeyPublicKey:getKmsKeyPublicKey", {
        "keyId": args.keyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsKeyPublicKey.
 */
export interface GetKmsKeyPublicKeyArgs {
    keyId: string;
}

/**
 * A collection of values returned by getKmsKeyPublicKey.
 */
export interface GetKmsKeyPublicKeyResult {
    readonly encryptionAlgorithm: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyId: string;
    readonly keyUsage: string;
    readonly name: string;
    readonly publicKey: string;
    readonly signingAlgorithms: string[];
}
export function getKmsKeyPublicKeyOutput(args: GetKmsKeyPublicKeyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKmsKeyPublicKeyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("infisical:index/getKmsKeyPublicKey:getKmsKeyPublicKey", {
        "keyId": args.keyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsKeyPublicKey.
 */
export interface GetKmsKeyPublicKeyOutputArgs {
    keyId: pulumi.Input<string>;
}
