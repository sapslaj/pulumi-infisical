// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecrets(args: GetSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("infisical:index/getSecrets:getSecrets", {
        "envSlug": args.envSlug,
        "folderPath": args.folderPath,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsArgs {
    envSlug: string;
    folderPath: string;
    workspaceId?: string;
}

/**
 * A collection of values returned by getSecrets.
 */
export interface GetSecretsResult {
    readonly envSlug: string;
    readonly folderPath: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly secrets: {[key: string]: outputs.GetSecretsSecrets};
    readonly workspaceId: string;
}
export function getSecretsOutput(args: GetSecretsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecretsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("infisical:index/getSecrets:getSecrets", {
        "envSlug": args.envSlug,
        "folderPath": args.folderPath,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsOutputArgs {
    envSlug: pulumi.Input<string>;
    folderPath: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}
